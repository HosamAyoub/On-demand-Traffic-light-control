
LED.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00003d22  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000108  00800060  00003d22  00003db6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000038  00800168  00800168  00003ebe  2**0
                  ALLOC
  3 .stab         00002508  00000000  00000000  00003ec0  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00001501  00000000  00000000  000063c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000240  00000000  00000000  000078c9  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000297  00000000  00000000  00007b09  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00002c78  00000000  00000000  00007da0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000186d  00000000  00000000  0000aa18  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00001665  00000000  00000000  0000c285  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000260  00000000  00000000  0000d8ec  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000392  00000000  00000000  0000db4c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000ec0  00000000  00000000  0000dede  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  0000ed9e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 e4 15 	jmp	0x2bc8	; 0x2bc8 <__vector_1>
       8:	0c 94 29 16 	jmp	0x2c52	; 0x2c52 <__vector_2>
       c:	0c 94 6e 16 	jmp	0x2cdc	; 0x2cdc <__vector_3>
      10:	0c 94 16 14 	jmp	0x282c	; 0x282c <__vector_4>
      14:	0c 94 49 14 	jmp	0x2892	; 0x2892 <__vector_5>
      18:	0c 94 e0 12 	jmp	0x25c0	; 0x25c0 <__vector_6>
      1c:	0c 94 13 13 	jmp	0x2626	; 0x2626 <__vector_7>
      20:	0c 94 46 13 	jmp	0x268c	; 0x268c <__vector_8>
      24:	0c 94 79 13 	jmp	0x26f2	; 0x26f2 <__vector_9>
      28:	0c 94 06 11 	jmp	0x220c	; 0x220c <__vector_10>
      2c:	0c 94 39 11 	jmp	0x2272	; 0x2272 <__vector_11>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a8 e6       	ldi	r26, 0x68	; 104
      64:	b1 e0       	ldi	r27, 0x01	; 1
      66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
      68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
      6a:	a0 3a       	cpi	r26, 0xA0	; 160
      6c:	b1 07       	cpc	r27, r17
      6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>

00000070 <__do_copy_data>:
      70:	11 e0       	ldi	r17, 0x01	; 1
      72:	a0 e6       	ldi	r26, 0x60	; 96
      74:	b0 e0       	ldi	r27, 0x00	; 0
      76:	e2 e2       	ldi	r30, 0x22	; 34
      78:	fd e3       	ldi	r31, 0x3D	; 61
      7a:	02 c0       	rjmp	.+4      	; 0x80 <.do_copy_data_start>

0000007c <.do_copy_data_loop>:
      7c:	05 90       	lpm	r0, Z+
      7e:	0d 92       	st	X+, r0

00000080 <.do_copy_data_start>:
      80:	a8 36       	cpi	r26, 0x68	; 104
      82:	b1 07       	cpc	r27, r17
      84:	d9 f7       	brne	.-10     	; 0x7c <.do_copy_data_loop>
      86:	0e 94 ef 1d 	call	0x3bde	; 0x3bde <main>
      8a:	0c 94 8f 1e 	jmp	0x3d1e	; 0x3d1e <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__muldi3>:
      92:	a0 e3       	ldi	r26, 0x30	; 48
      94:	b0 e0       	ldi	r27, 0x00	; 0
      96:	ef e4       	ldi	r30, 0x4F	; 79
      98:	f0 e0       	ldi	r31, 0x00	; 0
      9a:	0c 94 58 1e 	jmp	0x3cb0	; 0x3cb0 <__prologue_saves__>
      9e:	a8 e0       	ldi	r26, 0x08	; 8
      a0:	4e 01       	movw	r8, r28
      a2:	08 94       	sec
      a4:	81 1c       	adc	r8, r1
      a6:	91 1c       	adc	r9, r1
      a8:	f4 01       	movw	r30, r8
      aa:	ba 2f       	mov	r27, r26
      ac:	11 92       	st	Z+, r1
      ae:	ba 95       	dec	r27
      b0:	e9 f7       	brne	.-6      	; 0xac <__muldi3+0x1a>
      b2:	29 83       	std	Y+1, r18	; 0x01
      b4:	3a 83       	std	Y+2, r19	; 0x02
      b6:	4b 83       	std	Y+3, r20	; 0x03
      b8:	5c 83       	std	Y+4, r21	; 0x04
      ba:	6d 83       	std	Y+5, r22	; 0x05
      bc:	7e 83       	std	Y+6, r23	; 0x06
      be:	8f 83       	std	Y+7, r24	; 0x07
      c0:	98 87       	std	Y+8, r25	; 0x08
      c2:	ce 01       	movw	r24, r28
      c4:	09 96       	adiw	r24, 0x09	; 9
      c6:	fc 01       	movw	r30, r24
      c8:	11 92       	st	Z+, r1
      ca:	aa 95       	dec	r26
      cc:	e9 f7       	brne	.-6      	; 0xc8 <__muldi3+0x36>
      ce:	a9 86       	std	Y+9, r10	; 0x09
      d0:	ba 86       	std	Y+10, r11	; 0x0a
      d2:	cb 86       	std	Y+11, r12	; 0x0b
      d4:	dc 86       	std	Y+12, r13	; 0x0c
      d6:	ed 86       	std	Y+13, r14	; 0x0d
      d8:	fe 86       	std	Y+14, r15	; 0x0e
      da:	0f 87       	std	Y+15, r16	; 0x0f
      dc:	18 8b       	std	Y+16, r17	; 0x10
      de:	29 81       	ldd	r18, Y+1	; 0x01
      e0:	3a 81       	ldd	r19, Y+2	; 0x02
      e2:	4b 81       	ldd	r20, Y+3	; 0x03
      e4:	5c 81       	ldd	r21, Y+4	; 0x04
      e6:	2d a7       	std	Y+45, r18	; 0x2d
      e8:	3e a7       	std	Y+46, r19	; 0x2e
      ea:	4f a7       	std	Y+47, r20	; 0x2f
      ec:	58 ab       	std	Y+48, r21	; 0x30
      ee:	79 01       	movw	r14, r18
      f0:	8a 01       	movw	r16, r20
      f2:	8f ef       	ldi	r24, 0xFF	; 255
      f4:	9f ef       	ldi	r25, 0xFF	; 255
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b0 e0       	ldi	r27, 0x00	; 0
      fa:	e8 22       	and	r14, r24
      fc:	f9 22       	and	r15, r25
      fe:	0a 23       	and	r16, r26
     100:	1b 23       	and	r17, r27
     102:	1a 01       	movw	r2, r20
     104:	44 24       	eor	r4, r4
     106:	55 24       	eor	r5, r5
     108:	29 85       	ldd	r18, Y+9	; 0x09
     10a:	3a 85       	ldd	r19, Y+10	; 0x0a
     10c:	4b 85       	ldd	r20, Y+11	; 0x0b
     10e:	5c 85       	ldd	r21, Y+12	; 0x0c
     110:	29 a7       	std	Y+41, r18	; 0x29
     112:	3a a7       	std	Y+42, r19	; 0x2a
     114:	4b a7       	std	Y+43, r20	; 0x2b
     116:	5c a7       	std	Y+44, r21	; 0x2c
     118:	59 01       	movw	r10, r18
     11a:	6a 01       	movw	r12, r20
     11c:	a8 22       	and	r10, r24
     11e:	b9 22       	and	r11, r25
     120:	ca 22       	and	r12, r26
     122:	db 22       	and	r13, r27
     124:	3a 01       	movw	r6, r20
     126:	88 24       	eor	r8, r8
     128:	99 24       	eor	r9, r9
     12a:	c6 01       	movw	r24, r12
     12c:	b5 01       	movw	r22, r10
     12e:	a8 01       	movw	r20, r16
     130:	97 01       	movw	r18, r14
     132:	0e 94 39 1e 	call	0x3c72	; 0x3c72 <__mulsi3>
     136:	6d a3       	std	Y+37, r22	; 0x25
     138:	7e a3       	std	Y+38, r23	; 0x26
     13a:	8f a3       	std	Y+39, r24	; 0x27
     13c:	98 a7       	std	Y+40, r25	; 0x28
     13e:	c4 01       	movw	r24, r8
     140:	b3 01       	movw	r22, r6
     142:	0e 94 39 1e 	call	0x3c72	; 0x3c72 <__mulsi3>
     146:	69 a3       	std	Y+33, r22	; 0x21
     148:	7a a3       	std	Y+34, r23	; 0x22
     14a:	8b a3       	std	Y+35, r24	; 0x23
     14c:	9c a3       	std	Y+36, r25	; 0x24
     14e:	c6 01       	movw	r24, r12
     150:	b5 01       	movw	r22, r10
     152:	a2 01       	movw	r20, r4
     154:	91 01       	movw	r18, r2
     156:	0e 94 39 1e 	call	0x3c72	; 0x3c72 <__mulsi3>
     15a:	7b 01       	movw	r14, r22
     15c:	8c 01       	movw	r16, r24
     15e:	c4 01       	movw	r24, r8
     160:	b3 01       	movw	r22, r6
     162:	0e 94 39 1e 	call	0x3c72	; 0x3c72 <__mulsi3>
     166:	5b 01       	movw	r10, r22
     168:	6c 01       	movw	r12, r24
     16a:	89 a1       	ldd	r24, Y+33	; 0x21
     16c:	9a a1       	ldd	r25, Y+34	; 0x22
     16e:	ab a1       	ldd	r26, Y+35	; 0x23
     170:	bc a1       	ldd	r27, Y+36	; 0x24
     172:	8e 0d       	add	r24, r14
     174:	9f 1d       	adc	r25, r15
     176:	a0 1f       	adc	r26, r16
     178:	b1 1f       	adc	r27, r17
     17a:	89 a3       	std	Y+33, r24	; 0x21
     17c:	9a a3       	std	Y+34, r25	; 0x22
     17e:	ab a3       	std	Y+35, r26	; 0x23
     180:	bc a3       	std	Y+36, r27	; 0x24
     182:	2d a1       	ldd	r18, Y+37	; 0x25
     184:	3e a1       	ldd	r19, Y+38	; 0x26
     186:	4f a1       	ldd	r20, Y+39	; 0x27
     188:	58 a5       	ldd	r21, Y+40	; 0x28
     18a:	ca 01       	movw	r24, r20
     18c:	aa 27       	eor	r26, r26
     18e:	bb 27       	eor	r27, r27
     190:	29 a1       	ldd	r18, Y+33	; 0x21
     192:	3a a1       	ldd	r19, Y+34	; 0x22
     194:	4b a1       	ldd	r20, Y+35	; 0x23
     196:	5c a1       	ldd	r21, Y+36	; 0x24
     198:	28 0f       	add	r18, r24
     19a:	39 1f       	adc	r19, r25
     19c:	4a 1f       	adc	r20, r26
     19e:	5b 1f       	adc	r21, r27
     1a0:	29 a3       	std	Y+33, r18	; 0x21
     1a2:	3a a3       	std	Y+34, r19	; 0x22
     1a4:	4b a3       	std	Y+35, r20	; 0x23
     1a6:	5c a3       	std	Y+36, r21	; 0x24
     1a8:	2e 15       	cp	r18, r14
     1aa:	3f 05       	cpc	r19, r15
     1ac:	40 07       	cpc	r20, r16
     1ae:	51 07       	cpc	r21, r17
     1b0:	40 f4       	brcc	.+16     	; 0x1c2 <__muldi3+0x130>
     1b2:	80 e0       	ldi	r24, 0x00	; 0
     1b4:	90 e0       	ldi	r25, 0x00	; 0
     1b6:	a1 e0       	ldi	r26, 0x01	; 1
     1b8:	b0 e0       	ldi	r27, 0x00	; 0
     1ba:	a8 0e       	add	r10, r24
     1bc:	b9 1e       	adc	r11, r25
     1be:	ca 1e       	adc	r12, r26
     1c0:	db 1e       	adc	r13, r27
     1c2:	89 a1       	ldd	r24, Y+33	; 0x21
     1c4:	9a a1       	ldd	r25, Y+34	; 0x22
     1c6:	ab a1       	ldd	r26, Y+35	; 0x23
     1c8:	bc a1       	ldd	r27, Y+36	; 0x24
     1ca:	9d 01       	movw	r18, r26
     1cc:	44 27       	eor	r20, r20
     1ce:	55 27       	eor	r21, r21
     1d0:	2a 0d       	add	r18, r10
     1d2:	3b 1d       	adc	r19, r11
     1d4:	4c 1d       	adc	r20, r12
     1d6:	5d 1d       	adc	r21, r13
     1d8:	2d 8f       	std	Y+29, r18	; 0x1d
     1da:	3e 8f       	std	Y+30, r19	; 0x1e
     1dc:	4f 8f       	std	Y+31, r20	; 0x1f
     1de:	58 a3       	std	Y+32, r21	; 0x20
     1e0:	6c 01       	movw	r12, r24
     1e2:	bb 24       	eor	r11, r11
     1e4:	aa 24       	eor	r10, r10
     1e6:	8d a1       	ldd	r24, Y+37	; 0x25
     1e8:	9e a1       	ldd	r25, Y+38	; 0x26
     1ea:	af a1       	ldd	r26, Y+39	; 0x27
     1ec:	b8 a5       	ldd	r27, Y+40	; 0x28
     1ee:	a0 70       	andi	r26, 0x00	; 0
     1f0:	b0 70       	andi	r27, 0x00	; 0
     1f2:	a8 0e       	add	r10, r24
     1f4:	b9 1e       	adc	r11, r25
     1f6:	ca 1e       	adc	r12, r26
     1f8:	db 1e       	adc	r13, r27
     1fa:	a9 8e       	std	Y+25, r10	; 0x19
     1fc:	ba 8e       	std	Y+26, r11	; 0x1a
     1fe:	cb 8e       	std	Y+27, r12	; 0x1b
     200:	dc 8e       	std	Y+28, r13	; 0x1c
     202:	9a 8c       	ldd	r9, Y+26	; 0x1a
     204:	8b 8c       	ldd	r8, Y+27	; 0x1b
     206:	7c 8c       	ldd	r7, Y+28	; 0x1c
     208:	9e 8d       	ldd	r25, Y+30	; 0x1e
     20a:	6f 8d       	ldd	r22, Y+31	; 0x1f
     20c:	78 a1       	ldd	r23, Y+32	; 0x20
     20e:	fe 01       	movw	r30, r28
     210:	71 96       	adiw	r30, 0x11	; 17
     212:	88 e0       	ldi	r24, 0x08	; 8
     214:	df 01       	movw	r26, r30
     216:	1d 92       	st	X+, r1
     218:	8a 95       	dec	r24
     21a:	e9 f7       	brne	.-6      	; 0x216 <__muldi3+0x184>
     21c:	2d 8b       	std	Y+21, r18	; 0x15
     21e:	9e 8b       	std	Y+22, r25	; 0x16
     220:	6f 8b       	std	Y+23, r22	; 0x17
     222:	78 8f       	std	Y+24, r23	; 0x18
     224:	2d 85       	ldd	r18, Y+13	; 0x0d
     226:	3e 85       	ldd	r19, Y+14	; 0x0e
     228:	4f 85       	ldd	r20, Y+15	; 0x0f
     22a:	58 89       	ldd	r21, Y+16	; 0x10
     22c:	6d a5       	ldd	r22, Y+45	; 0x2d
     22e:	7e a5       	ldd	r23, Y+46	; 0x2e
     230:	8f a5       	ldd	r24, Y+47	; 0x2f
     232:	98 a9       	ldd	r25, Y+48	; 0x30
     234:	0e 94 39 1e 	call	0x3c72	; 0x3c72 <__mulsi3>
     238:	7b 01       	movw	r14, r22
     23a:	8c 01       	movw	r16, r24
     23c:	2d 81       	ldd	r18, Y+5	; 0x05
     23e:	3e 81       	ldd	r19, Y+6	; 0x06
     240:	4f 81       	ldd	r20, Y+7	; 0x07
     242:	58 85       	ldd	r21, Y+8	; 0x08
     244:	69 a5       	ldd	r22, Y+41	; 0x29
     246:	7a a5       	ldd	r23, Y+42	; 0x2a
     248:	8b a5       	ldd	r24, Y+43	; 0x2b
     24a:	9c a5       	ldd	r25, Y+44	; 0x2c
     24c:	0e 94 39 1e 	call	0x3c72	; 0x3c72 <__mulsi3>
     250:	e6 0e       	add	r14, r22
     252:	f7 1e       	adc	r15, r23
     254:	08 1f       	adc	r16, r24
     256:	19 1f       	adc	r17, r25
     258:	6d 89       	ldd	r22, Y+21	; 0x15
     25a:	7e 89       	ldd	r23, Y+22	; 0x16
     25c:	8f 89       	ldd	r24, Y+23	; 0x17
     25e:	98 8d       	ldd	r25, Y+24	; 0x18
     260:	6e 0d       	add	r22, r14
     262:	7f 1d       	adc	r23, r15
     264:	80 1f       	adc	r24, r16
     266:	91 1f       	adc	r25, r17
     268:	6d 8b       	std	Y+21, r22	; 0x15
     26a:	7e 8b       	std	Y+22, r23	; 0x16
     26c:	8f 8b       	std	Y+23, r24	; 0x17
     26e:	98 8f       	std	Y+24, r25	; 0x18
     270:	ee 89       	ldd	r30, Y+22	; 0x16
     272:	2a 2d       	mov	r18, r10
     274:	39 2d       	mov	r19, r9
     276:	48 2d       	mov	r20, r8
     278:	57 2d       	mov	r21, r7
     27a:	7e 2f       	mov	r23, r30
     27c:	8f 89       	ldd	r24, Y+23	; 0x17
     27e:	98 8d       	ldd	r25, Y+24	; 0x18
     280:	e0 96       	adiw	r28, 0x30	; 48
     282:	e2 e1       	ldi	r30, 0x12	; 18
     284:	0c 94 74 1e 	jmp	0x3ce8	; 0x3ce8 <__epilogue_restores__>

00000288 <__ashldi3>:
     288:	ef 92       	push	r14
     28a:	ff 92       	push	r15
     28c:	0f 93       	push	r16
     28e:	df 93       	push	r29
     290:	cf 93       	push	r28
     292:	cd b7       	in	r28, 0x3d	; 61
     294:	de b7       	in	r29, 0x3e	; 62
     296:	60 97       	sbiw	r28, 0x10	; 16
     298:	0f b6       	in	r0, 0x3f	; 63
     29a:	f8 94       	cli
     29c:	de bf       	out	0x3e, r29	; 62
     29e:	0f be       	out	0x3f, r0	; 63
     2a0:	cd bf       	out	0x3d, r28	; 61
     2a2:	a8 2f       	mov	r26, r24
     2a4:	00 23       	and	r16, r16
     2a6:	09 f4       	brne	.+2      	; 0x2aa <__ashldi3+0x22>
     2a8:	61 c0       	rjmp	.+194    	; 0x36c <__ashldi3+0xe4>
     2aa:	7e 01       	movw	r14, r28
     2ac:	08 94       	sec
     2ae:	e1 1c       	adc	r14, r1
     2b0:	f1 1c       	adc	r15, r1
     2b2:	88 e0       	ldi	r24, 0x08	; 8
     2b4:	f7 01       	movw	r30, r14
     2b6:	11 92       	st	Z+, r1
     2b8:	8a 95       	dec	r24
     2ba:	e9 f7       	brne	.-6      	; 0x2b6 <__ashldi3+0x2e>
     2bc:	29 83       	std	Y+1, r18	; 0x01
     2be:	3a 83       	std	Y+2, r19	; 0x02
     2c0:	4b 83       	std	Y+3, r20	; 0x03
     2c2:	5c 83       	std	Y+4, r21	; 0x04
     2c4:	6d 83       	std	Y+5, r22	; 0x05
     2c6:	7e 83       	std	Y+6, r23	; 0x06
     2c8:	af 83       	std	Y+7, r26	; 0x07
     2ca:	98 87       	std	Y+8, r25	; 0x08
     2cc:	80 e2       	ldi	r24, 0x20	; 32
     2ce:	80 1b       	sub	r24, r16
     2d0:	e8 2f       	mov	r30, r24
     2d2:	ff 27       	eor	r31, r31
     2d4:	e7 fd       	sbrc	r30, 7
     2d6:	f0 95       	com	r31
     2d8:	49 81       	ldd	r20, Y+1	; 0x01
     2da:	5a 81       	ldd	r21, Y+2	; 0x02
     2dc:	6b 81       	ldd	r22, Y+3	; 0x03
     2de:	7c 81       	ldd	r23, Y+4	; 0x04
     2e0:	18 16       	cp	r1, r24
     2e2:	84 f0       	brlt	.+32     	; 0x304 <__ashldi3+0x7c>
     2e4:	19 86       	std	Y+9, r1	; 0x09
     2e6:	1a 86       	std	Y+10, r1	; 0x0a
     2e8:	1b 86       	std	Y+11, r1	; 0x0b
     2ea:	1c 86       	std	Y+12, r1	; 0x0c
     2ec:	88 27       	eor	r24, r24
     2ee:	99 27       	eor	r25, r25
     2f0:	8e 1b       	sub	r24, r30
     2f2:	9f 0b       	sbc	r25, r31
     2f4:	04 c0       	rjmp	.+8      	; 0x2fe <__ashldi3+0x76>
     2f6:	44 0f       	add	r20, r20
     2f8:	55 1f       	adc	r21, r21
     2fa:	66 1f       	adc	r22, r22
     2fc:	77 1f       	adc	r23, r23
     2fe:	8a 95       	dec	r24
     300:	d2 f7       	brpl	.-12     	; 0x2f6 <__ashldi3+0x6e>
     302:	28 c0       	rjmp	.+80     	; 0x354 <__ashldi3+0xcc>
     304:	20 2f       	mov	r18, r16
     306:	33 27       	eor	r19, r19
     308:	27 fd       	sbrc	r18, 7
     30a:	30 95       	com	r19
     30c:	db 01       	movw	r26, r22
     30e:	ca 01       	movw	r24, r20
     310:	02 2e       	mov	r0, r18
     312:	04 c0       	rjmp	.+8      	; 0x31c <__ashldi3+0x94>
     314:	88 0f       	add	r24, r24
     316:	99 1f       	adc	r25, r25
     318:	aa 1f       	adc	r26, r26
     31a:	bb 1f       	adc	r27, r27
     31c:	0a 94       	dec	r0
     31e:	d2 f7       	brpl	.-12     	; 0x314 <__ashldi3+0x8c>
     320:	89 87       	std	Y+9, r24	; 0x09
     322:	9a 87       	std	Y+10, r25	; 0x0a
     324:	ab 87       	std	Y+11, r26	; 0x0b
     326:	bc 87       	std	Y+12, r27	; 0x0c
     328:	04 c0       	rjmp	.+8      	; 0x332 <__ashldi3+0xaa>
     32a:	76 95       	lsr	r23
     32c:	67 95       	ror	r22
     32e:	57 95       	ror	r21
     330:	47 95       	ror	r20
     332:	ea 95       	dec	r30
     334:	d2 f7       	brpl	.-12     	; 0x32a <__ashldi3+0xa2>
     336:	8d 81       	ldd	r24, Y+5	; 0x05
     338:	9e 81       	ldd	r25, Y+6	; 0x06
     33a:	af 81       	ldd	r26, Y+7	; 0x07
     33c:	b8 85       	ldd	r27, Y+8	; 0x08
     33e:	04 c0       	rjmp	.+8      	; 0x348 <__ashldi3+0xc0>
     340:	88 0f       	add	r24, r24
     342:	99 1f       	adc	r25, r25
     344:	aa 1f       	adc	r26, r26
     346:	bb 1f       	adc	r27, r27
     348:	2a 95       	dec	r18
     34a:	d2 f7       	brpl	.-12     	; 0x340 <__ashldi3+0xb8>
     34c:	48 2b       	or	r20, r24
     34e:	59 2b       	or	r21, r25
     350:	6a 2b       	or	r22, r26
     352:	7b 2b       	or	r23, r27
     354:	4d 87       	std	Y+13, r20	; 0x0d
     356:	5e 87       	std	Y+14, r21	; 0x0e
     358:	6f 87       	std	Y+15, r22	; 0x0f
     35a:	78 8b       	std	Y+16, r23	; 0x10
     35c:	29 85       	ldd	r18, Y+9	; 0x09
     35e:	3a 85       	ldd	r19, Y+10	; 0x0a
     360:	4b 85       	ldd	r20, Y+11	; 0x0b
     362:	5c 85       	ldd	r21, Y+12	; 0x0c
     364:	6d 85       	ldd	r22, Y+13	; 0x0d
     366:	7e 85       	ldd	r23, Y+14	; 0x0e
     368:	af 85       	ldd	r26, Y+15	; 0x0f
     36a:	98 89       	ldd	r25, Y+16	; 0x10
     36c:	8a 2f       	mov	r24, r26
     36e:	60 96       	adiw	r28, 0x10	; 16
     370:	0f b6       	in	r0, 0x3f	; 63
     372:	f8 94       	cli
     374:	de bf       	out	0x3e, r29	; 62
     376:	0f be       	out	0x3f, r0	; 63
     378:	cd bf       	out	0x3d, r28	; 61
     37a:	cf 91       	pop	r28
     37c:	df 91       	pop	r29
     37e:	0f 91       	pop	r16
     380:	ff 90       	pop	r15
     382:	ef 90       	pop	r14
     384:	08 95       	ret

00000386 <__fixunssfsi>:
     386:	ef 92       	push	r14
     388:	ff 92       	push	r15
     38a:	0f 93       	push	r16
     38c:	1f 93       	push	r17
     38e:	7b 01       	movw	r14, r22
     390:	8c 01       	movw	r16, r24
     392:	20 e0       	ldi	r18, 0x00	; 0
     394:	30 e0       	ldi	r19, 0x00	; 0
     396:	40 e0       	ldi	r20, 0x00	; 0
     398:	5f e4       	ldi	r21, 0x4F	; 79
     39a:	0e 94 4b 06 	call	0xc96	; 0xc96 <__gesf2>
     39e:	88 23       	and	r24, r24
     3a0:	8c f0       	brlt	.+34     	; 0x3c4 <__fixunssfsi+0x3e>
     3a2:	c8 01       	movw	r24, r16
     3a4:	b7 01       	movw	r22, r14
     3a6:	20 e0       	ldi	r18, 0x00	; 0
     3a8:	30 e0       	ldi	r19, 0x00	; 0
     3aa:	40 e0       	ldi	r20, 0x00	; 0
     3ac:	5f e4       	ldi	r21, 0x4F	; 79
     3ae:	0e 94 17 04 	call	0x82e	; 0x82e <__subsf3>
     3b2:	0e 94 09 07 	call	0xe12	; 0xe12 <__fixsfsi>
     3b6:	9b 01       	movw	r18, r22
     3b8:	ac 01       	movw	r20, r24
     3ba:	20 50       	subi	r18, 0x00	; 0
     3bc:	30 40       	sbci	r19, 0x00	; 0
     3be:	40 40       	sbci	r20, 0x00	; 0
     3c0:	50 48       	sbci	r21, 0x80	; 128
     3c2:	06 c0       	rjmp	.+12     	; 0x3d0 <__fixunssfsi+0x4a>
     3c4:	c8 01       	movw	r24, r16
     3c6:	b7 01       	movw	r22, r14
     3c8:	0e 94 09 07 	call	0xe12	; 0xe12 <__fixsfsi>
     3cc:	9b 01       	movw	r18, r22
     3ce:	ac 01       	movw	r20, r24
     3d0:	b9 01       	movw	r22, r18
     3d2:	ca 01       	movw	r24, r20
     3d4:	1f 91       	pop	r17
     3d6:	0f 91       	pop	r16
     3d8:	ff 90       	pop	r15
     3da:	ef 90       	pop	r14
     3dc:	08 95       	ret

000003de <__floatundisf>:
     3de:	a2 e0       	ldi	r26, 0x02	; 2
     3e0:	b0 e0       	ldi	r27, 0x00	; 0
     3e2:	e5 ef       	ldi	r30, 0xF5	; 245
     3e4:	f1 e0       	ldi	r31, 0x01	; 1
     3e6:	0c 94 58 1e 	jmp	0x3cb0	; 0x3cb0 <__prologue_saves__>
     3ea:	12 2f       	mov	r17, r18
     3ec:	b3 2e       	mov	r11, r19
     3ee:	a4 2e       	mov	r10, r20
     3f0:	95 2e       	mov	r9, r21
     3f2:	86 2e       	mov	r8, r22
     3f4:	37 2e       	mov	r3, r23
     3f6:	28 2e       	mov	r2, r24
     3f8:	9a 83       	std	Y+2, r25	; 0x02
     3fa:	c2 2e       	mov	r12, r18
     3fc:	d3 2e       	mov	r13, r19
     3fe:	e4 2e       	mov	r14, r20
     400:	f5 2e       	mov	r15, r21
     402:	a7 01       	movw	r20, r14
     404:	96 01       	movw	r18, r12
     406:	60 e0       	ldi	r22, 0x00	; 0
     408:	70 e0       	ldi	r23, 0x00	; 0
     40a:	80 e0       	ldi	r24, 0x00	; 0
     40c:	90 e0       	ldi	r25, 0x00	; 0
     40e:	21 17       	cp	r18, r17
     410:	a1 f4       	brne	.+40     	; 0x43a <__floatundisf+0x5c>
     412:	3b 15       	cp	r19, r11
     414:	91 f4       	brne	.+36     	; 0x43a <__floatundisf+0x5c>
     416:	4a 15       	cp	r20, r10
     418:	81 f4       	brne	.+32     	; 0x43a <__floatundisf+0x5c>
     41a:	59 15       	cp	r21, r9
     41c:	71 f4       	brne	.+28     	; 0x43a <__floatundisf+0x5c>
     41e:	68 15       	cp	r22, r8
     420:	61 f4       	brne	.+24     	; 0x43a <__floatundisf+0x5c>
     422:	73 15       	cp	r23, r3
     424:	51 f4       	brne	.+20     	; 0x43a <__floatundisf+0x5c>
     426:	82 15       	cp	r24, r2
     428:	41 f4       	brne	.+16     	; 0x43a <__floatundisf+0x5c>
     42a:	aa 81       	ldd	r26, Y+2	; 0x02
     42c:	9a 17       	cp	r25, r26
     42e:	29 f4       	brne	.+10     	; 0x43a <__floatundisf+0x5c>
     430:	c7 01       	movw	r24, r14
     432:	b6 01       	movw	r22, r12
     434:	0e 94 5d 07 	call	0xeba	; 0xeba <__floatunsisf>
     438:	aa c0       	rjmp	.+340    	; 0x58e <__floatundisf+0x1b0>
     43a:	21 2f       	mov	r18, r17
     43c:	3b 2d       	mov	r19, r11
     43e:	4a 2d       	mov	r20, r10
     440:	59 2d       	mov	r21, r9
     442:	68 2d       	mov	r22, r8
     444:	73 2d       	mov	r23, r3
     446:	82 2d       	mov	r24, r2
     448:	9a 81       	ldd	r25, Y+2	; 0x02
     44a:	00 e2       	ldi	r16, 0x20	; 32
     44c:	0e 94 d6 07 	call	0xfac	; 0xfac <__lshrdi3>
     450:	c9 01       	movw	r24, r18
     452:	da 01       	movw	r26, r20
     454:	80 30       	cpi	r24, 0x00	; 0
     456:	e0 e0       	ldi	r30, 0x00	; 0
     458:	9e 07       	cpc	r25, r30
     45a:	e1 e0       	ldi	r30, 0x01	; 1
     45c:	ae 07       	cpc	r26, r30
     45e:	e0 e0       	ldi	r30, 0x00	; 0
     460:	be 07       	cpc	r27, r30
     462:	80 f4       	brcc	.+32     	; 0x484 <__floatundisf+0xa6>
     464:	8f 3f       	cpi	r24, 0xFF	; 255
     466:	91 05       	cpc	r25, r1
     468:	a1 05       	cpc	r26, r1
     46a:	b1 05       	cpc	r27, r1
     46c:	31 f0       	breq	.+12     	; 0x47a <__floatundisf+0x9c>
     46e:	28 f0       	brcs	.+10     	; 0x47a <__floatundisf+0x9c>
     470:	28 e0       	ldi	r18, 0x08	; 8
     472:	30 e0       	ldi	r19, 0x00	; 0
     474:	40 e0       	ldi	r20, 0x00	; 0
     476:	50 e0       	ldi	r21, 0x00	; 0
     478:	16 c0       	rjmp	.+44     	; 0x4a6 <__floatundisf+0xc8>
     47a:	20 e0       	ldi	r18, 0x00	; 0
     47c:	30 e0       	ldi	r19, 0x00	; 0
     47e:	40 e0       	ldi	r20, 0x00	; 0
     480:	50 e0       	ldi	r21, 0x00	; 0
     482:	11 c0       	rjmp	.+34     	; 0x4a6 <__floatundisf+0xc8>
     484:	80 30       	cpi	r24, 0x00	; 0
     486:	f0 e0       	ldi	r31, 0x00	; 0
     488:	9f 07       	cpc	r25, r31
     48a:	f0 e0       	ldi	r31, 0x00	; 0
     48c:	af 07       	cpc	r26, r31
     48e:	f1 e0       	ldi	r31, 0x01	; 1
     490:	bf 07       	cpc	r27, r31
     492:	28 f0       	brcs	.+10     	; 0x49e <__floatundisf+0xc0>
     494:	28 e1       	ldi	r18, 0x18	; 24
     496:	30 e0       	ldi	r19, 0x00	; 0
     498:	40 e0       	ldi	r20, 0x00	; 0
     49a:	50 e0       	ldi	r21, 0x00	; 0
     49c:	04 c0       	rjmp	.+8      	; 0x4a6 <__floatundisf+0xc8>
     49e:	20 e1       	ldi	r18, 0x10	; 16
     4a0:	30 e0       	ldi	r19, 0x00	; 0
     4a2:	40 e0       	ldi	r20, 0x00	; 0
     4a4:	50 e0       	ldi	r21, 0x00	; 0
     4a6:	02 2e       	mov	r0, r18
     4a8:	04 c0       	rjmp	.+8      	; 0x4b2 <__floatundisf+0xd4>
     4aa:	b6 95       	lsr	r27
     4ac:	a7 95       	ror	r26
     4ae:	97 95       	ror	r25
     4b0:	87 95       	ror	r24
     4b2:	0a 94       	dec	r0
     4b4:	d2 f7       	brpl	.-12     	; 0x4aa <__floatundisf+0xcc>
     4b6:	fc 01       	movw	r30, r24
     4b8:	e8 59       	subi	r30, 0x98	; 152
     4ba:	ff 4f       	sbci	r31, 0xFF	; 255
     4bc:	80 81       	ld	r24, Z
     4be:	29 01       	movw	r4, r18
     4c0:	3a 01       	movw	r6, r20
     4c2:	48 0e       	add	r4, r24
     4c4:	51 1c       	adc	r5, r1
     4c6:	61 1c       	adc	r6, r1
     4c8:	71 1c       	adc	r7, r1
     4ca:	49 82       	std	Y+1, r4	; 0x01
     4cc:	21 2f       	mov	r18, r17
     4ce:	3b 2d       	mov	r19, r11
     4d0:	4a 2d       	mov	r20, r10
     4d2:	59 2d       	mov	r21, r9
     4d4:	68 2d       	mov	r22, r8
     4d6:	73 2d       	mov	r23, r3
     4d8:	82 2d       	mov	r24, r2
     4da:	9a 81       	ldd	r25, Y+2	; 0x02
     4dc:	04 2d       	mov	r16, r4
     4de:	0e 94 d6 07 	call	0xfac	; 0xfac <__lshrdi3>
     4e2:	c9 01       	movw	r24, r18
     4e4:	da 01       	movw	r26, r20
     4e6:	4c 01       	movw	r8, r24
     4e8:	5d 01       	movw	r10, r26
     4ea:	80 e2       	ldi	r24, 0x20	; 32
     4ec:	90 e0       	ldi	r25, 0x00	; 0
     4ee:	84 19       	sub	r24, r4
     4f0:	95 09       	sbc	r25, r5
     4f2:	04 c0       	rjmp	.+8      	; 0x4fc <__floatundisf+0x11e>
     4f4:	cc 0c       	add	r12, r12
     4f6:	dd 1c       	adc	r13, r13
     4f8:	ee 1c       	adc	r14, r14
     4fa:	ff 1c       	adc	r15, r15
     4fc:	8a 95       	dec	r24
     4fe:	d2 f7       	brpl	.-12     	; 0x4f4 <__floatundisf+0x116>
     500:	c1 14       	cp	r12, r1
     502:	d1 04       	cpc	r13, r1
     504:	e1 04       	cpc	r14, r1
     506:	f1 04       	cpc	r15, r1
     508:	41 f0       	breq	.+16     	; 0x51a <__floatundisf+0x13c>
     50a:	81 e0       	ldi	r24, 0x01	; 1
     50c:	90 e0       	ldi	r25, 0x00	; 0
     50e:	a0 e0       	ldi	r26, 0x00	; 0
     510:	b0 e0       	ldi	r27, 0x00	; 0
     512:	88 2a       	or	r8, r24
     514:	99 2a       	or	r9, r25
     516:	aa 2a       	or	r10, r26
     518:	bb 2a       	or	r11, r27
     51a:	90 e2       	ldi	r25, 0x20	; 32
     51c:	49 16       	cp	r4, r25
     51e:	51 04       	cpc	r5, r1
     520:	61 04       	cpc	r6, r1
     522:	71 04       	cpc	r7, r1
     524:	59 f4       	brne	.+22     	; 0x53c <__floatundisf+0x15e>
     526:	0f 2e       	mov	r0, r31
     528:	f0 e0       	ldi	r31, 0x00	; 0
     52a:	ef 2e       	mov	r14, r31
     52c:	f0 e0       	ldi	r31, 0x00	; 0
     52e:	ff 2e       	mov	r15, r31
     530:	f0 e8       	ldi	r31, 0x80	; 128
     532:	0f 2f       	mov	r16, r31
     534:	ff e4       	ldi	r31, 0x4F	; 79
     536:	1f 2f       	mov	r17, r31
     538:	f0 2d       	mov	r31, r0
     53a:	21 c0       	rjmp	.+66     	; 0x57e <__floatundisf+0x1a0>
     53c:	af e1       	ldi	r26, 0x1F	; 31
     53e:	4a 16       	cp	r4, r26
     540:	51 04       	cpc	r5, r1
     542:	61 04       	cpc	r6, r1
     544:	71 04       	cpc	r7, r1
     546:	59 f4       	brne	.+22     	; 0x55e <__floatundisf+0x180>
     548:	0f 2e       	mov	r0, r31
     54a:	f0 e0       	ldi	r31, 0x00	; 0
     54c:	ef 2e       	mov	r14, r31
     54e:	f0 e0       	ldi	r31, 0x00	; 0
     550:	ff 2e       	mov	r15, r31
     552:	f0 e0       	ldi	r31, 0x00	; 0
     554:	0f 2f       	mov	r16, r31
     556:	ff e4       	ldi	r31, 0x4F	; 79
     558:	1f 2f       	mov	r17, r31
     55a:	f0 2d       	mov	r31, r0
     55c:	10 c0       	rjmp	.+32     	; 0x57e <__floatundisf+0x1a0>
     55e:	61 e0       	ldi	r22, 0x01	; 1
     560:	70 e0       	ldi	r23, 0x00	; 0
     562:	80 e0       	ldi	r24, 0x00	; 0
     564:	90 e0       	ldi	r25, 0x00	; 0
     566:	09 80       	ldd	r0, Y+1	; 0x01
     568:	04 c0       	rjmp	.+8      	; 0x572 <__floatundisf+0x194>
     56a:	66 0f       	add	r22, r22
     56c:	77 1f       	adc	r23, r23
     56e:	88 1f       	adc	r24, r24
     570:	99 1f       	adc	r25, r25
     572:	0a 94       	dec	r0
     574:	d2 f7       	brpl	.-12     	; 0x56a <__floatundisf+0x18c>
     576:	0e 94 ab 06 	call	0xd56	; 0xd56 <__floatsisf>
     57a:	7b 01       	movw	r14, r22
     57c:	8c 01       	movw	r16, r24
     57e:	c5 01       	movw	r24, r10
     580:	b4 01       	movw	r22, r8
     582:	0e 94 5d 07 	call	0xeba	; 0xeba <__floatunsisf>
     586:	a8 01       	movw	r20, r16
     588:	97 01       	movw	r18, r14
     58a:	0e 94 75 04 	call	0x8ea	; 0x8ea <__mulsf3>
     58e:	22 96       	adiw	r28, 0x02	; 2
     590:	e2 e1       	ldi	r30, 0x12	; 18
     592:	0c 94 74 1e 	jmp	0x3ce8	; 0x3ce8 <__epilogue_restores__>

00000596 <_fpadd_parts>:
     596:	a0 e0       	ldi	r26, 0x00	; 0
     598:	b0 e0       	ldi	r27, 0x00	; 0
     59a:	e1 ed       	ldi	r30, 0xD1	; 209
     59c:	f2 e0       	ldi	r31, 0x02	; 2
     59e:	0c 94 58 1e 	jmp	0x3cb0	; 0x3cb0 <__prologue_saves__>
     5a2:	dc 01       	movw	r26, r24
     5a4:	2b 01       	movw	r4, r22
     5a6:	fa 01       	movw	r30, r20
     5a8:	9c 91       	ld	r25, X
     5aa:	92 30       	cpi	r25, 0x02	; 2
     5ac:	08 f4       	brcc	.+2      	; 0x5b0 <_fpadd_parts+0x1a>
     5ae:	39 c1       	rjmp	.+626    	; 0x822 <_fpadd_parts+0x28c>
     5b0:	eb 01       	movw	r28, r22
     5b2:	88 81       	ld	r24, Y
     5b4:	82 30       	cpi	r24, 0x02	; 2
     5b6:	08 f4       	brcc	.+2      	; 0x5ba <_fpadd_parts+0x24>
     5b8:	33 c1       	rjmp	.+614    	; 0x820 <_fpadd_parts+0x28a>
     5ba:	94 30       	cpi	r25, 0x04	; 4
     5bc:	69 f4       	brne	.+26     	; 0x5d8 <_fpadd_parts+0x42>
     5be:	84 30       	cpi	r24, 0x04	; 4
     5c0:	09 f0       	breq	.+2      	; 0x5c4 <_fpadd_parts+0x2e>
     5c2:	2f c1       	rjmp	.+606    	; 0x822 <_fpadd_parts+0x28c>
     5c4:	11 96       	adiw	r26, 0x01	; 1
     5c6:	9c 91       	ld	r25, X
     5c8:	11 97       	sbiw	r26, 0x01	; 1
     5ca:	89 81       	ldd	r24, Y+1	; 0x01
     5cc:	98 17       	cp	r25, r24
     5ce:	09 f4       	brne	.+2      	; 0x5d2 <_fpadd_parts+0x3c>
     5d0:	28 c1       	rjmp	.+592    	; 0x822 <_fpadd_parts+0x28c>
     5d2:	a0 e6       	ldi	r26, 0x60	; 96
     5d4:	b0 e0       	ldi	r27, 0x00	; 0
     5d6:	25 c1       	rjmp	.+586    	; 0x822 <_fpadd_parts+0x28c>
     5d8:	84 30       	cpi	r24, 0x04	; 4
     5da:	09 f4       	brne	.+2      	; 0x5de <_fpadd_parts+0x48>
     5dc:	21 c1       	rjmp	.+578    	; 0x820 <_fpadd_parts+0x28a>
     5de:	82 30       	cpi	r24, 0x02	; 2
     5e0:	a9 f4       	brne	.+42     	; 0x60c <_fpadd_parts+0x76>
     5e2:	92 30       	cpi	r25, 0x02	; 2
     5e4:	09 f0       	breq	.+2      	; 0x5e8 <_fpadd_parts+0x52>
     5e6:	1d c1       	rjmp	.+570    	; 0x822 <_fpadd_parts+0x28c>
     5e8:	9a 01       	movw	r18, r20
     5ea:	ad 01       	movw	r20, r26
     5ec:	88 e0       	ldi	r24, 0x08	; 8
     5ee:	ea 01       	movw	r28, r20
     5f0:	09 90       	ld	r0, Y+
     5f2:	ae 01       	movw	r20, r28
     5f4:	e9 01       	movw	r28, r18
     5f6:	09 92       	st	Y+, r0
     5f8:	9e 01       	movw	r18, r28
     5fa:	81 50       	subi	r24, 0x01	; 1
     5fc:	c1 f7       	brne	.-16     	; 0x5ee <_fpadd_parts+0x58>
     5fe:	e2 01       	movw	r28, r4
     600:	89 81       	ldd	r24, Y+1	; 0x01
     602:	11 96       	adiw	r26, 0x01	; 1
     604:	9c 91       	ld	r25, X
     606:	89 23       	and	r24, r25
     608:	81 83       	std	Z+1, r24	; 0x01
     60a:	08 c1       	rjmp	.+528    	; 0x81c <_fpadd_parts+0x286>
     60c:	92 30       	cpi	r25, 0x02	; 2
     60e:	09 f4       	brne	.+2      	; 0x612 <_fpadd_parts+0x7c>
     610:	07 c1       	rjmp	.+526    	; 0x820 <_fpadd_parts+0x28a>
     612:	12 96       	adiw	r26, 0x02	; 2
     614:	2d 90       	ld	r2, X+
     616:	3c 90       	ld	r3, X
     618:	13 97       	sbiw	r26, 0x03	; 3
     61a:	eb 01       	movw	r28, r22
     61c:	8a 81       	ldd	r24, Y+2	; 0x02
     61e:	9b 81       	ldd	r25, Y+3	; 0x03
     620:	14 96       	adiw	r26, 0x04	; 4
     622:	ad 90       	ld	r10, X+
     624:	bd 90       	ld	r11, X+
     626:	cd 90       	ld	r12, X+
     628:	dc 90       	ld	r13, X
     62a:	17 97       	sbiw	r26, 0x07	; 7
     62c:	ec 80       	ldd	r14, Y+4	; 0x04
     62e:	fd 80       	ldd	r15, Y+5	; 0x05
     630:	0e 81       	ldd	r16, Y+6	; 0x06
     632:	1f 81       	ldd	r17, Y+7	; 0x07
     634:	91 01       	movw	r18, r2
     636:	28 1b       	sub	r18, r24
     638:	39 0b       	sbc	r19, r25
     63a:	b9 01       	movw	r22, r18
     63c:	37 ff       	sbrs	r19, 7
     63e:	04 c0       	rjmp	.+8      	; 0x648 <_fpadd_parts+0xb2>
     640:	66 27       	eor	r22, r22
     642:	77 27       	eor	r23, r23
     644:	62 1b       	sub	r22, r18
     646:	73 0b       	sbc	r23, r19
     648:	60 32       	cpi	r22, 0x20	; 32
     64a:	71 05       	cpc	r23, r1
     64c:	0c f0       	brlt	.+2      	; 0x650 <_fpadd_parts+0xba>
     64e:	61 c0       	rjmp	.+194    	; 0x712 <_fpadd_parts+0x17c>
     650:	12 16       	cp	r1, r18
     652:	13 06       	cpc	r1, r19
     654:	6c f5       	brge	.+90     	; 0x6b0 <_fpadd_parts+0x11a>
     656:	37 01       	movw	r6, r14
     658:	48 01       	movw	r8, r16
     65a:	06 2e       	mov	r0, r22
     65c:	04 c0       	rjmp	.+8      	; 0x666 <_fpadd_parts+0xd0>
     65e:	96 94       	lsr	r9
     660:	87 94       	ror	r8
     662:	77 94       	ror	r7
     664:	67 94       	ror	r6
     666:	0a 94       	dec	r0
     668:	d2 f7       	brpl	.-12     	; 0x65e <_fpadd_parts+0xc8>
     66a:	21 e0       	ldi	r18, 0x01	; 1
     66c:	30 e0       	ldi	r19, 0x00	; 0
     66e:	40 e0       	ldi	r20, 0x00	; 0
     670:	50 e0       	ldi	r21, 0x00	; 0
     672:	04 c0       	rjmp	.+8      	; 0x67c <_fpadd_parts+0xe6>
     674:	22 0f       	add	r18, r18
     676:	33 1f       	adc	r19, r19
     678:	44 1f       	adc	r20, r20
     67a:	55 1f       	adc	r21, r21
     67c:	6a 95       	dec	r22
     67e:	d2 f7       	brpl	.-12     	; 0x674 <_fpadd_parts+0xde>
     680:	21 50       	subi	r18, 0x01	; 1
     682:	30 40       	sbci	r19, 0x00	; 0
     684:	40 40       	sbci	r20, 0x00	; 0
     686:	50 40       	sbci	r21, 0x00	; 0
     688:	2e 21       	and	r18, r14
     68a:	3f 21       	and	r19, r15
     68c:	40 23       	and	r20, r16
     68e:	51 23       	and	r21, r17
     690:	21 15       	cp	r18, r1
     692:	31 05       	cpc	r19, r1
     694:	41 05       	cpc	r20, r1
     696:	51 05       	cpc	r21, r1
     698:	21 f0       	breq	.+8      	; 0x6a2 <_fpadd_parts+0x10c>
     69a:	21 e0       	ldi	r18, 0x01	; 1
     69c:	30 e0       	ldi	r19, 0x00	; 0
     69e:	40 e0       	ldi	r20, 0x00	; 0
     6a0:	50 e0       	ldi	r21, 0x00	; 0
     6a2:	79 01       	movw	r14, r18
     6a4:	8a 01       	movw	r16, r20
     6a6:	e6 28       	or	r14, r6
     6a8:	f7 28       	or	r15, r7
     6aa:	08 29       	or	r16, r8
     6ac:	19 29       	or	r17, r9
     6ae:	3c c0       	rjmp	.+120    	; 0x728 <_fpadd_parts+0x192>
     6b0:	23 2b       	or	r18, r19
     6b2:	d1 f1       	breq	.+116    	; 0x728 <_fpadd_parts+0x192>
     6b4:	26 0e       	add	r2, r22
     6b6:	37 1e       	adc	r3, r23
     6b8:	35 01       	movw	r6, r10
     6ba:	46 01       	movw	r8, r12
     6bc:	06 2e       	mov	r0, r22
     6be:	04 c0       	rjmp	.+8      	; 0x6c8 <_fpadd_parts+0x132>
     6c0:	96 94       	lsr	r9
     6c2:	87 94       	ror	r8
     6c4:	77 94       	ror	r7
     6c6:	67 94       	ror	r6
     6c8:	0a 94       	dec	r0
     6ca:	d2 f7       	brpl	.-12     	; 0x6c0 <_fpadd_parts+0x12a>
     6cc:	21 e0       	ldi	r18, 0x01	; 1
     6ce:	30 e0       	ldi	r19, 0x00	; 0
     6d0:	40 e0       	ldi	r20, 0x00	; 0
     6d2:	50 e0       	ldi	r21, 0x00	; 0
     6d4:	04 c0       	rjmp	.+8      	; 0x6de <_fpadd_parts+0x148>
     6d6:	22 0f       	add	r18, r18
     6d8:	33 1f       	adc	r19, r19
     6da:	44 1f       	adc	r20, r20
     6dc:	55 1f       	adc	r21, r21
     6de:	6a 95       	dec	r22
     6e0:	d2 f7       	brpl	.-12     	; 0x6d6 <_fpadd_parts+0x140>
     6e2:	21 50       	subi	r18, 0x01	; 1
     6e4:	30 40       	sbci	r19, 0x00	; 0
     6e6:	40 40       	sbci	r20, 0x00	; 0
     6e8:	50 40       	sbci	r21, 0x00	; 0
     6ea:	2a 21       	and	r18, r10
     6ec:	3b 21       	and	r19, r11
     6ee:	4c 21       	and	r20, r12
     6f0:	5d 21       	and	r21, r13
     6f2:	21 15       	cp	r18, r1
     6f4:	31 05       	cpc	r19, r1
     6f6:	41 05       	cpc	r20, r1
     6f8:	51 05       	cpc	r21, r1
     6fa:	21 f0       	breq	.+8      	; 0x704 <_fpadd_parts+0x16e>
     6fc:	21 e0       	ldi	r18, 0x01	; 1
     6fe:	30 e0       	ldi	r19, 0x00	; 0
     700:	40 e0       	ldi	r20, 0x00	; 0
     702:	50 e0       	ldi	r21, 0x00	; 0
     704:	59 01       	movw	r10, r18
     706:	6a 01       	movw	r12, r20
     708:	a6 28       	or	r10, r6
     70a:	b7 28       	or	r11, r7
     70c:	c8 28       	or	r12, r8
     70e:	d9 28       	or	r13, r9
     710:	0b c0       	rjmp	.+22     	; 0x728 <_fpadd_parts+0x192>
     712:	82 15       	cp	r24, r2
     714:	93 05       	cpc	r25, r3
     716:	2c f0       	brlt	.+10     	; 0x722 <_fpadd_parts+0x18c>
     718:	1c 01       	movw	r2, r24
     71a:	aa 24       	eor	r10, r10
     71c:	bb 24       	eor	r11, r11
     71e:	65 01       	movw	r12, r10
     720:	03 c0       	rjmp	.+6      	; 0x728 <_fpadd_parts+0x192>
     722:	ee 24       	eor	r14, r14
     724:	ff 24       	eor	r15, r15
     726:	87 01       	movw	r16, r14
     728:	11 96       	adiw	r26, 0x01	; 1
     72a:	9c 91       	ld	r25, X
     72c:	d2 01       	movw	r26, r4
     72e:	11 96       	adiw	r26, 0x01	; 1
     730:	8c 91       	ld	r24, X
     732:	98 17       	cp	r25, r24
     734:	09 f4       	brne	.+2      	; 0x738 <_fpadd_parts+0x1a2>
     736:	45 c0       	rjmp	.+138    	; 0x7c2 <_fpadd_parts+0x22c>
     738:	99 23       	and	r25, r25
     73a:	39 f0       	breq	.+14     	; 0x74a <_fpadd_parts+0x1b4>
     73c:	a8 01       	movw	r20, r16
     73e:	97 01       	movw	r18, r14
     740:	2a 19       	sub	r18, r10
     742:	3b 09       	sbc	r19, r11
     744:	4c 09       	sbc	r20, r12
     746:	5d 09       	sbc	r21, r13
     748:	06 c0       	rjmp	.+12     	; 0x756 <_fpadd_parts+0x1c0>
     74a:	a6 01       	movw	r20, r12
     74c:	95 01       	movw	r18, r10
     74e:	2e 19       	sub	r18, r14
     750:	3f 09       	sbc	r19, r15
     752:	40 0b       	sbc	r20, r16
     754:	51 0b       	sbc	r21, r17
     756:	57 fd       	sbrc	r21, 7
     758:	08 c0       	rjmp	.+16     	; 0x76a <_fpadd_parts+0x1d4>
     75a:	11 82       	std	Z+1, r1	; 0x01
     75c:	33 82       	std	Z+3, r3	; 0x03
     75e:	22 82       	std	Z+2, r2	; 0x02
     760:	24 83       	std	Z+4, r18	; 0x04
     762:	35 83       	std	Z+5, r19	; 0x05
     764:	46 83       	std	Z+6, r20	; 0x06
     766:	57 83       	std	Z+7, r21	; 0x07
     768:	1d c0       	rjmp	.+58     	; 0x7a4 <_fpadd_parts+0x20e>
     76a:	81 e0       	ldi	r24, 0x01	; 1
     76c:	81 83       	std	Z+1, r24	; 0x01
     76e:	33 82       	std	Z+3, r3	; 0x03
     770:	22 82       	std	Z+2, r2	; 0x02
     772:	88 27       	eor	r24, r24
     774:	99 27       	eor	r25, r25
     776:	dc 01       	movw	r26, r24
     778:	82 1b       	sub	r24, r18
     77a:	93 0b       	sbc	r25, r19
     77c:	a4 0b       	sbc	r26, r20
     77e:	b5 0b       	sbc	r27, r21
     780:	84 83       	std	Z+4, r24	; 0x04
     782:	95 83       	std	Z+5, r25	; 0x05
     784:	a6 83       	std	Z+6, r26	; 0x06
     786:	b7 83       	std	Z+7, r27	; 0x07
     788:	0d c0       	rjmp	.+26     	; 0x7a4 <_fpadd_parts+0x20e>
     78a:	22 0f       	add	r18, r18
     78c:	33 1f       	adc	r19, r19
     78e:	44 1f       	adc	r20, r20
     790:	55 1f       	adc	r21, r21
     792:	24 83       	std	Z+4, r18	; 0x04
     794:	35 83       	std	Z+5, r19	; 0x05
     796:	46 83       	std	Z+6, r20	; 0x06
     798:	57 83       	std	Z+7, r21	; 0x07
     79a:	82 81       	ldd	r24, Z+2	; 0x02
     79c:	93 81       	ldd	r25, Z+3	; 0x03
     79e:	01 97       	sbiw	r24, 0x01	; 1
     7a0:	93 83       	std	Z+3, r25	; 0x03
     7a2:	82 83       	std	Z+2, r24	; 0x02
     7a4:	24 81       	ldd	r18, Z+4	; 0x04
     7a6:	35 81       	ldd	r19, Z+5	; 0x05
     7a8:	46 81       	ldd	r20, Z+6	; 0x06
     7aa:	57 81       	ldd	r21, Z+7	; 0x07
     7ac:	da 01       	movw	r26, r20
     7ae:	c9 01       	movw	r24, r18
     7b0:	01 97       	sbiw	r24, 0x01	; 1
     7b2:	a1 09       	sbc	r26, r1
     7b4:	b1 09       	sbc	r27, r1
     7b6:	8f 5f       	subi	r24, 0xFF	; 255
     7b8:	9f 4f       	sbci	r25, 0xFF	; 255
     7ba:	af 4f       	sbci	r26, 0xFF	; 255
     7bc:	bf 43       	sbci	r27, 0x3F	; 63
     7be:	28 f3       	brcs	.-54     	; 0x78a <_fpadd_parts+0x1f4>
     7c0:	0b c0       	rjmp	.+22     	; 0x7d8 <_fpadd_parts+0x242>
     7c2:	91 83       	std	Z+1, r25	; 0x01
     7c4:	33 82       	std	Z+3, r3	; 0x03
     7c6:	22 82       	std	Z+2, r2	; 0x02
     7c8:	ea 0c       	add	r14, r10
     7ca:	fb 1c       	adc	r15, r11
     7cc:	0c 1d       	adc	r16, r12
     7ce:	1d 1d       	adc	r17, r13
     7d0:	e4 82       	std	Z+4, r14	; 0x04
     7d2:	f5 82       	std	Z+5, r15	; 0x05
     7d4:	06 83       	std	Z+6, r16	; 0x06
     7d6:	17 83       	std	Z+7, r17	; 0x07
     7d8:	83 e0       	ldi	r24, 0x03	; 3
     7da:	80 83       	st	Z, r24
     7dc:	24 81       	ldd	r18, Z+4	; 0x04
     7de:	35 81       	ldd	r19, Z+5	; 0x05
     7e0:	46 81       	ldd	r20, Z+6	; 0x06
     7e2:	57 81       	ldd	r21, Z+7	; 0x07
     7e4:	57 ff       	sbrs	r21, 7
     7e6:	1a c0       	rjmp	.+52     	; 0x81c <_fpadd_parts+0x286>
     7e8:	c9 01       	movw	r24, r18
     7ea:	aa 27       	eor	r26, r26
     7ec:	97 fd       	sbrc	r25, 7
     7ee:	a0 95       	com	r26
     7f0:	ba 2f       	mov	r27, r26
     7f2:	81 70       	andi	r24, 0x01	; 1
     7f4:	90 70       	andi	r25, 0x00	; 0
     7f6:	a0 70       	andi	r26, 0x00	; 0
     7f8:	b0 70       	andi	r27, 0x00	; 0
     7fa:	56 95       	lsr	r21
     7fc:	47 95       	ror	r20
     7fe:	37 95       	ror	r19
     800:	27 95       	ror	r18
     802:	82 2b       	or	r24, r18
     804:	93 2b       	or	r25, r19
     806:	a4 2b       	or	r26, r20
     808:	b5 2b       	or	r27, r21
     80a:	84 83       	std	Z+4, r24	; 0x04
     80c:	95 83       	std	Z+5, r25	; 0x05
     80e:	a6 83       	std	Z+6, r26	; 0x06
     810:	b7 83       	std	Z+7, r27	; 0x07
     812:	82 81       	ldd	r24, Z+2	; 0x02
     814:	93 81       	ldd	r25, Z+3	; 0x03
     816:	01 96       	adiw	r24, 0x01	; 1
     818:	93 83       	std	Z+3, r25	; 0x03
     81a:	82 83       	std	Z+2, r24	; 0x02
     81c:	df 01       	movw	r26, r30
     81e:	01 c0       	rjmp	.+2      	; 0x822 <_fpadd_parts+0x28c>
     820:	d2 01       	movw	r26, r4
     822:	cd 01       	movw	r24, r26
     824:	cd b7       	in	r28, 0x3d	; 61
     826:	de b7       	in	r29, 0x3e	; 62
     828:	e2 e1       	ldi	r30, 0x12	; 18
     82a:	0c 94 74 1e 	jmp	0x3ce8	; 0x3ce8 <__epilogue_restores__>

0000082e <__subsf3>:
     82e:	a0 e2       	ldi	r26, 0x20	; 32
     830:	b0 e0       	ldi	r27, 0x00	; 0
     832:	ed e1       	ldi	r30, 0x1D	; 29
     834:	f4 e0       	ldi	r31, 0x04	; 4
     836:	0c 94 64 1e 	jmp	0x3cc8	; 0x3cc8 <__prologue_saves__+0x18>
     83a:	69 83       	std	Y+1, r22	; 0x01
     83c:	7a 83       	std	Y+2, r23	; 0x02
     83e:	8b 83       	std	Y+3, r24	; 0x03
     840:	9c 83       	std	Y+4, r25	; 0x04
     842:	2d 83       	std	Y+5, r18	; 0x05
     844:	3e 83       	std	Y+6, r19	; 0x06
     846:	4f 83       	std	Y+7, r20	; 0x07
     848:	58 87       	std	Y+8, r21	; 0x08
     84a:	e9 e0       	ldi	r30, 0x09	; 9
     84c:	ee 2e       	mov	r14, r30
     84e:	f1 2c       	mov	r15, r1
     850:	ec 0e       	add	r14, r28
     852:	fd 1e       	adc	r15, r29
     854:	ce 01       	movw	r24, r28
     856:	01 96       	adiw	r24, 0x01	; 1
     858:	b7 01       	movw	r22, r14
     85a:	0e 94 79 09 	call	0x12f2	; 0x12f2 <__unpack_f>
     85e:	8e 01       	movw	r16, r28
     860:	0f 5e       	subi	r16, 0xEF	; 239
     862:	1f 4f       	sbci	r17, 0xFF	; 255
     864:	ce 01       	movw	r24, r28
     866:	05 96       	adiw	r24, 0x05	; 5
     868:	b8 01       	movw	r22, r16
     86a:	0e 94 79 09 	call	0x12f2	; 0x12f2 <__unpack_f>
     86e:	8a 89       	ldd	r24, Y+18	; 0x12
     870:	91 e0       	ldi	r25, 0x01	; 1
     872:	89 27       	eor	r24, r25
     874:	8a 8b       	std	Y+18, r24	; 0x12
     876:	c7 01       	movw	r24, r14
     878:	b8 01       	movw	r22, r16
     87a:	ae 01       	movw	r20, r28
     87c:	47 5e       	subi	r20, 0xE7	; 231
     87e:	5f 4f       	sbci	r21, 0xFF	; 255
     880:	0e 94 cb 02 	call	0x596	; 0x596 <_fpadd_parts>
     884:	0e 94 a4 08 	call	0x1148	; 0x1148 <__pack_f>
     888:	a0 96       	adiw	r28, 0x20	; 32
     88a:	e6 e0       	ldi	r30, 0x06	; 6
     88c:	0c 94 80 1e 	jmp	0x3d00	; 0x3d00 <__epilogue_restores__+0x18>

00000890 <__addsf3>:
     890:	a0 e2       	ldi	r26, 0x20	; 32
     892:	b0 e0       	ldi	r27, 0x00	; 0
     894:	ee e4       	ldi	r30, 0x4E	; 78
     896:	f4 e0       	ldi	r31, 0x04	; 4
     898:	0c 94 64 1e 	jmp	0x3cc8	; 0x3cc8 <__prologue_saves__+0x18>
     89c:	69 83       	std	Y+1, r22	; 0x01
     89e:	7a 83       	std	Y+2, r23	; 0x02
     8a0:	8b 83       	std	Y+3, r24	; 0x03
     8a2:	9c 83       	std	Y+4, r25	; 0x04
     8a4:	2d 83       	std	Y+5, r18	; 0x05
     8a6:	3e 83       	std	Y+6, r19	; 0x06
     8a8:	4f 83       	std	Y+7, r20	; 0x07
     8aa:	58 87       	std	Y+8, r21	; 0x08
     8ac:	f9 e0       	ldi	r31, 0x09	; 9
     8ae:	ef 2e       	mov	r14, r31
     8b0:	f1 2c       	mov	r15, r1
     8b2:	ec 0e       	add	r14, r28
     8b4:	fd 1e       	adc	r15, r29
     8b6:	ce 01       	movw	r24, r28
     8b8:	01 96       	adiw	r24, 0x01	; 1
     8ba:	b7 01       	movw	r22, r14
     8bc:	0e 94 79 09 	call	0x12f2	; 0x12f2 <__unpack_f>
     8c0:	8e 01       	movw	r16, r28
     8c2:	0f 5e       	subi	r16, 0xEF	; 239
     8c4:	1f 4f       	sbci	r17, 0xFF	; 255
     8c6:	ce 01       	movw	r24, r28
     8c8:	05 96       	adiw	r24, 0x05	; 5
     8ca:	b8 01       	movw	r22, r16
     8cc:	0e 94 79 09 	call	0x12f2	; 0x12f2 <__unpack_f>
     8d0:	c7 01       	movw	r24, r14
     8d2:	b8 01       	movw	r22, r16
     8d4:	ae 01       	movw	r20, r28
     8d6:	47 5e       	subi	r20, 0xE7	; 231
     8d8:	5f 4f       	sbci	r21, 0xFF	; 255
     8da:	0e 94 cb 02 	call	0x596	; 0x596 <_fpadd_parts>
     8de:	0e 94 a4 08 	call	0x1148	; 0x1148 <__pack_f>
     8e2:	a0 96       	adiw	r28, 0x20	; 32
     8e4:	e6 e0       	ldi	r30, 0x06	; 6
     8e6:	0c 94 80 1e 	jmp	0x3d00	; 0x3d00 <__epilogue_restores__+0x18>

000008ea <__mulsf3>:
     8ea:	a0 e2       	ldi	r26, 0x20	; 32
     8ec:	b0 e0       	ldi	r27, 0x00	; 0
     8ee:	eb e7       	ldi	r30, 0x7B	; 123
     8f0:	f4 e0       	ldi	r31, 0x04	; 4
     8f2:	0c 94 58 1e 	jmp	0x3cb0	; 0x3cb0 <__prologue_saves__>
     8f6:	69 83       	std	Y+1, r22	; 0x01
     8f8:	7a 83       	std	Y+2, r23	; 0x02
     8fa:	8b 83       	std	Y+3, r24	; 0x03
     8fc:	9c 83       	std	Y+4, r25	; 0x04
     8fe:	2d 83       	std	Y+5, r18	; 0x05
     900:	3e 83       	std	Y+6, r19	; 0x06
     902:	4f 83       	std	Y+7, r20	; 0x07
     904:	58 87       	std	Y+8, r21	; 0x08
     906:	ce 01       	movw	r24, r28
     908:	01 96       	adiw	r24, 0x01	; 1
     90a:	be 01       	movw	r22, r28
     90c:	67 5f       	subi	r22, 0xF7	; 247
     90e:	7f 4f       	sbci	r23, 0xFF	; 255
     910:	0e 94 79 09 	call	0x12f2	; 0x12f2 <__unpack_f>
     914:	ce 01       	movw	r24, r28
     916:	05 96       	adiw	r24, 0x05	; 5
     918:	be 01       	movw	r22, r28
     91a:	6f 5e       	subi	r22, 0xEF	; 239
     91c:	7f 4f       	sbci	r23, 0xFF	; 255
     91e:	0e 94 79 09 	call	0x12f2	; 0x12f2 <__unpack_f>
     922:	99 85       	ldd	r25, Y+9	; 0x09
     924:	92 30       	cpi	r25, 0x02	; 2
     926:	88 f0       	brcs	.+34     	; 0x94a <__mulsf3+0x60>
     928:	89 89       	ldd	r24, Y+17	; 0x11
     92a:	82 30       	cpi	r24, 0x02	; 2
     92c:	c8 f0       	brcs	.+50     	; 0x960 <__mulsf3+0x76>
     92e:	94 30       	cpi	r25, 0x04	; 4
     930:	19 f4       	brne	.+6      	; 0x938 <__mulsf3+0x4e>
     932:	82 30       	cpi	r24, 0x02	; 2
     934:	51 f4       	brne	.+20     	; 0x94a <__mulsf3+0x60>
     936:	04 c0       	rjmp	.+8      	; 0x940 <__mulsf3+0x56>
     938:	84 30       	cpi	r24, 0x04	; 4
     93a:	29 f4       	brne	.+10     	; 0x946 <__mulsf3+0x5c>
     93c:	92 30       	cpi	r25, 0x02	; 2
     93e:	81 f4       	brne	.+32     	; 0x960 <__mulsf3+0x76>
     940:	80 e6       	ldi	r24, 0x60	; 96
     942:	90 e0       	ldi	r25, 0x00	; 0
     944:	c6 c0       	rjmp	.+396    	; 0xad2 <__mulsf3+0x1e8>
     946:	92 30       	cpi	r25, 0x02	; 2
     948:	49 f4       	brne	.+18     	; 0x95c <__mulsf3+0x72>
     94a:	20 e0       	ldi	r18, 0x00	; 0
     94c:	9a 85       	ldd	r25, Y+10	; 0x0a
     94e:	8a 89       	ldd	r24, Y+18	; 0x12
     950:	98 13       	cpse	r25, r24
     952:	21 e0       	ldi	r18, 0x01	; 1
     954:	2a 87       	std	Y+10, r18	; 0x0a
     956:	ce 01       	movw	r24, r28
     958:	09 96       	adiw	r24, 0x09	; 9
     95a:	bb c0       	rjmp	.+374    	; 0xad2 <__mulsf3+0x1e8>
     95c:	82 30       	cpi	r24, 0x02	; 2
     95e:	49 f4       	brne	.+18     	; 0x972 <__mulsf3+0x88>
     960:	20 e0       	ldi	r18, 0x00	; 0
     962:	9a 85       	ldd	r25, Y+10	; 0x0a
     964:	8a 89       	ldd	r24, Y+18	; 0x12
     966:	98 13       	cpse	r25, r24
     968:	21 e0       	ldi	r18, 0x01	; 1
     96a:	2a 8b       	std	Y+18, r18	; 0x12
     96c:	ce 01       	movw	r24, r28
     96e:	41 96       	adiw	r24, 0x11	; 17
     970:	b0 c0       	rjmp	.+352    	; 0xad2 <__mulsf3+0x1e8>
     972:	2d 84       	ldd	r2, Y+13	; 0x0d
     974:	3e 84       	ldd	r3, Y+14	; 0x0e
     976:	4f 84       	ldd	r4, Y+15	; 0x0f
     978:	58 88       	ldd	r5, Y+16	; 0x10
     97a:	6d 88       	ldd	r6, Y+21	; 0x15
     97c:	7e 88       	ldd	r7, Y+22	; 0x16
     97e:	8f 88       	ldd	r8, Y+23	; 0x17
     980:	98 8c       	ldd	r9, Y+24	; 0x18
     982:	ee 24       	eor	r14, r14
     984:	ff 24       	eor	r15, r15
     986:	87 01       	movw	r16, r14
     988:	aa 24       	eor	r10, r10
     98a:	bb 24       	eor	r11, r11
     98c:	65 01       	movw	r12, r10
     98e:	40 e0       	ldi	r20, 0x00	; 0
     990:	50 e0       	ldi	r21, 0x00	; 0
     992:	60 e0       	ldi	r22, 0x00	; 0
     994:	70 e0       	ldi	r23, 0x00	; 0
     996:	e0 e0       	ldi	r30, 0x00	; 0
     998:	f0 e0       	ldi	r31, 0x00	; 0
     99a:	c1 01       	movw	r24, r2
     99c:	81 70       	andi	r24, 0x01	; 1
     99e:	90 70       	andi	r25, 0x00	; 0
     9a0:	89 2b       	or	r24, r25
     9a2:	e9 f0       	breq	.+58     	; 0x9de <__mulsf3+0xf4>
     9a4:	e6 0c       	add	r14, r6
     9a6:	f7 1c       	adc	r15, r7
     9a8:	08 1d       	adc	r16, r8
     9aa:	19 1d       	adc	r17, r9
     9ac:	9a 01       	movw	r18, r20
     9ae:	ab 01       	movw	r20, r22
     9b0:	2a 0d       	add	r18, r10
     9b2:	3b 1d       	adc	r19, r11
     9b4:	4c 1d       	adc	r20, r12
     9b6:	5d 1d       	adc	r21, r13
     9b8:	80 e0       	ldi	r24, 0x00	; 0
     9ba:	90 e0       	ldi	r25, 0x00	; 0
     9bc:	a0 e0       	ldi	r26, 0x00	; 0
     9be:	b0 e0       	ldi	r27, 0x00	; 0
     9c0:	e6 14       	cp	r14, r6
     9c2:	f7 04       	cpc	r15, r7
     9c4:	08 05       	cpc	r16, r8
     9c6:	19 05       	cpc	r17, r9
     9c8:	20 f4       	brcc	.+8      	; 0x9d2 <__mulsf3+0xe8>
     9ca:	81 e0       	ldi	r24, 0x01	; 1
     9cc:	90 e0       	ldi	r25, 0x00	; 0
     9ce:	a0 e0       	ldi	r26, 0x00	; 0
     9d0:	b0 e0       	ldi	r27, 0x00	; 0
     9d2:	ba 01       	movw	r22, r20
     9d4:	a9 01       	movw	r20, r18
     9d6:	48 0f       	add	r20, r24
     9d8:	59 1f       	adc	r21, r25
     9da:	6a 1f       	adc	r22, r26
     9dc:	7b 1f       	adc	r23, r27
     9de:	aa 0c       	add	r10, r10
     9e0:	bb 1c       	adc	r11, r11
     9e2:	cc 1c       	adc	r12, r12
     9e4:	dd 1c       	adc	r13, r13
     9e6:	97 fe       	sbrs	r9, 7
     9e8:	08 c0       	rjmp	.+16     	; 0x9fa <__mulsf3+0x110>
     9ea:	81 e0       	ldi	r24, 0x01	; 1
     9ec:	90 e0       	ldi	r25, 0x00	; 0
     9ee:	a0 e0       	ldi	r26, 0x00	; 0
     9f0:	b0 e0       	ldi	r27, 0x00	; 0
     9f2:	a8 2a       	or	r10, r24
     9f4:	b9 2a       	or	r11, r25
     9f6:	ca 2a       	or	r12, r26
     9f8:	db 2a       	or	r13, r27
     9fa:	31 96       	adiw	r30, 0x01	; 1
     9fc:	e0 32       	cpi	r30, 0x20	; 32
     9fe:	f1 05       	cpc	r31, r1
     a00:	49 f0       	breq	.+18     	; 0xa14 <__mulsf3+0x12a>
     a02:	66 0c       	add	r6, r6
     a04:	77 1c       	adc	r7, r7
     a06:	88 1c       	adc	r8, r8
     a08:	99 1c       	adc	r9, r9
     a0a:	56 94       	lsr	r5
     a0c:	47 94       	ror	r4
     a0e:	37 94       	ror	r3
     a10:	27 94       	ror	r2
     a12:	c3 cf       	rjmp	.-122    	; 0x99a <__mulsf3+0xb0>
     a14:	fa 85       	ldd	r31, Y+10	; 0x0a
     a16:	ea 89       	ldd	r30, Y+18	; 0x12
     a18:	2b 89       	ldd	r18, Y+19	; 0x13
     a1a:	3c 89       	ldd	r19, Y+20	; 0x14
     a1c:	8b 85       	ldd	r24, Y+11	; 0x0b
     a1e:	9c 85       	ldd	r25, Y+12	; 0x0c
     a20:	28 0f       	add	r18, r24
     a22:	39 1f       	adc	r19, r25
     a24:	2e 5f       	subi	r18, 0xFE	; 254
     a26:	3f 4f       	sbci	r19, 0xFF	; 255
     a28:	17 c0       	rjmp	.+46     	; 0xa58 <__mulsf3+0x16e>
     a2a:	ca 01       	movw	r24, r20
     a2c:	81 70       	andi	r24, 0x01	; 1
     a2e:	90 70       	andi	r25, 0x00	; 0
     a30:	89 2b       	or	r24, r25
     a32:	61 f0       	breq	.+24     	; 0xa4c <__mulsf3+0x162>
     a34:	16 95       	lsr	r17
     a36:	07 95       	ror	r16
     a38:	f7 94       	ror	r15
     a3a:	e7 94       	ror	r14
     a3c:	80 e0       	ldi	r24, 0x00	; 0
     a3e:	90 e0       	ldi	r25, 0x00	; 0
     a40:	a0 e0       	ldi	r26, 0x00	; 0
     a42:	b0 e8       	ldi	r27, 0x80	; 128
     a44:	e8 2a       	or	r14, r24
     a46:	f9 2a       	or	r15, r25
     a48:	0a 2b       	or	r16, r26
     a4a:	1b 2b       	or	r17, r27
     a4c:	76 95       	lsr	r23
     a4e:	67 95       	ror	r22
     a50:	57 95       	ror	r21
     a52:	47 95       	ror	r20
     a54:	2f 5f       	subi	r18, 0xFF	; 255
     a56:	3f 4f       	sbci	r19, 0xFF	; 255
     a58:	77 fd       	sbrc	r23, 7
     a5a:	e7 cf       	rjmp	.-50     	; 0xa2a <__mulsf3+0x140>
     a5c:	0c c0       	rjmp	.+24     	; 0xa76 <__mulsf3+0x18c>
     a5e:	44 0f       	add	r20, r20
     a60:	55 1f       	adc	r21, r21
     a62:	66 1f       	adc	r22, r22
     a64:	77 1f       	adc	r23, r23
     a66:	17 fd       	sbrc	r17, 7
     a68:	41 60       	ori	r20, 0x01	; 1
     a6a:	ee 0c       	add	r14, r14
     a6c:	ff 1c       	adc	r15, r15
     a6e:	00 1f       	adc	r16, r16
     a70:	11 1f       	adc	r17, r17
     a72:	21 50       	subi	r18, 0x01	; 1
     a74:	30 40       	sbci	r19, 0x00	; 0
     a76:	40 30       	cpi	r20, 0x00	; 0
     a78:	90 e0       	ldi	r25, 0x00	; 0
     a7a:	59 07       	cpc	r21, r25
     a7c:	90 e0       	ldi	r25, 0x00	; 0
     a7e:	69 07       	cpc	r22, r25
     a80:	90 e4       	ldi	r25, 0x40	; 64
     a82:	79 07       	cpc	r23, r25
     a84:	60 f3       	brcs	.-40     	; 0xa5e <__mulsf3+0x174>
     a86:	2b 8f       	std	Y+27, r18	; 0x1b
     a88:	3c 8f       	std	Y+28, r19	; 0x1c
     a8a:	db 01       	movw	r26, r22
     a8c:	ca 01       	movw	r24, r20
     a8e:	8f 77       	andi	r24, 0x7F	; 127
     a90:	90 70       	andi	r25, 0x00	; 0
     a92:	a0 70       	andi	r26, 0x00	; 0
     a94:	b0 70       	andi	r27, 0x00	; 0
     a96:	80 34       	cpi	r24, 0x40	; 64
     a98:	91 05       	cpc	r25, r1
     a9a:	a1 05       	cpc	r26, r1
     a9c:	b1 05       	cpc	r27, r1
     a9e:	61 f4       	brne	.+24     	; 0xab8 <__mulsf3+0x1ce>
     aa0:	47 fd       	sbrc	r20, 7
     aa2:	0a c0       	rjmp	.+20     	; 0xab8 <__mulsf3+0x1ce>
     aa4:	e1 14       	cp	r14, r1
     aa6:	f1 04       	cpc	r15, r1
     aa8:	01 05       	cpc	r16, r1
     aaa:	11 05       	cpc	r17, r1
     aac:	29 f0       	breq	.+10     	; 0xab8 <__mulsf3+0x1ce>
     aae:	40 5c       	subi	r20, 0xC0	; 192
     ab0:	5f 4f       	sbci	r21, 0xFF	; 255
     ab2:	6f 4f       	sbci	r22, 0xFF	; 255
     ab4:	7f 4f       	sbci	r23, 0xFF	; 255
     ab6:	40 78       	andi	r20, 0x80	; 128
     ab8:	1a 8e       	std	Y+26, r1	; 0x1a
     aba:	fe 17       	cp	r31, r30
     abc:	11 f0       	breq	.+4      	; 0xac2 <__mulsf3+0x1d8>
     abe:	81 e0       	ldi	r24, 0x01	; 1
     ac0:	8a 8f       	std	Y+26, r24	; 0x1a
     ac2:	4d 8f       	std	Y+29, r20	; 0x1d
     ac4:	5e 8f       	std	Y+30, r21	; 0x1e
     ac6:	6f 8f       	std	Y+31, r22	; 0x1f
     ac8:	78 a3       	std	Y+32, r23	; 0x20
     aca:	83 e0       	ldi	r24, 0x03	; 3
     acc:	89 8f       	std	Y+25, r24	; 0x19
     ace:	ce 01       	movw	r24, r28
     ad0:	49 96       	adiw	r24, 0x19	; 25
     ad2:	0e 94 a4 08 	call	0x1148	; 0x1148 <__pack_f>
     ad6:	a0 96       	adiw	r28, 0x20	; 32
     ad8:	e2 e1       	ldi	r30, 0x12	; 18
     ada:	0c 94 74 1e 	jmp	0x3ce8	; 0x3ce8 <__epilogue_restores__>

00000ade <__divsf3>:
     ade:	a8 e1       	ldi	r26, 0x18	; 24
     ae0:	b0 e0       	ldi	r27, 0x00	; 0
     ae2:	e5 e7       	ldi	r30, 0x75	; 117
     ae4:	f5 e0       	ldi	r31, 0x05	; 5
     ae6:	0c 94 60 1e 	jmp	0x3cc0	; 0x3cc0 <__prologue_saves__+0x10>
     aea:	69 83       	std	Y+1, r22	; 0x01
     aec:	7a 83       	std	Y+2, r23	; 0x02
     aee:	8b 83       	std	Y+3, r24	; 0x03
     af0:	9c 83       	std	Y+4, r25	; 0x04
     af2:	2d 83       	std	Y+5, r18	; 0x05
     af4:	3e 83       	std	Y+6, r19	; 0x06
     af6:	4f 83       	std	Y+7, r20	; 0x07
     af8:	58 87       	std	Y+8, r21	; 0x08
     afa:	b9 e0       	ldi	r27, 0x09	; 9
     afc:	eb 2e       	mov	r14, r27
     afe:	f1 2c       	mov	r15, r1
     b00:	ec 0e       	add	r14, r28
     b02:	fd 1e       	adc	r15, r29
     b04:	ce 01       	movw	r24, r28
     b06:	01 96       	adiw	r24, 0x01	; 1
     b08:	b7 01       	movw	r22, r14
     b0a:	0e 94 79 09 	call	0x12f2	; 0x12f2 <__unpack_f>
     b0e:	8e 01       	movw	r16, r28
     b10:	0f 5e       	subi	r16, 0xEF	; 239
     b12:	1f 4f       	sbci	r17, 0xFF	; 255
     b14:	ce 01       	movw	r24, r28
     b16:	05 96       	adiw	r24, 0x05	; 5
     b18:	b8 01       	movw	r22, r16
     b1a:	0e 94 79 09 	call	0x12f2	; 0x12f2 <__unpack_f>
     b1e:	29 85       	ldd	r18, Y+9	; 0x09
     b20:	22 30       	cpi	r18, 0x02	; 2
     b22:	08 f4       	brcc	.+2      	; 0xb26 <__divsf3+0x48>
     b24:	7e c0       	rjmp	.+252    	; 0xc22 <__divsf3+0x144>
     b26:	39 89       	ldd	r19, Y+17	; 0x11
     b28:	32 30       	cpi	r19, 0x02	; 2
     b2a:	10 f4       	brcc	.+4      	; 0xb30 <__divsf3+0x52>
     b2c:	b8 01       	movw	r22, r16
     b2e:	7c c0       	rjmp	.+248    	; 0xc28 <__divsf3+0x14a>
     b30:	8a 85       	ldd	r24, Y+10	; 0x0a
     b32:	9a 89       	ldd	r25, Y+18	; 0x12
     b34:	89 27       	eor	r24, r25
     b36:	8a 87       	std	Y+10, r24	; 0x0a
     b38:	24 30       	cpi	r18, 0x04	; 4
     b3a:	11 f0       	breq	.+4      	; 0xb40 <__divsf3+0x62>
     b3c:	22 30       	cpi	r18, 0x02	; 2
     b3e:	31 f4       	brne	.+12     	; 0xb4c <__divsf3+0x6e>
     b40:	23 17       	cp	r18, r19
     b42:	09 f0       	breq	.+2      	; 0xb46 <__divsf3+0x68>
     b44:	6e c0       	rjmp	.+220    	; 0xc22 <__divsf3+0x144>
     b46:	60 e6       	ldi	r22, 0x60	; 96
     b48:	70 e0       	ldi	r23, 0x00	; 0
     b4a:	6e c0       	rjmp	.+220    	; 0xc28 <__divsf3+0x14a>
     b4c:	34 30       	cpi	r19, 0x04	; 4
     b4e:	39 f4       	brne	.+14     	; 0xb5e <__divsf3+0x80>
     b50:	1d 86       	std	Y+13, r1	; 0x0d
     b52:	1e 86       	std	Y+14, r1	; 0x0e
     b54:	1f 86       	std	Y+15, r1	; 0x0f
     b56:	18 8a       	std	Y+16, r1	; 0x10
     b58:	1c 86       	std	Y+12, r1	; 0x0c
     b5a:	1b 86       	std	Y+11, r1	; 0x0b
     b5c:	04 c0       	rjmp	.+8      	; 0xb66 <__divsf3+0x88>
     b5e:	32 30       	cpi	r19, 0x02	; 2
     b60:	21 f4       	brne	.+8      	; 0xb6a <__divsf3+0x8c>
     b62:	84 e0       	ldi	r24, 0x04	; 4
     b64:	89 87       	std	Y+9, r24	; 0x09
     b66:	b7 01       	movw	r22, r14
     b68:	5f c0       	rjmp	.+190    	; 0xc28 <__divsf3+0x14a>
     b6a:	2b 85       	ldd	r18, Y+11	; 0x0b
     b6c:	3c 85       	ldd	r19, Y+12	; 0x0c
     b6e:	8b 89       	ldd	r24, Y+19	; 0x13
     b70:	9c 89       	ldd	r25, Y+20	; 0x14
     b72:	28 1b       	sub	r18, r24
     b74:	39 0b       	sbc	r19, r25
     b76:	3c 87       	std	Y+12, r19	; 0x0c
     b78:	2b 87       	std	Y+11, r18	; 0x0b
     b7a:	ed 84       	ldd	r14, Y+13	; 0x0d
     b7c:	fe 84       	ldd	r15, Y+14	; 0x0e
     b7e:	0f 85       	ldd	r16, Y+15	; 0x0f
     b80:	18 89       	ldd	r17, Y+16	; 0x10
     b82:	ad 88       	ldd	r10, Y+21	; 0x15
     b84:	be 88       	ldd	r11, Y+22	; 0x16
     b86:	cf 88       	ldd	r12, Y+23	; 0x17
     b88:	d8 8c       	ldd	r13, Y+24	; 0x18
     b8a:	ea 14       	cp	r14, r10
     b8c:	fb 04       	cpc	r15, r11
     b8e:	0c 05       	cpc	r16, r12
     b90:	1d 05       	cpc	r17, r13
     b92:	40 f4       	brcc	.+16     	; 0xba4 <__divsf3+0xc6>
     b94:	ee 0c       	add	r14, r14
     b96:	ff 1c       	adc	r15, r15
     b98:	00 1f       	adc	r16, r16
     b9a:	11 1f       	adc	r17, r17
     b9c:	21 50       	subi	r18, 0x01	; 1
     b9e:	30 40       	sbci	r19, 0x00	; 0
     ba0:	3c 87       	std	Y+12, r19	; 0x0c
     ba2:	2b 87       	std	Y+11, r18	; 0x0b
     ba4:	20 e0       	ldi	r18, 0x00	; 0
     ba6:	30 e0       	ldi	r19, 0x00	; 0
     ba8:	40 e0       	ldi	r20, 0x00	; 0
     baa:	50 e0       	ldi	r21, 0x00	; 0
     bac:	80 e0       	ldi	r24, 0x00	; 0
     bae:	90 e0       	ldi	r25, 0x00	; 0
     bb0:	a0 e0       	ldi	r26, 0x00	; 0
     bb2:	b0 e4       	ldi	r27, 0x40	; 64
     bb4:	60 e0       	ldi	r22, 0x00	; 0
     bb6:	70 e0       	ldi	r23, 0x00	; 0
     bb8:	ea 14       	cp	r14, r10
     bba:	fb 04       	cpc	r15, r11
     bbc:	0c 05       	cpc	r16, r12
     bbe:	1d 05       	cpc	r17, r13
     bc0:	40 f0       	brcs	.+16     	; 0xbd2 <__divsf3+0xf4>
     bc2:	28 2b       	or	r18, r24
     bc4:	39 2b       	or	r19, r25
     bc6:	4a 2b       	or	r20, r26
     bc8:	5b 2b       	or	r21, r27
     bca:	ea 18       	sub	r14, r10
     bcc:	fb 08       	sbc	r15, r11
     bce:	0c 09       	sbc	r16, r12
     bd0:	1d 09       	sbc	r17, r13
     bd2:	b6 95       	lsr	r27
     bd4:	a7 95       	ror	r26
     bd6:	97 95       	ror	r25
     bd8:	87 95       	ror	r24
     bda:	ee 0c       	add	r14, r14
     bdc:	ff 1c       	adc	r15, r15
     bde:	00 1f       	adc	r16, r16
     be0:	11 1f       	adc	r17, r17
     be2:	6f 5f       	subi	r22, 0xFF	; 255
     be4:	7f 4f       	sbci	r23, 0xFF	; 255
     be6:	6f 31       	cpi	r22, 0x1F	; 31
     be8:	71 05       	cpc	r23, r1
     bea:	31 f7       	brne	.-52     	; 0xbb8 <__divsf3+0xda>
     bec:	da 01       	movw	r26, r20
     bee:	c9 01       	movw	r24, r18
     bf0:	8f 77       	andi	r24, 0x7F	; 127
     bf2:	90 70       	andi	r25, 0x00	; 0
     bf4:	a0 70       	andi	r26, 0x00	; 0
     bf6:	b0 70       	andi	r27, 0x00	; 0
     bf8:	80 34       	cpi	r24, 0x40	; 64
     bfa:	91 05       	cpc	r25, r1
     bfc:	a1 05       	cpc	r26, r1
     bfe:	b1 05       	cpc	r27, r1
     c00:	61 f4       	brne	.+24     	; 0xc1a <__divsf3+0x13c>
     c02:	27 fd       	sbrc	r18, 7
     c04:	0a c0       	rjmp	.+20     	; 0xc1a <__divsf3+0x13c>
     c06:	e1 14       	cp	r14, r1
     c08:	f1 04       	cpc	r15, r1
     c0a:	01 05       	cpc	r16, r1
     c0c:	11 05       	cpc	r17, r1
     c0e:	29 f0       	breq	.+10     	; 0xc1a <__divsf3+0x13c>
     c10:	20 5c       	subi	r18, 0xC0	; 192
     c12:	3f 4f       	sbci	r19, 0xFF	; 255
     c14:	4f 4f       	sbci	r20, 0xFF	; 255
     c16:	5f 4f       	sbci	r21, 0xFF	; 255
     c18:	20 78       	andi	r18, 0x80	; 128
     c1a:	2d 87       	std	Y+13, r18	; 0x0d
     c1c:	3e 87       	std	Y+14, r19	; 0x0e
     c1e:	4f 87       	std	Y+15, r20	; 0x0f
     c20:	58 8b       	std	Y+16, r21	; 0x10
     c22:	be 01       	movw	r22, r28
     c24:	67 5f       	subi	r22, 0xF7	; 247
     c26:	7f 4f       	sbci	r23, 0xFF	; 255
     c28:	cb 01       	movw	r24, r22
     c2a:	0e 94 a4 08 	call	0x1148	; 0x1148 <__pack_f>
     c2e:	68 96       	adiw	r28, 0x18	; 24
     c30:	ea e0       	ldi	r30, 0x0A	; 10
     c32:	0c 94 7c 1e 	jmp	0x3cf8	; 0x3cf8 <__epilogue_restores__+0x10>

00000c36 <__gtsf2>:
     c36:	a8 e1       	ldi	r26, 0x18	; 24
     c38:	b0 e0       	ldi	r27, 0x00	; 0
     c3a:	e1 e2       	ldi	r30, 0x21	; 33
     c3c:	f6 e0       	ldi	r31, 0x06	; 6
     c3e:	0c 94 64 1e 	jmp	0x3cc8	; 0x3cc8 <__prologue_saves__+0x18>
     c42:	69 83       	std	Y+1, r22	; 0x01
     c44:	7a 83       	std	Y+2, r23	; 0x02
     c46:	8b 83       	std	Y+3, r24	; 0x03
     c48:	9c 83       	std	Y+4, r25	; 0x04
     c4a:	2d 83       	std	Y+5, r18	; 0x05
     c4c:	3e 83       	std	Y+6, r19	; 0x06
     c4e:	4f 83       	std	Y+7, r20	; 0x07
     c50:	58 87       	std	Y+8, r21	; 0x08
     c52:	89 e0       	ldi	r24, 0x09	; 9
     c54:	e8 2e       	mov	r14, r24
     c56:	f1 2c       	mov	r15, r1
     c58:	ec 0e       	add	r14, r28
     c5a:	fd 1e       	adc	r15, r29
     c5c:	ce 01       	movw	r24, r28
     c5e:	01 96       	adiw	r24, 0x01	; 1
     c60:	b7 01       	movw	r22, r14
     c62:	0e 94 79 09 	call	0x12f2	; 0x12f2 <__unpack_f>
     c66:	8e 01       	movw	r16, r28
     c68:	0f 5e       	subi	r16, 0xEF	; 239
     c6a:	1f 4f       	sbci	r17, 0xFF	; 255
     c6c:	ce 01       	movw	r24, r28
     c6e:	05 96       	adiw	r24, 0x05	; 5
     c70:	b8 01       	movw	r22, r16
     c72:	0e 94 79 09 	call	0x12f2	; 0x12f2 <__unpack_f>
     c76:	89 85       	ldd	r24, Y+9	; 0x09
     c78:	82 30       	cpi	r24, 0x02	; 2
     c7a:	40 f0       	brcs	.+16     	; 0xc8c <__gtsf2+0x56>
     c7c:	89 89       	ldd	r24, Y+17	; 0x11
     c7e:	82 30       	cpi	r24, 0x02	; 2
     c80:	28 f0       	brcs	.+10     	; 0xc8c <__gtsf2+0x56>
     c82:	c7 01       	movw	r24, r14
     c84:	b8 01       	movw	r22, r16
     c86:	0e 94 f1 09 	call	0x13e2	; 0x13e2 <__fpcmp_parts_f>
     c8a:	01 c0       	rjmp	.+2      	; 0xc8e <__gtsf2+0x58>
     c8c:	8f ef       	ldi	r24, 0xFF	; 255
     c8e:	68 96       	adiw	r28, 0x18	; 24
     c90:	e6 e0       	ldi	r30, 0x06	; 6
     c92:	0c 94 80 1e 	jmp	0x3d00	; 0x3d00 <__epilogue_restores__+0x18>

00000c96 <__gesf2>:
     c96:	a8 e1       	ldi	r26, 0x18	; 24
     c98:	b0 e0       	ldi	r27, 0x00	; 0
     c9a:	e1 e5       	ldi	r30, 0x51	; 81
     c9c:	f6 e0       	ldi	r31, 0x06	; 6
     c9e:	0c 94 64 1e 	jmp	0x3cc8	; 0x3cc8 <__prologue_saves__+0x18>
     ca2:	69 83       	std	Y+1, r22	; 0x01
     ca4:	7a 83       	std	Y+2, r23	; 0x02
     ca6:	8b 83       	std	Y+3, r24	; 0x03
     ca8:	9c 83       	std	Y+4, r25	; 0x04
     caa:	2d 83       	std	Y+5, r18	; 0x05
     cac:	3e 83       	std	Y+6, r19	; 0x06
     cae:	4f 83       	std	Y+7, r20	; 0x07
     cb0:	58 87       	std	Y+8, r21	; 0x08
     cb2:	89 e0       	ldi	r24, 0x09	; 9
     cb4:	e8 2e       	mov	r14, r24
     cb6:	f1 2c       	mov	r15, r1
     cb8:	ec 0e       	add	r14, r28
     cba:	fd 1e       	adc	r15, r29
     cbc:	ce 01       	movw	r24, r28
     cbe:	01 96       	adiw	r24, 0x01	; 1
     cc0:	b7 01       	movw	r22, r14
     cc2:	0e 94 79 09 	call	0x12f2	; 0x12f2 <__unpack_f>
     cc6:	8e 01       	movw	r16, r28
     cc8:	0f 5e       	subi	r16, 0xEF	; 239
     cca:	1f 4f       	sbci	r17, 0xFF	; 255
     ccc:	ce 01       	movw	r24, r28
     cce:	05 96       	adiw	r24, 0x05	; 5
     cd0:	b8 01       	movw	r22, r16
     cd2:	0e 94 79 09 	call	0x12f2	; 0x12f2 <__unpack_f>
     cd6:	89 85       	ldd	r24, Y+9	; 0x09
     cd8:	82 30       	cpi	r24, 0x02	; 2
     cda:	40 f0       	brcs	.+16     	; 0xcec <__gesf2+0x56>
     cdc:	89 89       	ldd	r24, Y+17	; 0x11
     cde:	82 30       	cpi	r24, 0x02	; 2
     ce0:	28 f0       	brcs	.+10     	; 0xcec <__gesf2+0x56>
     ce2:	c7 01       	movw	r24, r14
     ce4:	b8 01       	movw	r22, r16
     ce6:	0e 94 f1 09 	call	0x13e2	; 0x13e2 <__fpcmp_parts_f>
     cea:	01 c0       	rjmp	.+2      	; 0xcee <__gesf2+0x58>
     cec:	8f ef       	ldi	r24, 0xFF	; 255
     cee:	68 96       	adiw	r28, 0x18	; 24
     cf0:	e6 e0       	ldi	r30, 0x06	; 6
     cf2:	0c 94 80 1e 	jmp	0x3d00	; 0x3d00 <__epilogue_restores__+0x18>

00000cf6 <__lesf2>:
     cf6:	a8 e1       	ldi	r26, 0x18	; 24
     cf8:	b0 e0       	ldi	r27, 0x00	; 0
     cfa:	e1 e8       	ldi	r30, 0x81	; 129
     cfc:	f6 e0       	ldi	r31, 0x06	; 6
     cfe:	0c 94 64 1e 	jmp	0x3cc8	; 0x3cc8 <__prologue_saves__+0x18>
     d02:	69 83       	std	Y+1, r22	; 0x01
     d04:	7a 83       	std	Y+2, r23	; 0x02
     d06:	8b 83       	std	Y+3, r24	; 0x03
     d08:	9c 83       	std	Y+4, r25	; 0x04
     d0a:	2d 83       	std	Y+5, r18	; 0x05
     d0c:	3e 83       	std	Y+6, r19	; 0x06
     d0e:	4f 83       	std	Y+7, r20	; 0x07
     d10:	58 87       	std	Y+8, r21	; 0x08
     d12:	89 e0       	ldi	r24, 0x09	; 9
     d14:	e8 2e       	mov	r14, r24
     d16:	f1 2c       	mov	r15, r1
     d18:	ec 0e       	add	r14, r28
     d1a:	fd 1e       	adc	r15, r29
     d1c:	ce 01       	movw	r24, r28
     d1e:	01 96       	adiw	r24, 0x01	; 1
     d20:	b7 01       	movw	r22, r14
     d22:	0e 94 79 09 	call	0x12f2	; 0x12f2 <__unpack_f>
     d26:	8e 01       	movw	r16, r28
     d28:	0f 5e       	subi	r16, 0xEF	; 239
     d2a:	1f 4f       	sbci	r17, 0xFF	; 255
     d2c:	ce 01       	movw	r24, r28
     d2e:	05 96       	adiw	r24, 0x05	; 5
     d30:	b8 01       	movw	r22, r16
     d32:	0e 94 79 09 	call	0x12f2	; 0x12f2 <__unpack_f>
     d36:	89 85       	ldd	r24, Y+9	; 0x09
     d38:	82 30       	cpi	r24, 0x02	; 2
     d3a:	40 f0       	brcs	.+16     	; 0xd4c <__lesf2+0x56>
     d3c:	89 89       	ldd	r24, Y+17	; 0x11
     d3e:	82 30       	cpi	r24, 0x02	; 2
     d40:	28 f0       	brcs	.+10     	; 0xd4c <__lesf2+0x56>
     d42:	c7 01       	movw	r24, r14
     d44:	b8 01       	movw	r22, r16
     d46:	0e 94 f1 09 	call	0x13e2	; 0x13e2 <__fpcmp_parts_f>
     d4a:	01 c0       	rjmp	.+2      	; 0xd4e <__lesf2+0x58>
     d4c:	81 e0       	ldi	r24, 0x01	; 1
     d4e:	68 96       	adiw	r28, 0x18	; 24
     d50:	e6 e0       	ldi	r30, 0x06	; 6
     d52:	0c 94 80 1e 	jmp	0x3d00	; 0x3d00 <__epilogue_restores__+0x18>

00000d56 <__floatsisf>:
     d56:	a8 e0       	ldi	r26, 0x08	; 8
     d58:	b0 e0       	ldi	r27, 0x00	; 0
     d5a:	e1 eb       	ldi	r30, 0xB1	; 177
     d5c:	f6 e0       	ldi	r31, 0x06	; 6
     d5e:	0c 94 61 1e 	jmp	0x3cc2	; 0x3cc2 <__prologue_saves__+0x12>
     d62:	9b 01       	movw	r18, r22
     d64:	ac 01       	movw	r20, r24
     d66:	83 e0       	ldi	r24, 0x03	; 3
     d68:	89 83       	std	Y+1, r24	; 0x01
     d6a:	da 01       	movw	r26, r20
     d6c:	c9 01       	movw	r24, r18
     d6e:	88 27       	eor	r24, r24
     d70:	b7 fd       	sbrc	r27, 7
     d72:	83 95       	inc	r24
     d74:	99 27       	eor	r25, r25
     d76:	aa 27       	eor	r26, r26
     d78:	bb 27       	eor	r27, r27
     d7a:	b8 2e       	mov	r11, r24
     d7c:	21 15       	cp	r18, r1
     d7e:	31 05       	cpc	r19, r1
     d80:	41 05       	cpc	r20, r1
     d82:	51 05       	cpc	r21, r1
     d84:	19 f4       	brne	.+6      	; 0xd8c <__floatsisf+0x36>
     d86:	82 e0       	ldi	r24, 0x02	; 2
     d88:	89 83       	std	Y+1, r24	; 0x01
     d8a:	3a c0       	rjmp	.+116    	; 0xe00 <__floatsisf+0xaa>
     d8c:	88 23       	and	r24, r24
     d8e:	a9 f0       	breq	.+42     	; 0xdba <__floatsisf+0x64>
     d90:	20 30       	cpi	r18, 0x00	; 0
     d92:	80 e0       	ldi	r24, 0x00	; 0
     d94:	38 07       	cpc	r19, r24
     d96:	80 e0       	ldi	r24, 0x00	; 0
     d98:	48 07       	cpc	r20, r24
     d9a:	80 e8       	ldi	r24, 0x80	; 128
     d9c:	58 07       	cpc	r21, r24
     d9e:	29 f4       	brne	.+10     	; 0xdaa <__floatsisf+0x54>
     da0:	60 e0       	ldi	r22, 0x00	; 0
     da2:	70 e0       	ldi	r23, 0x00	; 0
     da4:	80 e0       	ldi	r24, 0x00	; 0
     da6:	9f ec       	ldi	r25, 0xCF	; 207
     da8:	30 c0       	rjmp	.+96     	; 0xe0a <__floatsisf+0xb4>
     daa:	ee 24       	eor	r14, r14
     dac:	ff 24       	eor	r15, r15
     dae:	87 01       	movw	r16, r14
     db0:	e2 1a       	sub	r14, r18
     db2:	f3 0a       	sbc	r15, r19
     db4:	04 0b       	sbc	r16, r20
     db6:	15 0b       	sbc	r17, r21
     db8:	02 c0       	rjmp	.+4      	; 0xdbe <__floatsisf+0x68>
     dba:	79 01       	movw	r14, r18
     dbc:	8a 01       	movw	r16, r20
     dbe:	8e e1       	ldi	r24, 0x1E	; 30
     dc0:	c8 2e       	mov	r12, r24
     dc2:	d1 2c       	mov	r13, r1
     dc4:	dc 82       	std	Y+4, r13	; 0x04
     dc6:	cb 82       	std	Y+3, r12	; 0x03
     dc8:	ed 82       	std	Y+5, r14	; 0x05
     dca:	fe 82       	std	Y+6, r15	; 0x06
     dcc:	0f 83       	std	Y+7, r16	; 0x07
     dce:	18 87       	std	Y+8, r17	; 0x08
     dd0:	c8 01       	movw	r24, r16
     dd2:	b7 01       	movw	r22, r14
     dd4:	0e 94 55 08 	call	0x10aa	; 0x10aa <__clzsi2>
     dd8:	01 97       	sbiw	r24, 0x01	; 1
     dda:	18 16       	cp	r1, r24
     ddc:	19 06       	cpc	r1, r25
     dde:	84 f4       	brge	.+32     	; 0xe00 <__floatsisf+0xaa>
     de0:	08 2e       	mov	r0, r24
     de2:	04 c0       	rjmp	.+8      	; 0xdec <__floatsisf+0x96>
     de4:	ee 0c       	add	r14, r14
     de6:	ff 1c       	adc	r15, r15
     de8:	00 1f       	adc	r16, r16
     dea:	11 1f       	adc	r17, r17
     dec:	0a 94       	dec	r0
     dee:	d2 f7       	brpl	.-12     	; 0xde4 <__floatsisf+0x8e>
     df0:	ed 82       	std	Y+5, r14	; 0x05
     df2:	fe 82       	std	Y+6, r15	; 0x06
     df4:	0f 83       	std	Y+7, r16	; 0x07
     df6:	18 87       	std	Y+8, r17	; 0x08
     df8:	c8 1a       	sub	r12, r24
     dfa:	d9 0a       	sbc	r13, r25
     dfc:	dc 82       	std	Y+4, r13	; 0x04
     dfe:	cb 82       	std	Y+3, r12	; 0x03
     e00:	ba 82       	std	Y+2, r11	; 0x02
     e02:	ce 01       	movw	r24, r28
     e04:	01 96       	adiw	r24, 0x01	; 1
     e06:	0e 94 a4 08 	call	0x1148	; 0x1148 <__pack_f>
     e0a:	28 96       	adiw	r28, 0x08	; 8
     e0c:	e9 e0       	ldi	r30, 0x09	; 9
     e0e:	0c 94 7d 1e 	jmp	0x3cfa	; 0x3cfa <__epilogue_restores__+0x12>

00000e12 <__fixsfsi>:
     e12:	ac e0       	ldi	r26, 0x0C	; 12
     e14:	b0 e0       	ldi	r27, 0x00	; 0
     e16:	ef e0       	ldi	r30, 0x0F	; 15
     e18:	f7 e0       	ldi	r31, 0x07	; 7
     e1a:	0c 94 68 1e 	jmp	0x3cd0	; 0x3cd0 <__prologue_saves__+0x20>
     e1e:	69 83       	std	Y+1, r22	; 0x01
     e20:	7a 83       	std	Y+2, r23	; 0x02
     e22:	8b 83       	std	Y+3, r24	; 0x03
     e24:	9c 83       	std	Y+4, r25	; 0x04
     e26:	ce 01       	movw	r24, r28
     e28:	01 96       	adiw	r24, 0x01	; 1
     e2a:	be 01       	movw	r22, r28
     e2c:	6b 5f       	subi	r22, 0xFB	; 251
     e2e:	7f 4f       	sbci	r23, 0xFF	; 255
     e30:	0e 94 79 09 	call	0x12f2	; 0x12f2 <__unpack_f>
     e34:	8d 81       	ldd	r24, Y+5	; 0x05
     e36:	82 30       	cpi	r24, 0x02	; 2
     e38:	61 f1       	breq	.+88     	; 0xe92 <__fixsfsi+0x80>
     e3a:	82 30       	cpi	r24, 0x02	; 2
     e3c:	50 f1       	brcs	.+84     	; 0xe92 <__fixsfsi+0x80>
     e3e:	84 30       	cpi	r24, 0x04	; 4
     e40:	21 f4       	brne	.+8      	; 0xe4a <__fixsfsi+0x38>
     e42:	8e 81       	ldd	r24, Y+6	; 0x06
     e44:	88 23       	and	r24, r24
     e46:	51 f1       	breq	.+84     	; 0xe9c <__fixsfsi+0x8a>
     e48:	2e c0       	rjmp	.+92     	; 0xea6 <__fixsfsi+0x94>
     e4a:	2f 81       	ldd	r18, Y+7	; 0x07
     e4c:	38 85       	ldd	r19, Y+8	; 0x08
     e4e:	37 fd       	sbrc	r19, 7
     e50:	20 c0       	rjmp	.+64     	; 0xe92 <__fixsfsi+0x80>
     e52:	6e 81       	ldd	r22, Y+6	; 0x06
     e54:	2f 31       	cpi	r18, 0x1F	; 31
     e56:	31 05       	cpc	r19, r1
     e58:	1c f0       	brlt	.+6      	; 0xe60 <__fixsfsi+0x4e>
     e5a:	66 23       	and	r22, r22
     e5c:	f9 f0       	breq	.+62     	; 0xe9c <__fixsfsi+0x8a>
     e5e:	23 c0       	rjmp	.+70     	; 0xea6 <__fixsfsi+0x94>
     e60:	8e e1       	ldi	r24, 0x1E	; 30
     e62:	90 e0       	ldi	r25, 0x00	; 0
     e64:	82 1b       	sub	r24, r18
     e66:	93 0b       	sbc	r25, r19
     e68:	29 85       	ldd	r18, Y+9	; 0x09
     e6a:	3a 85       	ldd	r19, Y+10	; 0x0a
     e6c:	4b 85       	ldd	r20, Y+11	; 0x0b
     e6e:	5c 85       	ldd	r21, Y+12	; 0x0c
     e70:	04 c0       	rjmp	.+8      	; 0xe7a <__fixsfsi+0x68>
     e72:	56 95       	lsr	r21
     e74:	47 95       	ror	r20
     e76:	37 95       	ror	r19
     e78:	27 95       	ror	r18
     e7a:	8a 95       	dec	r24
     e7c:	d2 f7       	brpl	.-12     	; 0xe72 <__fixsfsi+0x60>
     e7e:	66 23       	and	r22, r22
     e80:	b1 f0       	breq	.+44     	; 0xeae <__fixsfsi+0x9c>
     e82:	50 95       	com	r21
     e84:	40 95       	com	r20
     e86:	30 95       	com	r19
     e88:	21 95       	neg	r18
     e8a:	3f 4f       	sbci	r19, 0xFF	; 255
     e8c:	4f 4f       	sbci	r20, 0xFF	; 255
     e8e:	5f 4f       	sbci	r21, 0xFF	; 255
     e90:	0e c0       	rjmp	.+28     	; 0xeae <__fixsfsi+0x9c>
     e92:	20 e0       	ldi	r18, 0x00	; 0
     e94:	30 e0       	ldi	r19, 0x00	; 0
     e96:	40 e0       	ldi	r20, 0x00	; 0
     e98:	50 e0       	ldi	r21, 0x00	; 0
     e9a:	09 c0       	rjmp	.+18     	; 0xeae <__fixsfsi+0x9c>
     e9c:	2f ef       	ldi	r18, 0xFF	; 255
     e9e:	3f ef       	ldi	r19, 0xFF	; 255
     ea0:	4f ef       	ldi	r20, 0xFF	; 255
     ea2:	5f e7       	ldi	r21, 0x7F	; 127
     ea4:	04 c0       	rjmp	.+8      	; 0xeae <__fixsfsi+0x9c>
     ea6:	20 e0       	ldi	r18, 0x00	; 0
     ea8:	30 e0       	ldi	r19, 0x00	; 0
     eaa:	40 e0       	ldi	r20, 0x00	; 0
     eac:	50 e8       	ldi	r21, 0x80	; 128
     eae:	b9 01       	movw	r22, r18
     eb0:	ca 01       	movw	r24, r20
     eb2:	2c 96       	adiw	r28, 0x0c	; 12
     eb4:	e2 e0       	ldi	r30, 0x02	; 2
     eb6:	0c 94 84 1e 	jmp	0x3d08	; 0x3d08 <__epilogue_restores__+0x20>

00000eba <__floatunsisf>:
     eba:	a8 e0       	ldi	r26, 0x08	; 8
     ebc:	b0 e0       	ldi	r27, 0x00	; 0
     ebe:	e3 e6       	ldi	r30, 0x63	; 99
     ec0:	f7 e0       	ldi	r31, 0x07	; 7
     ec2:	0c 94 60 1e 	jmp	0x3cc0	; 0x3cc0 <__prologue_saves__+0x10>
     ec6:	7b 01       	movw	r14, r22
     ec8:	8c 01       	movw	r16, r24
     eca:	61 15       	cp	r22, r1
     ecc:	71 05       	cpc	r23, r1
     ece:	81 05       	cpc	r24, r1
     ed0:	91 05       	cpc	r25, r1
     ed2:	19 f4       	brne	.+6      	; 0xeda <__floatunsisf+0x20>
     ed4:	82 e0       	ldi	r24, 0x02	; 2
     ed6:	89 83       	std	Y+1, r24	; 0x01
     ed8:	60 c0       	rjmp	.+192    	; 0xf9a <__floatunsisf+0xe0>
     eda:	83 e0       	ldi	r24, 0x03	; 3
     edc:	89 83       	std	Y+1, r24	; 0x01
     ede:	8e e1       	ldi	r24, 0x1E	; 30
     ee0:	c8 2e       	mov	r12, r24
     ee2:	d1 2c       	mov	r13, r1
     ee4:	dc 82       	std	Y+4, r13	; 0x04
     ee6:	cb 82       	std	Y+3, r12	; 0x03
     ee8:	ed 82       	std	Y+5, r14	; 0x05
     eea:	fe 82       	std	Y+6, r15	; 0x06
     eec:	0f 83       	std	Y+7, r16	; 0x07
     eee:	18 87       	std	Y+8, r17	; 0x08
     ef0:	c8 01       	movw	r24, r16
     ef2:	b7 01       	movw	r22, r14
     ef4:	0e 94 55 08 	call	0x10aa	; 0x10aa <__clzsi2>
     ef8:	fc 01       	movw	r30, r24
     efa:	31 97       	sbiw	r30, 0x01	; 1
     efc:	f7 ff       	sbrs	r31, 7
     efe:	3b c0       	rjmp	.+118    	; 0xf76 <__floatunsisf+0xbc>
     f00:	22 27       	eor	r18, r18
     f02:	33 27       	eor	r19, r19
     f04:	2e 1b       	sub	r18, r30
     f06:	3f 0b       	sbc	r19, r31
     f08:	57 01       	movw	r10, r14
     f0a:	68 01       	movw	r12, r16
     f0c:	02 2e       	mov	r0, r18
     f0e:	04 c0       	rjmp	.+8      	; 0xf18 <__floatunsisf+0x5e>
     f10:	d6 94       	lsr	r13
     f12:	c7 94       	ror	r12
     f14:	b7 94       	ror	r11
     f16:	a7 94       	ror	r10
     f18:	0a 94       	dec	r0
     f1a:	d2 f7       	brpl	.-12     	; 0xf10 <__floatunsisf+0x56>
     f1c:	40 e0       	ldi	r20, 0x00	; 0
     f1e:	50 e0       	ldi	r21, 0x00	; 0
     f20:	60 e0       	ldi	r22, 0x00	; 0
     f22:	70 e0       	ldi	r23, 0x00	; 0
     f24:	81 e0       	ldi	r24, 0x01	; 1
     f26:	90 e0       	ldi	r25, 0x00	; 0
     f28:	a0 e0       	ldi	r26, 0x00	; 0
     f2a:	b0 e0       	ldi	r27, 0x00	; 0
     f2c:	04 c0       	rjmp	.+8      	; 0xf36 <__floatunsisf+0x7c>
     f2e:	88 0f       	add	r24, r24
     f30:	99 1f       	adc	r25, r25
     f32:	aa 1f       	adc	r26, r26
     f34:	bb 1f       	adc	r27, r27
     f36:	2a 95       	dec	r18
     f38:	d2 f7       	brpl	.-12     	; 0xf2e <__floatunsisf+0x74>
     f3a:	01 97       	sbiw	r24, 0x01	; 1
     f3c:	a1 09       	sbc	r26, r1
     f3e:	b1 09       	sbc	r27, r1
     f40:	8e 21       	and	r24, r14
     f42:	9f 21       	and	r25, r15
     f44:	a0 23       	and	r26, r16
     f46:	b1 23       	and	r27, r17
     f48:	00 97       	sbiw	r24, 0x00	; 0
     f4a:	a1 05       	cpc	r26, r1
     f4c:	b1 05       	cpc	r27, r1
     f4e:	21 f0       	breq	.+8      	; 0xf58 <__floatunsisf+0x9e>
     f50:	41 e0       	ldi	r20, 0x01	; 1
     f52:	50 e0       	ldi	r21, 0x00	; 0
     f54:	60 e0       	ldi	r22, 0x00	; 0
     f56:	70 e0       	ldi	r23, 0x00	; 0
     f58:	4a 29       	or	r20, r10
     f5a:	5b 29       	or	r21, r11
     f5c:	6c 29       	or	r22, r12
     f5e:	7d 29       	or	r23, r13
     f60:	4d 83       	std	Y+5, r20	; 0x05
     f62:	5e 83       	std	Y+6, r21	; 0x06
     f64:	6f 83       	std	Y+7, r22	; 0x07
     f66:	78 87       	std	Y+8, r23	; 0x08
     f68:	8e e1       	ldi	r24, 0x1E	; 30
     f6a:	90 e0       	ldi	r25, 0x00	; 0
     f6c:	8e 1b       	sub	r24, r30
     f6e:	9f 0b       	sbc	r25, r31
     f70:	9c 83       	std	Y+4, r25	; 0x04
     f72:	8b 83       	std	Y+3, r24	; 0x03
     f74:	12 c0       	rjmp	.+36     	; 0xf9a <__floatunsisf+0xe0>
     f76:	30 97       	sbiw	r30, 0x00	; 0
     f78:	81 f0       	breq	.+32     	; 0xf9a <__floatunsisf+0xe0>
     f7a:	0e 2e       	mov	r0, r30
     f7c:	04 c0       	rjmp	.+8      	; 0xf86 <__floatunsisf+0xcc>
     f7e:	ee 0c       	add	r14, r14
     f80:	ff 1c       	adc	r15, r15
     f82:	00 1f       	adc	r16, r16
     f84:	11 1f       	adc	r17, r17
     f86:	0a 94       	dec	r0
     f88:	d2 f7       	brpl	.-12     	; 0xf7e <__floatunsisf+0xc4>
     f8a:	ed 82       	std	Y+5, r14	; 0x05
     f8c:	fe 82       	std	Y+6, r15	; 0x06
     f8e:	0f 83       	std	Y+7, r16	; 0x07
     f90:	18 87       	std	Y+8, r17	; 0x08
     f92:	ce 1a       	sub	r12, r30
     f94:	df 0a       	sbc	r13, r31
     f96:	dc 82       	std	Y+4, r13	; 0x04
     f98:	cb 82       	std	Y+3, r12	; 0x03
     f9a:	1a 82       	std	Y+2, r1	; 0x02
     f9c:	ce 01       	movw	r24, r28
     f9e:	01 96       	adiw	r24, 0x01	; 1
     fa0:	0e 94 a4 08 	call	0x1148	; 0x1148 <__pack_f>
     fa4:	28 96       	adiw	r28, 0x08	; 8
     fa6:	ea e0       	ldi	r30, 0x0A	; 10
     fa8:	0c 94 7c 1e 	jmp	0x3cf8	; 0x3cf8 <__epilogue_restores__+0x10>

00000fac <__lshrdi3>:
     fac:	ef 92       	push	r14
     fae:	ff 92       	push	r15
     fb0:	0f 93       	push	r16
     fb2:	df 93       	push	r29
     fb4:	cf 93       	push	r28
     fb6:	cd b7       	in	r28, 0x3d	; 61
     fb8:	de b7       	in	r29, 0x3e	; 62
     fba:	60 97       	sbiw	r28, 0x10	; 16
     fbc:	0f b6       	in	r0, 0x3f	; 63
     fbe:	f8 94       	cli
     fc0:	de bf       	out	0x3e, r29	; 62
     fc2:	0f be       	out	0x3f, r0	; 63
     fc4:	cd bf       	out	0x3d, r28	; 61
     fc6:	a8 2f       	mov	r26, r24
     fc8:	00 23       	and	r16, r16
     fca:	09 f4       	brne	.+2      	; 0xfce <__lshrdi3+0x22>
     fcc:	61 c0       	rjmp	.+194    	; 0x1090 <__lshrdi3+0xe4>
     fce:	7e 01       	movw	r14, r28
     fd0:	08 94       	sec
     fd2:	e1 1c       	adc	r14, r1
     fd4:	f1 1c       	adc	r15, r1
     fd6:	88 e0       	ldi	r24, 0x08	; 8
     fd8:	f7 01       	movw	r30, r14
     fda:	11 92       	st	Z+, r1
     fdc:	8a 95       	dec	r24
     fde:	e9 f7       	brne	.-6      	; 0xfda <__lshrdi3+0x2e>
     fe0:	29 83       	std	Y+1, r18	; 0x01
     fe2:	3a 83       	std	Y+2, r19	; 0x02
     fe4:	4b 83       	std	Y+3, r20	; 0x03
     fe6:	5c 83       	std	Y+4, r21	; 0x04
     fe8:	6d 83       	std	Y+5, r22	; 0x05
     fea:	7e 83       	std	Y+6, r23	; 0x06
     fec:	af 83       	std	Y+7, r26	; 0x07
     fee:	98 87       	std	Y+8, r25	; 0x08
     ff0:	80 e2       	ldi	r24, 0x20	; 32
     ff2:	80 1b       	sub	r24, r16
     ff4:	e8 2f       	mov	r30, r24
     ff6:	ff 27       	eor	r31, r31
     ff8:	e7 fd       	sbrc	r30, 7
     ffa:	f0 95       	com	r31
     ffc:	4d 81       	ldd	r20, Y+5	; 0x05
     ffe:	5e 81       	ldd	r21, Y+6	; 0x06
    1000:	6f 81       	ldd	r22, Y+7	; 0x07
    1002:	78 85       	ldd	r23, Y+8	; 0x08
    1004:	18 16       	cp	r1, r24
    1006:	84 f0       	brlt	.+32     	; 0x1028 <__lshrdi3+0x7c>
    1008:	1d 86       	std	Y+13, r1	; 0x0d
    100a:	1e 86       	std	Y+14, r1	; 0x0e
    100c:	1f 86       	std	Y+15, r1	; 0x0f
    100e:	18 8a       	std	Y+16, r1	; 0x10
    1010:	88 27       	eor	r24, r24
    1012:	99 27       	eor	r25, r25
    1014:	8e 1b       	sub	r24, r30
    1016:	9f 0b       	sbc	r25, r31
    1018:	04 c0       	rjmp	.+8      	; 0x1022 <__lshrdi3+0x76>
    101a:	76 95       	lsr	r23
    101c:	67 95       	ror	r22
    101e:	57 95       	ror	r21
    1020:	47 95       	ror	r20
    1022:	8a 95       	dec	r24
    1024:	d2 f7       	brpl	.-12     	; 0x101a <__lshrdi3+0x6e>
    1026:	28 c0       	rjmp	.+80     	; 0x1078 <__lshrdi3+0xcc>
    1028:	20 2f       	mov	r18, r16
    102a:	33 27       	eor	r19, r19
    102c:	27 fd       	sbrc	r18, 7
    102e:	30 95       	com	r19
    1030:	db 01       	movw	r26, r22
    1032:	ca 01       	movw	r24, r20
    1034:	02 2e       	mov	r0, r18
    1036:	04 c0       	rjmp	.+8      	; 0x1040 <__lshrdi3+0x94>
    1038:	b6 95       	lsr	r27
    103a:	a7 95       	ror	r26
    103c:	97 95       	ror	r25
    103e:	87 95       	ror	r24
    1040:	0a 94       	dec	r0
    1042:	d2 f7       	brpl	.-12     	; 0x1038 <__lshrdi3+0x8c>
    1044:	8d 87       	std	Y+13, r24	; 0x0d
    1046:	9e 87       	std	Y+14, r25	; 0x0e
    1048:	af 87       	std	Y+15, r26	; 0x0f
    104a:	b8 8b       	std	Y+16, r27	; 0x10
    104c:	04 c0       	rjmp	.+8      	; 0x1056 <__lshrdi3+0xaa>
    104e:	44 0f       	add	r20, r20
    1050:	55 1f       	adc	r21, r21
    1052:	66 1f       	adc	r22, r22
    1054:	77 1f       	adc	r23, r23
    1056:	ea 95       	dec	r30
    1058:	d2 f7       	brpl	.-12     	; 0x104e <__lshrdi3+0xa2>
    105a:	89 81       	ldd	r24, Y+1	; 0x01
    105c:	9a 81       	ldd	r25, Y+2	; 0x02
    105e:	ab 81       	ldd	r26, Y+3	; 0x03
    1060:	bc 81       	ldd	r27, Y+4	; 0x04
    1062:	04 c0       	rjmp	.+8      	; 0x106c <__lshrdi3+0xc0>
    1064:	b6 95       	lsr	r27
    1066:	a7 95       	ror	r26
    1068:	97 95       	ror	r25
    106a:	87 95       	ror	r24
    106c:	2a 95       	dec	r18
    106e:	d2 f7       	brpl	.-12     	; 0x1064 <__lshrdi3+0xb8>
    1070:	48 2b       	or	r20, r24
    1072:	59 2b       	or	r21, r25
    1074:	6a 2b       	or	r22, r26
    1076:	7b 2b       	or	r23, r27
    1078:	49 87       	std	Y+9, r20	; 0x09
    107a:	5a 87       	std	Y+10, r21	; 0x0a
    107c:	6b 87       	std	Y+11, r22	; 0x0b
    107e:	7c 87       	std	Y+12, r23	; 0x0c
    1080:	29 85       	ldd	r18, Y+9	; 0x09
    1082:	3a 85       	ldd	r19, Y+10	; 0x0a
    1084:	4b 85       	ldd	r20, Y+11	; 0x0b
    1086:	5c 85       	ldd	r21, Y+12	; 0x0c
    1088:	6d 85       	ldd	r22, Y+13	; 0x0d
    108a:	7e 85       	ldd	r23, Y+14	; 0x0e
    108c:	af 85       	ldd	r26, Y+15	; 0x0f
    108e:	98 89       	ldd	r25, Y+16	; 0x10
    1090:	8a 2f       	mov	r24, r26
    1092:	60 96       	adiw	r28, 0x10	; 16
    1094:	0f b6       	in	r0, 0x3f	; 63
    1096:	f8 94       	cli
    1098:	de bf       	out	0x3e, r29	; 62
    109a:	0f be       	out	0x3f, r0	; 63
    109c:	cd bf       	out	0x3d, r28	; 61
    109e:	cf 91       	pop	r28
    10a0:	df 91       	pop	r29
    10a2:	0f 91       	pop	r16
    10a4:	ff 90       	pop	r15
    10a6:	ef 90       	pop	r14
    10a8:	08 95       	ret

000010aa <__clzsi2>:
    10aa:	ef 92       	push	r14
    10ac:	ff 92       	push	r15
    10ae:	0f 93       	push	r16
    10b0:	1f 93       	push	r17
    10b2:	7b 01       	movw	r14, r22
    10b4:	8c 01       	movw	r16, r24
    10b6:	80 e0       	ldi	r24, 0x00	; 0
    10b8:	e8 16       	cp	r14, r24
    10ba:	80 e0       	ldi	r24, 0x00	; 0
    10bc:	f8 06       	cpc	r15, r24
    10be:	81 e0       	ldi	r24, 0x01	; 1
    10c0:	08 07       	cpc	r16, r24
    10c2:	80 e0       	ldi	r24, 0x00	; 0
    10c4:	18 07       	cpc	r17, r24
    10c6:	88 f4       	brcc	.+34     	; 0x10ea <__clzsi2+0x40>
    10c8:	8f ef       	ldi	r24, 0xFF	; 255
    10ca:	e8 16       	cp	r14, r24
    10cc:	f1 04       	cpc	r15, r1
    10ce:	01 05       	cpc	r16, r1
    10d0:	11 05       	cpc	r17, r1
    10d2:	31 f0       	breq	.+12     	; 0x10e0 <__clzsi2+0x36>
    10d4:	28 f0       	brcs	.+10     	; 0x10e0 <__clzsi2+0x36>
    10d6:	88 e0       	ldi	r24, 0x08	; 8
    10d8:	90 e0       	ldi	r25, 0x00	; 0
    10da:	a0 e0       	ldi	r26, 0x00	; 0
    10dc:	b0 e0       	ldi	r27, 0x00	; 0
    10de:	17 c0       	rjmp	.+46     	; 0x110e <__clzsi2+0x64>
    10e0:	80 e0       	ldi	r24, 0x00	; 0
    10e2:	90 e0       	ldi	r25, 0x00	; 0
    10e4:	a0 e0       	ldi	r26, 0x00	; 0
    10e6:	b0 e0       	ldi	r27, 0x00	; 0
    10e8:	12 c0       	rjmp	.+36     	; 0x110e <__clzsi2+0x64>
    10ea:	80 e0       	ldi	r24, 0x00	; 0
    10ec:	e8 16       	cp	r14, r24
    10ee:	80 e0       	ldi	r24, 0x00	; 0
    10f0:	f8 06       	cpc	r15, r24
    10f2:	80 e0       	ldi	r24, 0x00	; 0
    10f4:	08 07       	cpc	r16, r24
    10f6:	81 e0       	ldi	r24, 0x01	; 1
    10f8:	18 07       	cpc	r17, r24
    10fa:	28 f0       	brcs	.+10     	; 0x1106 <__clzsi2+0x5c>
    10fc:	88 e1       	ldi	r24, 0x18	; 24
    10fe:	90 e0       	ldi	r25, 0x00	; 0
    1100:	a0 e0       	ldi	r26, 0x00	; 0
    1102:	b0 e0       	ldi	r27, 0x00	; 0
    1104:	04 c0       	rjmp	.+8      	; 0x110e <__clzsi2+0x64>
    1106:	80 e1       	ldi	r24, 0x10	; 16
    1108:	90 e0       	ldi	r25, 0x00	; 0
    110a:	a0 e0       	ldi	r26, 0x00	; 0
    110c:	b0 e0       	ldi	r27, 0x00	; 0
    110e:	20 e2       	ldi	r18, 0x20	; 32
    1110:	30 e0       	ldi	r19, 0x00	; 0
    1112:	40 e0       	ldi	r20, 0x00	; 0
    1114:	50 e0       	ldi	r21, 0x00	; 0
    1116:	28 1b       	sub	r18, r24
    1118:	39 0b       	sbc	r19, r25
    111a:	4a 0b       	sbc	r20, r26
    111c:	5b 0b       	sbc	r21, r27
    111e:	04 c0       	rjmp	.+8      	; 0x1128 <__clzsi2+0x7e>
    1120:	16 95       	lsr	r17
    1122:	07 95       	ror	r16
    1124:	f7 94       	ror	r15
    1126:	e7 94       	ror	r14
    1128:	8a 95       	dec	r24
    112a:	d2 f7       	brpl	.-12     	; 0x1120 <__clzsi2+0x76>
    112c:	f7 01       	movw	r30, r14
    112e:	e8 59       	subi	r30, 0x98	; 152
    1130:	ff 4f       	sbci	r31, 0xFF	; 255
    1132:	80 81       	ld	r24, Z
    1134:	28 1b       	sub	r18, r24
    1136:	31 09       	sbc	r19, r1
    1138:	41 09       	sbc	r20, r1
    113a:	51 09       	sbc	r21, r1
    113c:	c9 01       	movw	r24, r18
    113e:	1f 91       	pop	r17
    1140:	0f 91       	pop	r16
    1142:	ff 90       	pop	r15
    1144:	ef 90       	pop	r14
    1146:	08 95       	ret

00001148 <__pack_f>:
    1148:	df 92       	push	r13
    114a:	ef 92       	push	r14
    114c:	ff 92       	push	r15
    114e:	0f 93       	push	r16
    1150:	1f 93       	push	r17
    1152:	fc 01       	movw	r30, r24
    1154:	e4 80       	ldd	r14, Z+4	; 0x04
    1156:	f5 80       	ldd	r15, Z+5	; 0x05
    1158:	06 81       	ldd	r16, Z+6	; 0x06
    115a:	17 81       	ldd	r17, Z+7	; 0x07
    115c:	d1 80       	ldd	r13, Z+1	; 0x01
    115e:	80 81       	ld	r24, Z
    1160:	82 30       	cpi	r24, 0x02	; 2
    1162:	48 f4       	brcc	.+18     	; 0x1176 <__pack_f+0x2e>
    1164:	80 e0       	ldi	r24, 0x00	; 0
    1166:	90 e0       	ldi	r25, 0x00	; 0
    1168:	a0 e1       	ldi	r26, 0x10	; 16
    116a:	b0 e0       	ldi	r27, 0x00	; 0
    116c:	e8 2a       	or	r14, r24
    116e:	f9 2a       	or	r15, r25
    1170:	0a 2b       	or	r16, r26
    1172:	1b 2b       	or	r17, r27
    1174:	a5 c0       	rjmp	.+330    	; 0x12c0 <__pack_f+0x178>
    1176:	84 30       	cpi	r24, 0x04	; 4
    1178:	09 f4       	brne	.+2      	; 0x117c <__pack_f+0x34>
    117a:	9f c0       	rjmp	.+318    	; 0x12ba <__pack_f+0x172>
    117c:	82 30       	cpi	r24, 0x02	; 2
    117e:	21 f4       	brne	.+8      	; 0x1188 <__pack_f+0x40>
    1180:	ee 24       	eor	r14, r14
    1182:	ff 24       	eor	r15, r15
    1184:	87 01       	movw	r16, r14
    1186:	05 c0       	rjmp	.+10     	; 0x1192 <__pack_f+0x4a>
    1188:	e1 14       	cp	r14, r1
    118a:	f1 04       	cpc	r15, r1
    118c:	01 05       	cpc	r16, r1
    118e:	11 05       	cpc	r17, r1
    1190:	19 f4       	brne	.+6      	; 0x1198 <__pack_f+0x50>
    1192:	e0 e0       	ldi	r30, 0x00	; 0
    1194:	f0 e0       	ldi	r31, 0x00	; 0
    1196:	96 c0       	rjmp	.+300    	; 0x12c4 <__pack_f+0x17c>
    1198:	62 81       	ldd	r22, Z+2	; 0x02
    119a:	73 81       	ldd	r23, Z+3	; 0x03
    119c:	9f ef       	ldi	r25, 0xFF	; 255
    119e:	62 38       	cpi	r22, 0x82	; 130
    11a0:	79 07       	cpc	r23, r25
    11a2:	0c f0       	brlt	.+2      	; 0x11a6 <__pack_f+0x5e>
    11a4:	5b c0       	rjmp	.+182    	; 0x125c <__pack_f+0x114>
    11a6:	22 e8       	ldi	r18, 0x82	; 130
    11a8:	3f ef       	ldi	r19, 0xFF	; 255
    11aa:	26 1b       	sub	r18, r22
    11ac:	37 0b       	sbc	r19, r23
    11ae:	2a 31       	cpi	r18, 0x1A	; 26
    11b0:	31 05       	cpc	r19, r1
    11b2:	2c f0       	brlt	.+10     	; 0x11be <__pack_f+0x76>
    11b4:	20 e0       	ldi	r18, 0x00	; 0
    11b6:	30 e0       	ldi	r19, 0x00	; 0
    11b8:	40 e0       	ldi	r20, 0x00	; 0
    11ba:	50 e0       	ldi	r21, 0x00	; 0
    11bc:	2a c0       	rjmp	.+84     	; 0x1212 <__pack_f+0xca>
    11be:	b8 01       	movw	r22, r16
    11c0:	a7 01       	movw	r20, r14
    11c2:	02 2e       	mov	r0, r18
    11c4:	04 c0       	rjmp	.+8      	; 0x11ce <__pack_f+0x86>
    11c6:	76 95       	lsr	r23
    11c8:	67 95       	ror	r22
    11ca:	57 95       	ror	r21
    11cc:	47 95       	ror	r20
    11ce:	0a 94       	dec	r0
    11d0:	d2 f7       	brpl	.-12     	; 0x11c6 <__pack_f+0x7e>
    11d2:	81 e0       	ldi	r24, 0x01	; 1
    11d4:	90 e0       	ldi	r25, 0x00	; 0
    11d6:	a0 e0       	ldi	r26, 0x00	; 0
    11d8:	b0 e0       	ldi	r27, 0x00	; 0
    11da:	04 c0       	rjmp	.+8      	; 0x11e4 <__pack_f+0x9c>
    11dc:	88 0f       	add	r24, r24
    11de:	99 1f       	adc	r25, r25
    11e0:	aa 1f       	adc	r26, r26
    11e2:	bb 1f       	adc	r27, r27
    11e4:	2a 95       	dec	r18
    11e6:	d2 f7       	brpl	.-12     	; 0x11dc <__pack_f+0x94>
    11e8:	01 97       	sbiw	r24, 0x01	; 1
    11ea:	a1 09       	sbc	r26, r1
    11ec:	b1 09       	sbc	r27, r1
    11ee:	8e 21       	and	r24, r14
    11f0:	9f 21       	and	r25, r15
    11f2:	a0 23       	and	r26, r16
    11f4:	b1 23       	and	r27, r17
    11f6:	00 97       	sbiw	r24, 0x00	; 0
    11f8:	a1 05       	cpc	r26, r1
    11fa:	b1 05       	cpc	r27, r1
    11fc:	21 f0       	breq	.+8      	; 0x1206 <__pack_f+0xbe>
    11fe:	81 e0       	ldi	r24, 0x01	; 1
    1200:	90 e0       	ldi	r25, 0x00	; 0
    1202:	a0 e0       	ldi	r26, 0x00	; 0
    1204:	b0 e0       	ldi	r27, 0x00	; 0
    1206:	9a 01       	movw	r18, r20
    1208:	ab 01       	movw	r20, r22
    120a:	28 2b       	or	r18, r24
    120c:	39 2b       	or	r19, r25
    120e:	4a 2b       	or	r20, r26
    1210:	5b 2b       	or	r21, r27
    1212:	da 01       	movw	r26, r20
    1214:	c9 01       	movw	r24, r18
    1216:	8f 77       	andi	r24, 0x7F	; 127
    1218:	90 70       	andi	r25, 0x00	; 0
    121a:	a0 70       	andi	r26, 0x00	; 0
    121c:	b0 70       	andi	r27, 0x00	; 0
    121e:	80 34       	cpi	r24, 0x40	; 64
    1220:	91 05       	cpc	r25, r1
    1222:	a1 05       	cpc	r26, r1
    1224:	b1 05       	cpc	r27, r1
    1226:	39 f4       	brne	.+14     	; 0x1236 <__pack_f+0xee>
    1228:	27 ff       	sbrs	r18, 7
    122a:	09 c0       	rjmp	.+18     	; 0x123e <__pack_f+0xf6>
    122c:	20 5c       	subi	r18, 0xC0	; 192
    122e:	3f 4f       	sbci	r19, 0xFF	; 255
    1230:	4f 4f       	sbci	r20, 0xFF	; 255
    1232:	5f 4f       	sbci	r21, 0xFF	; 255
    1234:	04 c0       	rjmp	.+8      	; 0x123e <__pack_f+0xf6>
    1236:	21 5c       	subi	r18, 0xC1	; 193
    1238:	3f 4f       	sbci	r19, 0xFF	; 255
    123a:	4f 4f       	sbci	r20, 0xFF	; 255
    123c:	5f 4f       	sbci	r21, 0xFF	; 255
    123e:	e0 e0       	ldi	r30, 0x00	; 0
    1240:	f0 e0       	ldi	r31, 0x00	; 0
    1242:	20 30       	cpi	r18, 0x00	; 0
    1244:	a0 e0       	ldi	r26, 0x00	; 0
    1246:	3a 07       	cpc	r19, r26
    1248:	a0 e0       	ldi	r26, 0x00	; 0
    124a:	4a 07       	cpc	r20, r26
    124c:	a0 e4       	ldi	r26, 0x40	; 64
    124e:	5a 07       	cpc	r21, r26
    1250:	10 f0       	brcs	.+4      	; 0x1256 <__pack_f+0x10e>
    1252:	e1 e0       	ldi	r30, 0x01	; 1
    1254:	f0 e0       	ldi	r31, 0x00	; 0
    1256:	79 01       	movw	r14, r18
    1258:	8a 01       	movw	r16, r20
    125a:	27 c0       	rjmp	.+78     	; 0x12aa <__pack_f+0x162>
    125c:	60 38       	cpi	r22, 0x80	; 128
    125e:	71 05       	cpc	r23, r1
    1260:	64 f5       	brge	.+88     	; 0x12ba <__pack_f+0x172>
    1262:	fb 01       	movw	r30, r22
    1264:	e1 58       	subi	r30, 0x81	; 129
    1266:	ff 4f       	sbci	r31, 0xFF	; 255
    1268:	d8 01       	movw	r26, r16
    126a:	c7 01       	movw	r24, r14
    126c:	8f 77       	andi	r24, 0x7F	; 127
    126e:	90 70       	andi	r25, 0x00	; 0
    1270:	a0 70       	andi	r26, 0x00	; 0
    1272:	b0 70       	andi	r27, 0x00	; 0
    1274:	80 34       	cpi	r24, 0x40	; 64
    1276:	91 05       	cpc	r25, r1
    1278:	a1 05       	cpc	r26, r1
    127a:	b1 05       	cpc	r27, r1
    127c:	39 f4       	brne	.+14     	; 0x128c <__pack_f+0x144>
    127e:	e7 fe       	sbrs	r14, 7
    1280:	0d c0       	rjmp	.+26     	; 0x129c <__pack_f+0x154>
    1282:	80 e4       	ldi	r24, 0x40	; 64
    1284:	90 e0       	ldi	r25, 0x00	; 0
    1286:	a0 e0       	ldi	r26, 0x00	; 0
    1288:	b0 e0       	ldi	r27, 0x00	; 0
    128a:	04 c0       	rjmp	.+8      	; 0x1294 <__pack_f+0x14c>
    128c:	8f e3       	ldi	r24, 0x3F	; 63
    128e:	90 e0       	ldi	r25, 0x00	; 0
    1290:	a0 e0       	ldi	r26, 0x00	; 0
    1292:	b0 e0       	ldi	r27, 0x00	; 0
    1294:	e8 0e       	add	r14, r24
    1296:	f9 1e       	adc	r15, r25
    1298:	0a 1f       	adc	r16, r26
    129a:	1b 1f       	adc	r17, r27
    129c:	17 ff       	sbrs	r17, 7
    129e:	05 c0       	rjmp	.+10     	; 0x12aa <__pack_f+0x162>
    12a0:	16 95       	lsr	r17
    12a2:	07 95       	ror	r16
    12a4:	f7 94       	ror	r15
    12a6:	e7 94       	ror	r14
    12a8:	31 96       	adiw	r30, 0x01	; 1
    12aa:	87 e0       	ldi	r24, 0x07	; 7
    12ac:	16 95       	lsr	r17
    12ae:	07 95       	ror	r16
    12b0:	f7 94       	ror	r15
    12b2:	e7 94       	ror	r14
    12b4:	8a 95       	dec	r24
    12b6:	d1 f7       	brne	.-12     	; 0x12ac <__pack_f+0x164>
    12b8:	05 c0       	rjmp	.+10     	; 0x12c4 <__pack_f+0x17c>
    12ba:	ee 24       	eor	r14, r14
    12bc:	ff 24       	eor	r15, r15
    12be:	87 01       	movw	r16, r14
    12c0:	ef ef       	ldi	r30, 0xFF	; 255
    12c2:	f0 e0       	ldi	r31, 0x00	; 0
    12c4:	6e 2f       	mov	r22, r30
    12c6:	67 95       	ror	r22
    12c8:	66 27       	eor	r22, r22
    12ca:	67 95       	ror	r22
    12cc:	90 2f       	mov	r25, r16
    12ce:	9f 77       	andi	r25, 0x7F	; 127
    12d0:	d7 94       	ror	r13
    12d2:	dd 24       	eor	r13, r13
    12d4:	d7 94       	ror	r13
    12d6:	8e 2f       	mov	r24, r30
    12d8:	86 95       	lsr	r24
    12da:	49 2f       	mov	r20, r25
    12dc:	46 2b       	or	r20, r22
    12de:	58 2f       	mov	r21, r24
    12e0:	5d 29       	or	r21, r13
    12e2:	b7 01       	movw	r22, r14
    12e4:	ca 01       	movw	r24, r20
    12e6:	1f 91       	pop	r17
    12e8:	0f 91       	pop	r16
    12ea:	ff 90       	pop	r15
    12ec:	ef 90       	pop	r14
    12ee:	df 90       	pop	r13
    12f0:	08 95       	ret

000012f2 <__unpack_f>:
    12f2:	fc 01       	movw	r30, r24
    12f4:	db 01       	movw	r26, r22
    12f6:	40 81       	ld	r20, Z
    12f8:	51 81       	ldd	r21, Z+1	; 0x01
    12fa:	22 81       	ldd	r18, Z+2	; 0x02
    12fc:	62 2f       	mov	r22, r18
    12fe:	6f 77       	andi	r22, 0x7F	; 127
    1300:	70 e0       	ldi	r23, 0x00	; 0
    1302:	22 1f       	adc	r18, r18
    1304:	22 27       	eor	r18, r18
    1306:	22 1f       	adc	r18, r18
    1308:	93 81       	ldd	r25, Z+3	; 0x03
    130a:	89 2f       	mov	r24, r25
    130c:	88 0f       	add	r24, r24
    130e:	82 2b       	or	r24, r18
    1310:	28 2f       	mov	r18, r24
    1312:	30 e0       	ldi	r19, 0x00	; 0
    1314:	99 1f       	adc	r25, r25
    1316:	99 27       	eor	r25, r25
    1318:	99 1f       	adc	r25, r25
    131a:	11 96       	adiw	r26, 0x01	; 1
    131c:	9c 93       	st	X, r25
    131e:	11 97       	sbiw	r26, 0x01	; 1
    1320:	21 15       	cp	r18, r1
    1322:	31 05       	cpc	r19, r1
    1324:	a9 f5       	brne	.+106    	; 0x1390 <__unpack_f+0x9e>
    1326:	41 15       	cp	r20, r1
    1328:	51 05       	cpc	r21, r1
    132a:	61 05       	cpc	r22, r1
    132c:	71 05       	cpc	r23, r1
    132e:	11 f4       	brne	.+4      	; 0x1334 <__unpack_f+0x42>
    1330:	82 e0       	ldi	r24, 0x02	; 2
    1332:	37 c0       	rjmp	.+110    	; 0x13a2 <__unpack_f+0xb0>
    1334:	82 e8       	ldi	r24, 0x82	; 130
    1336:	9f ef       	ldi	r25, 0xFF	; 255
    1338:	13 96       	adiw	r26, 0x03	; 3
    133a:	9c 93       	st	X, r25
    133c:	8e 93       	st	-X, r24
    133e:	12 97       	sbiw	r26, 0x02	; 2
    1340:	9a 01       	movw	r18, r20
    1342:	ab 01       	movw	r20, r22
    1344:	67 e0       	ldi	r22, 0x07	; 7
    1346:	22 0f       	add	r18, r18
    1348:	33 1f       	adc	r19, r19
    134a:	44 1f       	adc	r20, r20
    134c:	55 1f       	adc	r21, r21
    134e:	6a 95       	dec	r22
    1350:	d1 f7       	brne	.-12     	; 0x1346 <__unpack_f+0x54>
    1352:	83 e0       	ldi	r24, 0x03	; 3
    1354:	8c 93       	st	X, r24
    1356:	0d c0       	rjmp	.+26     	; 0x1372 <__unpack_f+0x80>
    1358:	22 0f       	add	r18, r18
    135a:	33 1f       	adc	r19, r19
    135c:	44 1f       	adc	r20, r20
    135e:	55 1f       	adc	r21, r21
    1360:	12 96       	adiw	r26, 0x02	; 2
    1362:	8d 91       	ld	r24, X+
    1364:	9c 91       	ld	r25, X
    1366:	13 97       	sbiw	r26, 0x03	; 3
    1368:	01 97       	sbiw	r24, 0x01	; 1
    136a:	13 96       	adiw	r26, 0x03	; 3
    136c:	9c 93       	st	X, r25
    136e:	8e 93       	st	-X, r24
    1370:	12 97       	sbiw	r26, 0x02	; 2
    1372:	20 30       	cpi	r18, 0x00	; 0
    1374:	80 e0       	ldi	r24, 0x00	; 0
    1376:	38 07       	cpc	r19, r24
    1378:	80 e0       	ldi	r24, 0x00	; 0
    137a:	48 07       	cpc	r20, r24
    137c:	80 e4       	ldi	r24, 0x40	; 64
    137e:	58 07       	cpc	r21, r24
    1380:	58 f3       	brcs	.-42     	; 0x1358 <__unpack_f+0x66>
    1382:	14 96       	adiw	r26, 0x04	; 4
    1384:	2d 93       	st	X+, r18
    1386:	3d 93       	st	X+, r19
    1388:	4d 93       	st	X+, r20
    138a:	5c 93       	st	X, r21
    138c:	17 97       	sbiw	r26, 0x07	; 7
    138e:	08 95       	ret
    1390:	2f 3f       	cpi	r18, 0xFF	; 255
    1392:	31 05       	cpc	r19, r1
    1394:	79 f4       	brne	.+30     	; 0x13b4 <__unpack_f+0xc2>
    1396:	41 15       	cp	r20, r1
    1398:	51 05       	cpc	r21, r1
    139a:	61 05       	cpc	r22, r1
    139c:	71 05       	cpc	r23, r1
    139e:	19 f4       	brne	.+6      	; 0x13a6 <__unpack_f+0xb4>
    13a0:	84 e0       	ldi	r24, 0x04	; 4
    13a2:	8c 93       	st	X, r24
    13a4:	08 95       	ret
    13a6:	64 ff       	sbrs	r22, 4
    13a8:	03 c0       	rjmp	.+6      	; 0x13b0 <__unpack_f+0xbe>
    13aa:	81 e0       	ldi	r24, 0x01	; 1
    13ac:	8c 93       	st	X, r24
    13ae:	12 c0       	rjmp	.+36     	; 0x13d4 <__unpack_f+0xe2>
    13b0:	1c 92       	st	X, r1
    13b2:	10 c0       	rjmp	.+32     	; 0x13d4 <__unpack_f+0xe2>
    13b4:	2f 57       	subi	r18, 0x7F	; 127
    13b6:	30 40       	sbci	r19, 0x00	; 0
    13b8:	13 96       	adiw	r26, 0x03	; 3
    13ba:	3c 93       	st	X, r19
    13bc:	2e 93       	st	-X, r18
    13be:	12 97       	sbiw	r26, 0x02	; 2
    13c0:	83 e0       	ldi	r24, 0x03	; 3
    13c2:	8c 93       	st	X, r24
    13c4:	87 e0       	ldi	r24, 0x07	; 7
    13c6:	44 0f       	add	r20, r20
    13c8:	55 1f       	adc	r21, r21
    13ca:	66 1f       	adc	r22, r22
    13cc:	77 1f       	adc	r23, r23
    13ce:	8a 95       	dec	r24
    13d0:	d1 f7       	brne	.-12     	; 0x13c6 <__unpack_f+0xd4>
    13d2:	70 64       	ori	r23, 0x40	; 64
    13d4:	14 96       	adiw	r26, 0x04	; 4
    13d6:	4d 93       	st	X+, r20
    13d8:	5d 93       	st	X+, r21
    13da:	6d 93       	st	X+, r22
    13dc:	7c 93       	st	X, r23
    13de:	17 97       	sbiw	r26, 0x07	; 7
    13e0:	08 95       	ret

000013e2 <__fpcmp_parts_f>:
    13e2:	1f 93       	push	r17
    13e4:	dc 01       	movw	r26, r24
    13e6:	fb 01       	movw	r30, r22
    13e8:	9c 91       	ld	r25, X
    13ea:	92 30       	cpi	r25, 0x02	; 2
    13ec:	08 f4       	brcc	.+2      	; 0x13f0 <__fpcmp_parts_f+0xe>
    13ee:	47 c0       	rjmp	.+142    	; 0x147e <__fpcmp_parts_f+0x9c>
    13f0:	80 81       	ld	r24, Z
    13f2:	82 30       	cpi	r24, 0x02	; 2
    13f4:	08 f4       	brcc	.+2      	; 0x13f8 <__fpcmp_parts_f+0x16>
    13f6:	43 c0       	rjmp	.+134    	; 0x147e <__fpcmp_parts_f+0x9c>
    13f8:	94 30       	cpi	r25, 0x04	; 4
    13fa:	51 f4       	brne	.+20     	; 0x1410 <__fpcmp_parts_f+0x2e>
    13fc:	11 96       	adiw	r26, 0x01	; 1
    13fe:	1c 91       	ld	r17, X
    1400:	84 30       	cpi	r24, 0x04	; 4
    1402:	99 f5       	brne	.+102    	; 0x146a <__fpcmp_parts_f+0x88>
    1404:	81 81       	ldd	r24, Z+1	; 0x01
    1406:	68 2f       	mov	r22, r24
    1408:	70 e0       	ldi	r23, 0x00	; 0
    140a:	61 1b       	sub	r22, r17
    140c:	71 09       	sbc	r23, r1
    140e:	3f c0       	rjmp	.+126    	; 0x148e <__fpcmp_parts_f+0xac>
    1410:	84 30       	cpi	r24, 0x04	; 4
    1412:	21 f0       	breq	.+8      	; 0x141c <__fpcmp_parts_f+0x3a>
    1414:	92 30       	cpi	r25, 0x02	; 2
    1416:	31 f4       	brne	.+12     	; 0x1424 <__fpcmp_parts_f+0x42>
    1418:	82 30       	cpi	r24, 0x02	; 2
    141a:	b9 f1       	breq	.+110    	; 0x148a <__fpcmp_parts_f+0xa8>
    141c:	81 81       	ldd	r24, Z+1	; 0x01
    141e:	88 23       	and	r24, r24
    1420:	89 f1       	breq	.+98     	; 0x1484 <__fpcmp_parts_f+0xa2>
    1422:	2d c0       	rjmp	.+90     	; 0x147e <__fpcmp_parts_f+0x9c>
    1424:	11 96       	adiw	r26, 0x01	; 1
    1426:	1c 91       	ld	r17, X
    1428:	11 97       	sbiw	r26, 0x01	; 1
    142a:	82 30       	cpi	r24, 0x02	; 2
    142c:	f1 f0       	breq	.+60     	; 0x146a <__fpcmp_parts_f+0x88>
    142e:	81 81       	ldd	r24, Z+1	; 0x01
    1430:	18 17       	cp	r17, r24
    1432:	d9 f4       	brne	.+54     	; 0x146a <__fpcmp_parts_f+0x88>
    1434:	12 96       	adiw	r26, 0x02	; 2
    1436:	2d 91       	ld	r18, X+
    1438:	3c 91       	ld	r19, X
    143a:	13 97       	sbiw	r26, 0x03	; 3
    143c:	82 81       	ldd	r24, Z+2	; 0x02
    143e:	93 81       	ldd	r25, Z+3	; 0x03
    1440:	82 17       	cp	r24, r18
    1442:	93 07       	cpc	r25, r19
    1444:	94 f0       	brlt	.+36     	; 0x146a <__fpcmp_parts_f+0x88>
    1446:	28 17       	cp	r18, r24
    1448:	39 07       	cpc	r19, r25
    144a:	bc f0       	brlt	.+46     	; 0x147a <__fpcmp_parts_f+0x98>
    144c:	14 96       	adiw	r26, 0x04	; 4
    144e:	8d 91       	ld	r24, X+
    1450:	9d 91       	ld	r25, X+
    1452:	0d 90       	ld	r0, X+
    1454:	bc 91       	ld	r27, X
    1456:	a0 2d       	mov	r26, r0
    1458:	24 81       	ldd	r18, Z+4	; 0x04
    145a:	35 81       	ldd	r19, Z+5	; 0x05
    145c:	46 81       	ldd	r20, Z+6	; 0x06
    145e:	57 81       	ldd	r21, Z+7	; 0x07
    1460:	28 17       	cp	r18, r24
    1462:	39 07       	cpc	r19, r25
    1464:	4a 07       	cpc	r20, r26
    1466:	5b 07       	cpc	r21, r27
    1468:	18 f4       	brcc	.+6      	; 0x1470 <__fpcmp_parts_f+0x8e>
    146a:	11 23       	and	r17, r17
    146c:	41 f0       	breq	.+16     	; 0x147e <__fpcmp_parts_f+0x9c>
    146e:	0a c0       	rjmp	.+20     	; 0x1484 <__fpcmp_parts_f+0xa2>
    1470:	82 17       	cp	r24, r18
    1472:	93 07       	cpc	r25, r19
    1474:	a4 07       	cpc	r26, r20
    1476:	b5 07       	cpc	r27, r21
    1478:	40 f4       	brcc	.+16     	; 0x148a <__fpcmp_parts_f+0xa8>
    147a:	11 23       	and	r17, r17
    147c:	19 f0       	breq	.+6      	; 0x1484 <__fpcmp_parts_f+0xa2>
    147e:	61 e0       	ldi	r22, 0x01	; 1
    1480:	70 e0       	ldi	r23, 0x00	; 0
    1482:	05 c0       	rjmp	.+10     	; 0x148e <__fpcmp_parts_f+0xac>
    1484:	6f ef       	ldi	r22, 0xFF	; 255
    1486:	7f ef       	ldi	r23, 0xFF	; 255
    1488:	02 c0       	rjmp	.+4      	; 0x148e <__fpcmp_parts_f+0xac>
    148a:	60 e0       	ldi	r22, 0x00	; 0
    148c:	70 e0       	ldi	r23, 0x00	; 0
    148e:	cb 01       	movw	r24, r22
    1490:	1f 91       	pop	r17
    1492:	08 95       	ret

00001494 <TIMERS_voidTimer0Init>:
static void (*Global_pvArrayFunction[ARRAY_SIZE])(void) = {NULL};

/********************			TIMER0 Functions			*********************************/

void TIMERS_voidTimer0Init (void)
{
    1494:	df 93       	push	r29
    1496:	cf 93       	push	r28
    1498:	cd b7       	in	r28, 0x3d	; 61
    149a:	de b7       	in	r29, 0x3e	; 62
	#if TIMER0_MODE == TIMER0_OVF_MODE
		/*Set OVF mode*/
		CLR_BIT(TCCR0, TCCR0_WGM00);
    149c:	a3 e5       	ldi	r26, 0x53	; 83
    149e:	b0 e0       	ldi	r27, 0x00	; 0
    14a0:	e3 e5       	ldi	r30, 0x53	; 83
    14a2:	f0 e0       	ldi	r31, 0x00	; 0
    14a4:	80 81       	ld	r24, Z
    14a6:	8f 7b       	andi	r24, 0xBF	; 191
    14a8:	8c 93       	st	X, r24
		CLR_BIT(TCCR0, TCCR0_WGM01);
    14aa:	a3 e5       	ldi	r26, 0x53	; 83
    14ac:	b0 e0       	ldi	r27, 0x00	; 0
    14ae:	e3 e5       	ldi	r30, 0x53	; 83
    14b0:	f0 e0       	ldi	r31, 0x00	; 0
    14b2:	80 81       	ld	r24, Z
    14b4:	87 7f       	andi	r24, 0xF7	; 247
    14b6:	8c 93       	st	X, r24
		#if TIMER0_OVF_INTERRUPT == TIMER0_OVF_INTERRUPT_ON
			/*Enable OVF interrupt*/
			SET_BIT(TIMSK, TIMSK_TOIE0);
		#elif TIMER0_OVF_INTERRUPT == TIMER0_OVF_INTERRUPT_OFF
			/*Disable OVF interrupt*/
			CLR_BIT(TIMSK, TIMSK_TOIE0);
    14b8:	a9 e5       	ldi	r26, 0x59	; 89
    14ba:	b0 e0       	ldi	r27, 0x00	; 0
    14bc:	e9 e5       	ldi	r30, 0x59	; 89
    14be:	f0 e0       	ldi	r31, 0x00	; 0
    14c0:	80 81       	ld	r24, Z
    14c2:	8e 7f       	andi	r24, 0xFE	; 254
    14c4:	8c 93       	st	X, r24
	#else
		#error "Timer0_MODE Configuration Error"
	#endif

	/*Set Prescaler of the clock*/
	TCCR0 &= TIMERS_PRESCALER_MASK;
    14c6:	a3 e5       	ldi	r26, 0x53	; 83
    14c8:	b0 e0       	ldi	r27, 0x00	; 0
    14ca:	e3 e5       	ldi	r30, 0x53	; 83
    14cc:	f0 e0       	ldi	r31, 0x00	; 0
    14ce:	80 81       	ld	r24, Z
    14d0:	88 7f       	andi	r24, 0xF8	; 248
    14d2:	8c 93       	st	X, r24
	TCCR0 |= TIMER0_PRESCALER;
    14d4:	a3 e5       	ldi	r26, 0x53	; 83
    14d6:	b0 e0       	ldi	r27, 0x00	; 0
    14d8:	e3 e5       	ldi	r30, 0x53	; 83
    14da:	f0 e0       	ldi	r31, 0x00	; 0
    14dc:	80 81       	ld	r24, Z
    14de:	81 60       	ori	r24, 0x01	; 1
    14e0:	8c 93       	st	X, r24
}
    14e2:	cf 91       	pop	r28
    14e4:	df 91       	pop	r29
    14e6:	08 95       	ret

000014e8 <TIMERS_voidTimer0SetCompareMatchValue>:

void TIMERS_voidTimer0SetCompareMatchValue (u8 Copy_u8CompareMatchValue)
{
    14e8:	df 93       	push	r29
    14ea:	cf 93       	push	r28
    14ec:	0f 92       	push	r0
    14ee:	cd b7       	in	r28, 0x3d	; 61
    14f0:	de b7       	in	r29, 0x3e	; 62
    14f2:	89 83       	std	Y+1, r24	; 0x01
	OCR0 = Copy_u8CompareMatchValue;
    14f4:	ec e5       	ldi	r30, 0x5C	; 92
    14f6:	f0 e0       	ldi	r31, 0x00	; 0
    14f8:	89 81       	ldd	r24, Y+1	; 0x01
    14fa:	80 83       	st	Z, r24
}
    14fc:	0f 90       	pop	r0
    14fe:	cf 91       	pop	r28
    1500:	df 91       	pop	r29
    1502:	08 95       	ret

00001504 <TIMERS_voidTimer0SetPreloadValue>:

void TIMERS_voidTimer0SetPreloadValue (u8 Copy_u8PreloadValue)
{
    1504:	df 93       	push	r29
    1506:	cf 93       	push	r28
    1508:	0f 92       	push	r0
    150a:	cd b7       	in	r28, 0x3d	; 61
    150c:	de b7       	in	r29, 0x3e	; 62
    150e:	89 83       	std	Y+1, r24	; 0x01
	TCNT0 = Copy_u8PreloadValue;
    1510:	e2 e5       	ldi	r30, 0x52	; 82
    1512:	f0 e0       	ldi	r31, 0x00	; 0
    1514:	89 81       	ldd	r24, Y+1	; 0x01
    1516:	80 83       	st	Z, r24
}
    1518:	0f 90       	pop	r0
    151a:	cf 91       	pop	r28
    151c:	df 91       	pop	r29
    151e:	08 95       	ret

00001520 <TIMERS_voidTimer0CTCSetCallbackFunction>:

void TIMERS_voidTimer0CTCSetCallbackFunction (void (*Copy_pvCTCFunction) (void))
{
    1520:	df 93       	push	r29
    1522:	cf 93       	push	r28
    1524:	00 d0       	rcall	.+0      	; 0x1526 <TIMERS_voidTimer0CTCSetCallbackFunction+0x6>
    1526:	cd b7       	in	r28, 0x3d	; 61
    1528:	de b7       	in	r29, 0x3e	; 62
    152a:	9a 83       	std	Y+2, r25	; 0x02
    152c:	89 83       	std	Y+1, r24	; 0x01
	Global_pvArrayFunction[TIMER0_CTC] = Copy_pvCTCFunction;
    152e:	89 81       	ldd	r24, Y+1	; 0x01
    1530:	9a 81       	ldd	r25, Y+2	; 0x02
    1532:	90 93 69 01 	sts	0x0169, r25
    1536:	80 93 68 01 	sts	0x0168, r24
}
    153a:	0f 90       	pop	r0
    153c:	0f 90       	pop	r0
    153e:	cf 91       	pop	r28
    1540:	df 91       	pop	r29
    1542:	08 95       	ret

00001544 <TIMERS_voidTimer0OVFSetCallbackFunction>:

void TIMERS_voidTimer0OVFSetCallbackFunction (void (*Copy_pvCTCFunction) (void))
{
    1544:	df 93       	push	r29
    1546:	cf 93       	push	r28
    1548:	00 d0       	rcall	.+0      	; 0x154a <TIMERS_voidTimer0OVFSetCallbackFunction+0x6>
    154a:	cd b7       	in	r28, 0x3d	; 61
    154c:	de b7       	in	r29, 0x3e	; 62
    154e:	9a 83       	std	Y+2, r25	; 0x02
    1550:	89 83       	std	Y+1, r24	; 0x01
	Global_pvArrayFunction[TIMER0_OVF] = Copy_pvCTCFunction;
    1552:	89 81       	ldd	r24, Y+1	; 0x01
    1554:	9a 81       	ldd	r25, Y+2	; 0x02
    1556:	90 93 6b 01 	sts	0x016B, r25
    155a:	80 93 6a 01 	sts	0x016A, r24
}
    155e:	0f 90       	pop	r0
    1560:	0f 90       	pop	r0
    1562:	cf 91       	pop	r28
    1564:	df 91       	pop	r29
    1566:	08 95       	ret

00001568 <TIMERS_voidTimer0Delay>:

void TIMERS_voidTimer0Delay (u64 Copy_u64Delay, u8 Copy_u8Type)
{
    1568:	af 92       	push	r10
    156a:	bf 92       	push	r11
    156c:	cf 92       	push	r12
    156e:	df 92       	push	r13
    1570:	ef 92       	push	r14
    1572:	ff 92       	push	r15
    1574:	0f 93       	push	r16
    1576:	1f 93       	push	r17
    1578:	df 93       	push	r29
    157a:	cf 93       	push	r28
    157c:	cd b7       	in	r28, 0x3d	; 61
    157e:	de b7       	in	r29, 0x3e	; 62
    1580:	cd 57       	subi	r28, 0x7D	; 125
    1582:	d0 40       	sbci	r29, 0x00	; 0
    1584:	0f b6       	in	r0, 0x3f	; 63
    1586:	f8 94       	cli
    1588:	de bf       	out	0x3e, r29	; 62
    158a:	0f be       	out	0x3f, r0	; 63
    158c:	cd bf       	out	0x3d, r28	; 61
    158e:	2e 8b       	std	Y+22, r18	; 0x16
    1590:	3f 8b       	std	Y+23, r19	; 0x17
    1592:	48 8f       	std	Y+24, r20	; 0x18
    1594:	59 8f       	std	Y+25, r21	; 0x19
    1596:	6a 8f       	std	Y+26, r22	; 0x1a
    1598:	7b 8f       	std	Y+27, r23	; 0x1b
    159a:	8c 8f       	std	Y+28, r24	; 0x1c
    159c:	9d 8f       	std	Y+29, r25	; 0x1d
    159e:	0e 8f       	std	Y+30, r16	; 0x1e
	//Check Delay Type
	if (Copy_u8Type == TIMERS_MS)
    15a0:	8e 8d       	ldd	r24, Y+30	; 0x1e
    15a2:	81 30       	cpi	r24, 0x01	; 1
    15a4:	09 f0       	breq	.+2      	; 0x15a8 <TIMERS_voidTimer0Delay+0x40>
    15a6:	2c c4       	rjmp	.+2136   	; 0x1e00 <TIMERS_voidTimer0Delay+0x898>
	{
		Copy_u64Delay *= 1000;
    15a8:	0e 89       	ldd	r16, Y+22	; 0x16
    15aa:	08 ab       	std	Y+48, r16	; 0x30
    15ac:	1f 89       	ldd	r17, Y+23	; 0x17
    15ae:	19 ab       	std	Y+49, r17	; 0x31
    15b0:	28 8d       	ldd	r18, Y+24	; 0x18
    15b2:	2a ab       	std	Y+50, r18	; 0x32
    15b4:	39 8d       	ldd	r19, Y+25	; 0x19
    15b6:	3b ab       	std	Y+51, r19	; 0x33
    15b8:	4a 8d       	ldd	r20, Y+26	; 0x1a
    15ba:	4c ab       	std	Y+52, r20	; 0x34
    15bc:	5b 8d       	ldd	r21, Y+27	; 0x1b
    15be:	5d ab       	std	Y+53, r21	; 0x35
    15c0:	6c 8d       	ldd	r22, Y+28	; 0x1c
    15c2:	6e ab       	std	Y+54, r22	; 0x36
    15c4:	7d 8d       	ldd	r23, Y+29	; 0x1d
    15c6:	7f ab       	std	Y+55, r23	; 0x37
    15c8:	a8 a8       	ldd	r10, Y+48	; 0x30
    15ca:	b9 a8       	ldd	r11, Y+49	; 0x31
    15cc:	ca a8       	ldd	r12, Y+50	; 0x32
    15ce:	db a8       	ldd	r13, Y+51	; 0x33
    15d0:	ec a8       	ldd	r14, Y+52	; 0x34
    15d2:	fd a8       	ldd	r15, Y+53	; 0x35
    15d4:	0e a9       	ldd	r16, Y+54	; 0x36
    15d6:	1f a9       	ldd	r17, Y+55	; 0x37
    15d8:	2a 2d       	mov	r18, r10
    15da:	3b 2d       	mov	r19, r11
    15dc:	4c 2d       	mov	r20, r12
    15de:	5d 2d       	mov	r21, r13
    15e0:	6e 2d       	mov	r22, r14
    15e2:	7f 2d       	mov	r23, r15
    15e4:	80 2f       	mov	r24, r16
    15e6:	91 2f       	mov	r25, r17
    15e8:	02 e0       	ldi	r16, 0x02	; 2
    15ea:	0e 94 44 01 	call	0x288	; 0x288 <__ashldi3>
    15ee:	28 af       	std	Y+56, r18	; 0x38
    15f0:	39 af       	std	Y+57, r19	; 0x39
    15f2:	4a af       	std	Y+58, r20	; 0x3a
    15f4:	5b af       	std	Y+59, r21	; 0x3b
    15f6:	6c af       	std	Y+60, r22	; 0x3c
    15f8:	7d af       	std	Y+61, r23	; 0x3d
    15fa:	8e af       	std	Y+62, r24	; 0x3e
    15fc:	9f af       	std	Y+63, r25	; 0x3f
    15fe:	28 ad       	ldd	r18, Y+56	; 0x38
    1600:	39 ad       	ldd	r19, Y+57	; 0x39
    1602:	4a ad       	ldd	r20, Y+58	; 0x3a
    1604:	5b ad       	ldd	r21, Y+59	; 0x3b
    1606:	6c ad       	ldd	r22, Y+60	; 0x3c
    1608:	7d ad       	ldd	r23, Y+61	; 0x3d
    160a:	8e ad       	ldd	r24, Y+62	; 0x3e
    160c:	9f ad       	ldd	r25, Y+63	; 0x3f
    160e:	05 e0       	ldi	r16, 0x05	; 5
    1610:	0e 94 44 01 	call	0x288	; 0x288 <__ashldi3>
    1614:	21 96       	adiw	r28, 0x01	; 1
    1616:	2f af       	std	Y+63, r18	; 0x3f
    1618:	21 97       	sbiw	r28, 0x01	; 1
    161a:	22 96       	adiw	r28, 0x02	; 2
    161c:	3f af       	std	Y+63, r19	; 0x3f
    161e:	22 97       	sbiw	r28, 0x02	; 2
    1620:	23 96       	adiw	r28, 0x03	; 3
    1622:	4f af       	std	Y+63, r20	; 0x3f
    1624:	23 97       	sbiw	r28, 0x03	; 3
    1626:	24 96       	adiw	r28, 0x04	; 4
    1628:	5f af       	std	Y+63, r21	; 0x3f
    162a:	24 97       	sbiw	r28, 0x04	; 4
    162c:	25 96       	adiw	r28, 0x05	; 5
    162e:	6f af       	std	Y+63, r22	; 0x3f
    1630:	25 97       	sbiw	r28, 0x05	; 5
    1632:	26 96       	adiw	r28, 0x06	; 6
    1634:	7f af       	std	Y+63, r23	; 0x3f
    1636:	26 97       	sbiw	r28, 0x06	; 6
    1638:	27 96       	adiw	r28, 0x07	; 7
    163a:	8f af       	std	Y+63, r24	; 0x3f
    163c:	27 97       	sbiw	r28, 0x07	; 7
    163e:	28 96       	adiw	r28, 0x08	; 8
    1640:	9f af       	std	Y+63, r25	; 0x3f
    1642:	28 97       	sbiw	r28, 0x08	; 8
    1644:	21 96       	adiw	r28, 0x01	; 1
    1646:	8f ad       	ldd	r24, Y+63	; 0x3f
    1648:	21 97       	sbiw	r28, 0x01	; 1
    164a:	98 ad       	ldd	r25, Y+56	; 0x38
    164c:	89 1b       	sub	r24, r25
    164e:	29 96       	adiw	r28, 0x09	; 9
    1650:	8f af       	std	Y+63, r24	; 0x3f
    1652:	29 97       	sbiw	r28, 0x09	; 9
    1654:	01 e0       	ldi	r16, 0x01	; 1
    1656:	61 96       	adiw	r28, 0x11	; 17
    1658:	0f af       	std	Y+63, r16	; 0x3f
    165a:	61 97       	sbiw	r28, 0x11	; 17
    165c:	29 96       	adiw	r28, 0x09	; 9
    165e:	1f ad       	ldd	r17, Y+63	; 0x3f
    1660:	29 97       	sbiw	r28, 0x09	; 9
    1662:	21 96       	adiw	r28, 0x01	; 1
    1664:	2f ad       	ldd	r18, Y+63	; 0x3f
    1666:	21 97       	sbiw	r28, 0x01	; 1
    1668:	21 17       	cp	r18, r17
    166a:	18 f0       	brcs	.+6      	; 0x1672 <TIMERS_voidTimer0Delay+0x10a>
    166c:	61 96       	adiw	r28, 0x11	; 17
    166e:	1f ae       	std	Y+63, r1	; 0x3f
    1670:	61 97       	sbiw	r28, 0x11	; 17
    1672:	22 96       	adiw	r28, 0x02	; 2
    1674:	3f ad       	ldd	r19, Y+63	; 0x3f
    1676:	22 97       	sbiw	r28, 0x02	; 2
    1678:	49 ad       	ldd	r20, Y+57	; 0x39
    167a:	34 1b       	sub	r19, r20
    167c:	2a 96       	adiw	r28, 0x0a	; 10
    167e:	3f af       	std	Y+63, r19	; 0x3f
    1680:	2a 97       	sbiw	r28, 0x0a	; 10
    1682:	51 e0       	ldi	r21, 0x01	; 1
    1684:	62 96       	adiw	r28, 0x12	; 18
    1686:	5f af       	std	Y+63, r21	; 0x3f
    1688:	62 97       	sbiw	r28, 0x12	; 18
    168a:	2a 96       	adiw	r28, 0x0a	; 10
    168c:	6f ad       	ldd	r22, Y+63	; 0x3f
    168e:	2a 97       	sbiw	r28, 0x0a	; 10
    1690:	22 96       	adiw	r28, 0x02	; 2
    1692:	7f ad       	ldd	r23, Y+63	; 0x3f
    1694:	22 97       	sbiw	r28, 0x02	; 2
    1696:	76 17       	cp	r23, r22
    1698:	18 f0       	brcs	.+6      	; 0x16a0 <TIMERS_voidTimer0Delay+0x138>
    169a:	62 96       	adiw	r28, 0x12	; 18
    169c:	1f ae       	std	Y+63, r1	; 0x3f
    169e:	62 97       	sbiw	r28, 0x12	; 18
    16a0:	2a 96       	adiw	r28, 0x0a	; 10
    16a2:	8f ad       	ldd	r24, Y+63	; 0x3f
    16a4:	2a 97       	sbiw	r28, 0x0a	; 10
    16a6:	61 96       	adiw	r28, 0x11	; 17
    16a8:	9f ad       	ldd	r25, Y+63	; 0x3f
    16aa:	61 97       	sbiw	r28, 0x11	; 17
    16ac:	89 1b       	sub	r24, r25
    16ae:	63 96       	adiw	r28, 0x13	; 19
    16b0:	8f af       	std	Y+63, r24	; 0x3f
    16b2:	63 97       	sbiw	r28, 0x13	; 19
    16b4:	01 e0       	ldi	r16, 0x01	; 1
    16b6:	64 96       	adiw	r28, 0x14	; 20
    16b8:	0f af       	std	Y+63, r16	; 0x3f
    16ba:	64 97       	sbiw	r28, 0x14	; 20
    16bc:	63 96       	adiw	r28, 0x13	; 19
    16be:	1f ad       	ldd	r17, Y+63	; 0x3f
    16c0:	63 97       	sbiw	r28, 0x13	; 19
    16c2:	2a 96       	adiw	r28, 0x0a	; 10
    16c4:	2f ad       	ldd	r18, Y+63	; 0x3f
    16c6:	2a 97       	sbiw	r28, 0x0a	; 10
    16c8:	21 17       	cp	r18, r17
    16ca:	18 f0       	brcs	.+6      	; 0x16d2 <TIMERS_voidTimer0Delay+0x16a>
    16cc:	64 96       	adiw	r28, 0x14	; 20
    16ce:	1f ae       	std	Y+63, r1	; 0x3f
    16d0:	64 97       	sbiw	r28, 0x14	; 20
    16d2:	62 96       	adiw	r28, 0x12	; 18
    16d4:	3f ad       	ldd	r19, Y+63	; 0x3f
    16d6:	62 97       	sbiw	r28, 0x12	; 18
    16d8:	64 96       	adiw	r28, 0x14	; 20
    16da:	4f ad       	ldd	r20, Y+63	; 0x3f
    16dc:	64 97       	sbiw	r28, 0x14	; 20
    16de:	34 2b       	or	r19, r20
    16e0:	62 96       	adiw	r28, 0x12	; 18
    16e2:	3f af       	std	Y+63, r19	; 0x3f
    16e4:	62 97       	sbiw	r28, 0x12	; 18
    16e6:	63 96       	adiw	r28, 0x13	; 19
    16e8:	5f ad       	ldd	r21, Y+63	; 0x3f
    16ea:	63 97       	sbiw	r28, 0x13	; 19
    16ec:	2a 96       	adiw	r28, 0x0a	; 10
    16ee:	5f af       	std	Y+63, r21	; 0x3f
    16f0:	2a 97       	sbiw	r28, 0x0a	; 10
    16f2:	23 96       	adiw	r28, 0x03	; 3
    16f4:	6f ad       	ldd	r22, Y+63	; 0x3f
    16f6:	23 97       	sbiw	r28, 0x03	; 3
    16f8:	7a ad       	ldd	r23, Y+58	; 0x3a
    16fa:	67 1b       	sub	r22, r23
    16fc:	2b 96       	adiw	r28, 0x0b	; 11
    16fe:	6f af       	std	Y+63, r22	; 0x3f
    1700:	2b 97       	sbiw	r28, 0x0b	; 11
    1702:	81 e0       	ldi	r24, 0x01	; 1
    1704:	65 96       	adiw	r28, 0x15	; 21
    1706:	8f af       	std	Y+63, r24	; 0x3f
    1708:	65 97       	sbiw	r28, 0x15	; 21
    170a:	2b 96       	adiw	r28, 0x0b	; 11
    170c:	9f ad       	ldd	r25, Y+63	; 0x3f
    170e:	2b 97       	sbiw	r28, 0x0b	; 11
    1710:	23 96       	adiw	r28, 0x03	; 3
    1712:	0f ad       	ldd	r16, Y+63	; 0x3f
    1714:	23 97       	sbiw	r28, 0x03	; 3
    1716:	09 17       	cp	r16, r25
    1718:	18 f0       	brcs	.+6      	; 0x1720 <TIMERS_voidTimer0Delay+0x1b8>
    171a:	65 96       	adiw	r28, 0x15	; 21
    171c:	1f ae       	std	Y+63, r1	; 0x3f
    171e:	65 97       	sbiw	r28, 0x15	; 21
    1720:	2b 96       	adiw	r28, 0x0b	; 11
    1722:	1f ad       	ldd	r17, Y+63	; 0x3f
    1724:	2b 97       	sbiw	r28, 0x0b	; 11
    1726:	62 96       	adiw	r28, 0x12	; 18
    1728:	2f ad       	ldd	r18, Y+63	; 0x3f
    172a:	62 97       	sbiw	r28, 0x12	; 18
    172c:	12 1b       	sub	r17, r18
    172e:	66 96       	adiw	r28, 0x16	; 22
    1730:	1f af       	std	Y+63, r17	; 0x3f
    1732:	66 97       	sbiw	r28, 0x16	; 22
    1734:	31 e0       	ldi	r19, 0x01	; 1
    1736:	67 96       	adiw	r28, 0x17	; 23
    1738:	3f af       	std	Y+63, r19	; 0x3f
    173a:	67 97       	sbiw	r28, 0x17	; 23
    173c:	66 96       	adiw	r28, 0x16	; 22
    173e:	4f ad       	ldd	r20, Y+63	; 0x3f
    1740:	66 97       	sbiw	r28, 0x16	; 22
    1742:	2b 96       	adiw	r28, 0x0b	; 11
    1744:	5f ad       	ldd	r21, Y+63	; 0x3f
    1746:	2b 97       	sbiw	r28, 0x0b	; 11
    1748:	54 17       	cp	r21, r20
    174a:	18 f0       	brcs	.+6      	; 0x1752 <TIMERS_voidTimer0Delay+0x1ea>
    174c:	67 96       	adiw	r28, 0x17	; 23
    174e:	1f ae       	std	Y+63, r1	; 0x3f
    1750:	67 97       	sbiw	r28, 0x17	; 23
    1752:	65 96       	adiw	r28, 0x15	; 21
    1754:	6f ad       	ldd	r22, Y+63	; 0x3f
    1756:	65 97       	sbiw	r28, 0x15	; 21
    1758:	67 96       	adiw	r28, 0x17	; 23
    175a:	7f ad       	ldd	r23, Y+63	; 0x3f
    175c:	67 97       	sbiw	r28, 0x17	; 23
    175e:	67 2b       	or	r22, r23
    1760:	65 96       	adiw	r28, 0x15	; 21
    1762:	6f af       	std	Y+63, r22	; 0x3f
    1764:	65 97       	sbiw	r28, 0x15	; 21
    1766:	66 96       	adiw	r28, 0x16	; 22
    1768:	8f ad       	ldd	r24, Y+63	; 0x3f
    176a:	66 97       	sbiw	r28, 0x16	; 22
    176c:	2b 96       	adiw	r28, 0x0b	; 11
    176e:	8f af       	std	Y+63, r24	; 0x3f
    1770:	2b 97       	sbiw	r28, 0x0b	; 11
    1772:	24 96       	adiw	r28, 0x04	; 4
    1774:	9f ad       	ldd	r25, Y+63	; 0x3f
    1776:	24 97       	sbiw	r28, 0x04	; 4
    1778:	0b ad       	ldd	r16, Y+59	; 0x3b
    177a:	90 1b       	sub	r25, r16
    177c:	2c 96       	adiw	r28, 0x0c	; 12
    177e:	9f af       	std	Y+63, r25	; 0x3f
    1780:	2c 97       	sbiw	r28, 0x0c	; 12
    1782:	11 e0       	ldi	r17, 0x01	; 1
    1784:	68 96       	adiw	r28, 0x18	; 24
    1786:	1f af       	std	Y+63, r17	; 0x3f
    1788:	68 97       	sbiw	r28, 0x18	; 24
    178a:	2c 96       	adiw	r28, 0x0c	; 12
    178c:	2f ad       	ldd	r18, Y+63	; 0x3f
    178e:	2c 97       	sbiw	r28, 0x0c	; 12
    1790:	24 96       	adiw	r28, 0x04	; 4
    1792:	3f ad       	ldd	r19, Y+63	; 0x3f
    1794:	24 97       	sbiw	r28, 0x04	; 4
    1796:	32 17       	cp	r19, r18
    1798:	18 f0       	brcs	.+6      	; 0x17a0 <TIMERS_voidTimer0Delay+0x238>
    179a:	68 96       	adiw	r28, 0x18	; 24
    179c:	1f ae       	std	Y+63, r1	; 0x3f
    179e:	68 97       	sbiw	r28, 0x18	; 24
    17a0:	2c 96       	adiw	r28, 0x0c	; 12
    17a2:	4f ad       	ldd	r20, Y+63	; 0x3f
    17a4:	2c 97       	sbiw	r28, 0x0c	; 12
    17a6:	65 96       	adiw	r28, 0x15	; 21
    17a8:	5f ad       	ldd	r21, Y+63	; 0x3f
    17aa:	65 97       	sbiw	r28, 0x15	; 21
    17ac:	45 1b       	sub	r20, r21
    17ae:	69 96       	adiw	r28, 0x19	; 25
    17b0:	4f af       	std	Y+63, r20	; 0x3f
    17b2:	69 97       	sbiw	r28, 0x19	; 25
    17b4:	61 e0       	ldi	r22, 0x01	; 1
    17b6:	6a 96       	adiw	r28, 0x1a	; 26
    17b8:	6f af       	std	Y+63, r22	; 0x3f
    17ba:	6a 97       	sbiw	r28, 0x1a	; 26
    17bc:	69 96       	adiw	r28, 0x19	; 25
    17be:	7f ad       	ldd	r23, Y+63	; 0x3f
    17c0:	69 97       	sbiw	r28, 0x19	; 25
    17c2:	2c 96       	adiw	r28, 0x0c	; 12
    17c4:	8f ad       	ldd	r24, Y+63	; 0x3f
    17c6:	2c 97       	sbiw	r28, 0x0c	; 12
    17c8:	87 17       	cp	r24, r23
    17ca:	18 f0       	brcs	.+6      	; 0x17d2 <TIMERS_voidTimer0Delay+0x26a>
    17cc:	6a 96       	adiw	r28, 0x1a	; 26
    17ce:	1f ae       	std	Y+63, r1	; 0x3f
    17d0:	6a 97       	sbiw	r28, 0x1a	; 26
    17d2:	68 96       	adiw	r28, 0x18	; 24
    17d4:	9f ad       	ldd	r25, Y+63	; 0x3f
    17d6:	68 97       	sbiw	r28, 0x18	; 24
    17d8:	6a 96       	adiw	r28, 0x1a	; 26
    17da:	0f ad       	ldd	r16, Y+63	; 0x3f
    17dc:	6a 97       	sbiw	r28, 0x1a	; 26
    17de:	90 2b       	or	r25, r16
    17e0:	68 96       	adiw	r28, 0x18	; 24
    17e2:	9f af       	std	Y+63, r25	; 0x3f
    17e4:	68 97       	sbiw	r28, 0x18	; 24
    17e6:	69 96       	adiw	r28, 0x19	; 25
    17e8:	1f ad       	ldd	r17, Y+63	; 0x3f
    17ea:	69 97       	sbiw	r28, 0x19	; 25
    17ec:	2c 96       	adiw	r28, 0x0c	; 12
    17ee:	1f af       	std	Y+63, r17	; 0x3f
    17f0:	2c 97       	sbiw	r28, 0x0c	; 12
    17f2:	25 96       	adiw	r28, 0x05	; 5
    17f4:	2f ad       	ldd	r18, Y+63	; 0x3f
    17f6:	25 97       	sbiw	r28, 0x05	; 5
    17f8:	3c ad       	ldd	r19, Y+60	; 0x3c
    17fa:	23 1b       	sub	r18, r19
    17fc:	2d 96       	adiw	r28, 0x0d	; 13
    17fe:	2f af       	std	Y+63, r18	; 0x3f
    1800:	2d 97       	sbiw	r28, 0x0d	; 13
    1802:	41 e0       	ldi	r20, 0x01	; 1
    1804:	6b 96       	adiw	r28, 0x1b	; 27
    1806:	4f af       	std	Y+63, r20	; 0x3f
    1808:	6b 97       	sbiw	r28, 0x1b	; 27
    180a:	2d 96       	adiw	r28, 0x0d	; 13
    180c:	5f ad       	ldd	r21, Y+63	; 0x3f
    180e:	2d 97       	sbiw	r28, 0x0d	; 13
    1810:	25 96       	adiw	r28, 0x05	; 5
    1812:	6f ad       	ldd	r22, Y+63	; 0x3f
    1814:	25 97       	sbiw	r28, 0x05	; 5
    1816:	65 17       	cp	r22, r21
    1818:	18 f0       	brcs	.+6      	; 0x1820 <TIMERS_voidTimer0Delay+0x2b8>
    181a:	6b 96       	adiw	r28, 0x1b	; 27
    181c:	1f ae       	std	Y+63, r1	; 0x3f
    181e:	6b 97       	sbiw	r28, 0x1b	; 27
    1820:	2d 96       	adiw	r28, 0x0d	; 13
    1822:	7f ad       	ldd	r23, Y+63	; 0x3f
    1824:	2d 97       	sbiw	r28, 0x0d	; 13
    1826:	68 96       	adiw	r28, 0x18	; 24
    1828:	8f ad       	ldd	r24, Y+63	; 0x3f
    182a:	68 97       	sbiw	r28, 0x18	; 24
    182c:	78 1b       	sub	r23, r24
    182e:	6c 96       	adiw	r28, 0x1c	; 28
    1830:	7f af       	std	Y+63, r23	; 0x3f
    1832:	6c 97       	sbiw	r28, 0x1c	; 28
    1834:	91 e0       	ldi	r25, 0x01	; 1
    1836:	6d 96       	adiw	r28, 0x1d	; 29
    1838:	9f af       	std	Y+63, r25	; 0x3f
    183a:	6d 97       	sbiw	r28, 0x1d	; 29
    183c:	6c 96       	adiw	r28, 0x1c	; 28
    183e:	0f ad       	ldd	r16, Y+63	; 0x3f
    1840:	6c 97       	sbiw	r28, 0x1c	; 28
    1842:	2d 96       	adiw	r28, 0x0d	; 13
    1844:	1f ad       	ldd	r17, Y+63	; 0x3f
    1846:	2d 97       	sbiw	r28, 0x0d	; 13
    1848:	10 17       	cp	r17, r16
    184a:	18 f0       	brcs	.+6      	; 0x1852 <TIMERS_voidTimer0Delay+0x2ea>
    184c:	6d 96       	adiw	r28, 0x1d	; 29
    184e:	1f ae       	std	Y+63, r1	; 0x3f
    1850:	6d 97       	sbiw	r28, 0x1d	; 29
    1852:	6b 96       	adiw	r28, 0x1b	; 27
    1854:	2f ad       	ldd	r18, Y+63	; 0x3f
    1856:	6b 97       	sbiw	r28, 0x1b	; 27
    1858:	6d 96       	adiw	r28, 0x1d	; 29
    185a:	3f ad       	ldd	r19, Y+63	; 0x3f
    185c:	6d 97       	sbiw	r28, 0x1d	; 29
    185e:	23 2b       	or	r18, r19
    1860:	6b 96       	adiw	r28, 0x1b	; 27
    1862:	2f af       	std	Y+63, r18	; 0x3f
    1864:	6b 97       	sbiw	r28, 0x1b	; 27
    1866:	6c 96       	adiw	r28, 0x1c	; 28
    1868:	4f ad       	ldd	r20, Y+63	; 0x3f
    186a:	6c 97       	sbiw	r28, 0x1c	; 28
    186c:	2d 96       	adiw	r28, 0x0d	; 13
    186e:	4f af       	std	Y+63, r20	; 0x3f
    1870:	2d 97       	sbiw	r28, 0x0d	; 13
    1872:	26 96       	adiw	r28, 0x06	; 6
    1874:	5f ad       	ldd	r21, Y+63	; 0x3f
    1876:	26 97       	sbiw	r28, 0x06	; 6
    1878:	6d ad       	ldd	r22, Y+61	; 0x3d
    187a:	56 1b       	sub	r21, r22
    187c:	2e 96       	adiw	r28, 0x0e	; 14
    187e:	5f af       	std	Y+63, r21	; 0x3f
    1880:	2e 97       	sbiw	r28, 0x0e	; 14
    1882:	71 e0       	ldi	r23, 0x01	; 1
    1884:	6e 96       	adiw	r28, 0x1e	; 30
    1886:	7f af       	std	Y+63, r23	; 0x3f
    1888:	6e 97       	sbiw	r28, 0x1e	; 30
    188a:	2e 96       	adiw	r28, 0x0e	; 14
    188c:	8f ad       	ldd	r24, Y+63	; 0x3f
    188e:	2e 97       	sbiw	r28, 0x0e	; 14
    1890:	26 96       	adiw	r28, 0x06	; 6
    1892:	9f ad       	ldd	r25, Y+63	; 0x3f
    1894:	26 97       	sbiw	r28, 0x06	; 6
    1896:	98 17       	cp	r25, r24
    1898:	18 f0       	brcs	.+6      	; 0x18a0 <TIMERS_voidTimer0Delay+0x338>
    189a:	6e 96       	adiw	r28, 0x1e	; 30
    189c:	1f ae       	std	Y+63, r1	; 0x3f
    189e:	6e 97       	sbiw	r28, 0x1e	; 30
    18a0:	2e 96       	adiw	r28, 0x0e	; 14
    18a2:	0f ad       	ldd	r16, Y+63	; 0x3f
    18a4:	2e 97       	sbiw	r28, 0x0e	; 14
    18a6:	6b 96       	adiw	r28, 0x1b	; 27
    18a8:	1f ad       	ldd	r17, Y+63	; 0x3f
    18aa:	6b 97       	sbiw	r28, 0x1b	; 27
    18ac:	01 1b       	sub	r16, r17
    18ae:	6f 96       	adiw	r28, 0x1f	; 31
    18b0:	0f af       	std	Y+63, r16	; 0x3f
    18b2:	6f 97       	sbiw	r28, 0x1f	; 31
    18b4:	21 e0       	ldi	r18, 0x01	; 1
    18b6:	a0 96       	adiw	r28, 0x20	; 32
    18b8:	2f af       	std	Y+63, r18	; 0x3f
    18ba:	a0 97       	sbiw	r28, 0x20	; 32
    18bc:	6f 96       	adiw	r28, 0x1f	; 31
    18be:	3f ad       	ldd	r19, Y+63	; 0x3f
    18c0:	6f 97       	sbiw	r28, 0x1f	; 31
    18c2:	2e 96       	adiw	r28, 0x0e	; 14
    18c4:	4f ad       	ldd	r20, Y+63	; 0x3f
    18c6:	2e 97       	sbiw	r28, 0x0e	; 14
    18c8:	43 17       	cp	r20, r19
    18ca:	18 f0       	brcs	.+6      	; 0x18d2 <TIMERS_voidTimer0Delay+0x36a>
    18cc:	a0 96       	adiw	r28, 0x20	; 32
    18ce:	1f ae       	std	Y+63, r1	; 0x3f
    18d0:	a0 97       	sbiw	r28, 0x20	; 32
    18d2:	6e 96       	adiw	r28, 0x1e	; 30
    18d4:	5f ad       	ldd	r21, Y+63	; 0x3f
    18d6:	6e 97       	sbiw	r28, 0x1e	; 30
    18d8:	a0 96       	adiw	r28, 0x20	; 32
    18da:	6f ad       	ldd	r22, Y+63	; 0x3f
    18dc:	a0 97       	sbiw	r28, 0x20	; 32
    18de:	56 2b       	or	r21, r22
    18e0:	6e 96       	adiw	r28, 0x1e	; 30
    18e2:	5f af       	std	Y+63, r21	; 0x3f
    18e4:	6e 97       	sbiw	r28, 0x1e	; 30
    18e6:	6f 96       	adiw	r28, 0x1f	; 31
    18e8:	7f ad       	ldd	r23, Y+63	; 0x3f
    18ea:	6f 97       	sbiw	r28, 0x1f	; 31
    18ec:	2e 96       	adiw	r28, 0x0e	; 14
    18ee:	7f af       	std	Y+63, r23	; 0x3f
    18f0:	2e 97       	sbiw	r28, 0x0e	; 14
    18f2:	27 96       	adiw	r28, 0x07	; 7
    18f4:	8f ad       	ldd	r24, Y+63	; 0x3f
    18f6:	27 97       	sbiw	r28, 0x07	; 7
    18f8:	9e ad       	ldd	r25, Y+62	; 0x3e
    18fa:	89 1b       	sub	r24, r25
    18fc:	2f 96       	adiw	r28, 0x0f	; 15
    18fe:	8f af       	std	Y+63, r24	; 0x3f
    1900:	2f 97       	sbiw	r28, 0x0f	; 15
    1902:	01 e0       	ldi	r16, 0x01	; 1
    1904:	a1 96       	adiw	r28, 0x21	; 33
    1906:	0f af       	std	Y+63, r16	; 0x3f
    1908:	a1 97       	sbiw	r28, 0x21	; 33
    190a:	2f 96       	adiw	r28, 0x0f	; 15
    190c:	1f ad       	ldd	r17, Y+63	; 0x3f
    190e:	2f 97       	sbiw	r28, 0x0f	; 15
    1910:	27 96       	adiw	r28, 0x07	; 7
    1912:	2f ad       	ldd	r18, Y+63	; 0x3f
    1914:	27 97       	sbiw	r28, 0x07	; 7
    1916:	21 17       	cp	r18, r17
    1918:	18 f0       	brcs	.+6      	; 0x1920 <TIMERS_voidTimer0Delay+0x3b8>
    191a:	a1 96       	adiw	r28, 0x21	; 33
    191c:	1f ae       	std	Y+63, r1	; 0x3f
    191e:	a1 97       	sbiw	r28, 0x21	; 33
    1920:	2f 96       	adiw	r28, 0x0f	; 15
    1922:	3f ad       	ldd	r19, Y+63	; 0x3f
    1924:	2f 97       	sbiw	r28, 0x0f	; 15
    1926:	6e 96       	adiw	r28, 0x1e	; 30
    1928:	4f ad       	ldd	r20, Y+63	; 0x3f
    192a:	6e 97       	sbiw	r28, 0x1e	; 30
    192c:	34 1b       	sub	r19, r20
    192e:	a2 96       	adiw	r28, 0x22	; 34
    1930:	3f af       	std	Y+63, r19	; 0x3f
    1932:	a2 97       	sbiw	r28, 0x22	; 34
    1934:	51 e0       	ldi	r21, 0x01	; 1
    1936:	a3 96       	adiw	r28, 0x23	; 35
    1938:	5f af       	std	Y+63, r21	; 0x3f
    193a:	a3 97       	sbiw	r28, 0x23	; 35
    193c:	a2 96       	adiw	r28, 0x22	; 34
    193e:	6f ad       	ldd	r22, Y+63	; 0x3f
    1940:	a2 97       	sbiw	r28, 0x22	; 34
    1942:	2f 96       	adiw	r28, 0x0f	; 15
    1944:	7f ad       	ldd	r23, Y+63	; 0x3f
    1946:	2f 97       	sbiw	r28, 0x0f	; 15
    1948:	76 17       	cp	r23, r22
    194a:	18 f0       	brcs	.+6      	; 0x1952 <TIMERS_voidTimer0Delay+0x3ea>
    194c:	a3 96       	adiw	r28, 0x23	; 35
    194e:	1f ae       	std	Y+63, r1	; 0x3f
    1950:	a3 97       	sbiw	r28, 0x23	; 35
    1952:	a1 96       	adiw	r28, 0x21	; 33
    1954:	8f ad       	ldd	r24, Y+63	; 0x3f
    1956:	a1 97       	sbiw	r28, 0x21	; 33
    1958:	a3 96       	adiw	r28, 0x23	; 35
    195a:	9f ad       	ldd	r25, Y+63	; 0x3f
    195c:	a3 97       	sbiw	r28, 0x23	; 35
    195e:	89 2b       	or	r24, r25
    1960:	a1 96       	adiw	r28, 0x21	; 33
    1962:	8f af       	std	Y+63, r24	; 0x3f
    1964:	a1 97       	sbiw	r28, 0x21	; 33
    1966:	a2 96       	adiw	r28, 0x22	; 34
    1968:	0f ad       	ldd	r16, Y+63	; 0x3f
    196a:	a2 97       	sbiw	r28, 0x22	; 34
    196c:	2f 96       	adiw	r28, 0x0f	; 15
    196e:	0f af       	std	Y+63, r16	; 0x3f
    1970:	2f 97       	sbiw	r28, 0x0f	; 15
    1972:	28 96       	adiw	r28, 0x08	; 8
    1974:	1f ad       	ldd	r17, Y+63	; 0x3f
    1976:	28 97       	sbiw	r28, 0x08	; 8
    1978:	2f ad       	ldd	r18, Y+63	; 0x3f
    197a:	12 1b       	sub	r17, r18
    197c:	60 96       	adiw	r28, 0x10	; 16
    197e:	1f af       	std	Y+63, r17	; 0x3f
    1980:	60 97       	sbiw	r28, 0x10	; 16
    1982:	60 96       	adiw	r28, 0x10	; 16
    1984:	8f ad       	ldd	r24, Y+63	; 0x3f
    1986:	60 97       	sbiw	r28, 0x10	; 16
    1988:	a1 96       	adiw	r28, 0x21	; 33
    198a:	3f ad       	ldd	r19, Y+63	; 0x3f
    198c:	a1 97       	sbiw	r28, 0x21	; 33
    198e:	83 1b       	sub	r24, r19
    1990:	60 96       	adiw	r28, 0x10	; 16
    1992:	8f af       	std	Y+63, r24	; 0x3f
    1994:	60 97       	sbiw	r28, 0x10	; 16
    1996:	29 96       	adiw	r28, 0x09	; 9
    1998:	4f ad       	ldd	r20, Y+63	; 0x3f
    199a:	29 97       	sbiw	r28, 0x09	; 9
    199c:	21 96       	adiw	r28, 0x01	; 1
    199e:	4f af       	std	Y+63, r20	; 0x3f
    19a0:	21 97       	sbiw	r28, 0x01	; 1
    19a2:	2a 96       	adiw	r28, 0x0a	; 10
    19a4:	5f ad       	ldd	r21, Y+63	; 0x3f
    19a6:	2a 97       	sbiw	r28, 0x0a	; 10
    19a8:	22 96       	adiw	r28, 0x02	; 2
    19aa:	5f af       	std	Y+63, r21	; 0x3f
    19ac:	22 97       	sbiw	r28, 0x02	; 2
    19ae:	2b 96       	adiw	r28, 0x0b	; 11
    19b0:	6f ad       	ldd	r22, Y+63	; 0x3f
    19b2:	2b 97       	sbiw	r28, 0x0b	; 11
    19b4:	23 96       	adiw	r28, 0x03	; 3
    19b6:	6f af       	std	Y+63, r22	; 0x3f
    19b8:	23 97       	sbiw	r28, 0x03	; 3
    19ba:	2c 96       	adiw	r28, 0x0c	; 12
    19bc:	7f ad       	ldd	r23, Y+63	; 0x3f
    19be:	2c 97       	sbiw	r28, 0x0c	; 12
    19c0:	24 96       	adiw	r28, 0x04	; 4
    19c2:	7f af       	std	Y+63, r23	; 0x3f
    19c4:	24 97       	sbiw	r28, 0x04	; 4
    19c6:	2d 96       	adiw	r28, 0x0d	; 13
    19c8:	8f ad       	ldd	r24, Y+63	; 0x3f
    19ca:	2d 97       	sbiw	r28, 0x0d	; 13
    19cc:	25 96       	adiw	r28, 0x05	; 5
    19ce:	8f af       	std	Y+63, r24	; 0x3f
    19d0:	25 97       	sbiw	r28, 0x05	; 5
    19d2:	2e 96       	adiw	r28, 0x0e	; 14
    19d4:	9f ad       	ldd	r25, Y+63	; 0x3f
    19d6:	2e 97       	sbiw	r28, 0x0e	; 14
    19d8:	26 96       	adiw	r28, 0x06	; 6
    19da:	9f af       	std	Y+63, r25	; 0x3f
    19dc:	26 97       	sbiw	r28, 0x06	; 6
    19de:	2f 96       	adiw	r28, 0x0f	; 15
    19e0:	0f ad       	ldd	r16, Y+63	; 0x3f
    19e2:	2f 97       	sbiw	r28, 0x0f	; 15
    19e4:	27 96       	adiw	r28, 0x07	; 7
    19e6:	0f af       	std	Y+63, r16	; 0x3f
    19e8:	27 97       	sbiw	r28, 0x07	; 7
    19ea:	60 96       	adiw	r28, 0x10	; 16
    19ec:	1f ad       	ldd	r17, Y+63	; 0x3f
    19ee:	60 97       	sbiw	r28, 0x10	; 16
    19f0:	28 96       	adiw	r28, 0x08	; 8
    19f2:	1f af       	std	Y+63, r17	; 0x3f
    19f4:	28 97       	sbiw	r28, 0x08	; 8
    19f6:	21 96       	adiw	r28, 0x01	; 1
    19f8:	2f ad       	ldd	r18, Y+63	; 0x3f
    19fa:	21 97       	sbiw	r28, 0x01	; 1
    19fc:	38 a9       	ldd	r19, Y+48	; 0x30
    19fe:	23 0f       	add	r18, r19
    1a00:	a4 96       	adiw	r28, 0x24	; 36
    1a02:	2f af       	std	Y+63, r18	; 0x3f
    1a04:	a4 97       	sbiw	r28, 0x24	; 36
    1a06:	41 e0       	ldi	r20, 0x01	; 1
    1a08:	ac 96       	adiw	r28, 0x2c	; 44
    1a0a:	4f af       	std	Y+63, r20	; 0x3f
    1a0c:	ac 97       	sbiw	r28, 0x2c	; 44
    1a0e:	a4 96       	adiw	r28, 0x24	; 36
    1a10:	5f ad       	ldd	r21, Y+63	; 0x3f
    1a12:	a4 97       	sbiw	r28, 0x24	; 36
    1a14:	21 96       	adiw	r28, 0x01	; 1
    1a16:	6f ad       	ldd	r22, Y+63	; 0x3f
    1a18:	21 97       	sbiw	r28, 0x01	; 1
    1a1a:	56 17       	cp	r21, r22
    1a1c:	18 f0       	brcs	.+6      	; 0x1a24 <TIMERS_voidTimer0Delay+0x4bc>
    1a1e:	ac 96       	adiw	r28, 0x2c	; 44
    1a20:	1f ae       	std	Y+63, r1	; 0x3f
    1a22:	ac 97       	sbiw	r28, 0x2c	; 44
    1a24:	22 96       	adiw	r28, 0x02	; 2
    1a26:	7f ad       	ldd	r23, Y+63	; 0x3f
    1a28:	22 97       	sbiw	r28, 0x02	; 2
    1a2a:	89 a9       	ldd	r24, Y+49	; 0x31
    1a2c:	78 0f       	add	r23, r24
    1a2e:	a5 96       	adiw	r28, 0x25	; 37
    1a30:	7f af       	std	Y+63, r23	; 0x3f
    1a32:	a5 97       	sbiw	r28, 0x25	; 37
    1a34:	91 e0       	ldi	r25, 0x01	; 1
    1a36:	ad 96       	adiw	r28, 0x2d	; 45
    1a38:	9f af       	std	Y+63, r25	; 0x3f
    1a3a:	ad 97       	sbiw	r28, 0x2d	; 45
    1a3c:	a5 96       	adiw	r28, 0x25	; 37
    1a3e:	0f ad       	ldd	r16, Y+63	; 0x3f
    1a40:	a5 97       	sbiw	r28, 0x25	; 37
    1a42:	22 96       	adiw	r28, 0x02	; 2
    1a44:	1f ad       	ldd	r17, Y+63	; 0x3f
    1a46:	22 97       	sbiw	r28, 0x02	; 2
    1a48:	01 17       	cp	r16, r17
    1a4a:	18 f0       	brcs	.+6      	; 0x1a52 <TIMERS_voidTimer0Delay+0x4ea>
    1a4c:	ad 96       	adiw	r28, 0x2d	; 45
    1a4e:	1f ae       	std	Y+63, r1	; 0x3f
    1a50:	ad 97       	sbiw	r28, 0x2d	; 45
    1a52:	ac 96       	adiw	r28, 0x2c	; 44
    1a54:	2f ad       	ldd	r18, Y+63	; 0x3f
    1a56:	ac 97       	sbiw	r28, 0x2c	; 44
    1a58:	a5 96       	adiw	r28, 0x25	; 37
    1a5a:	3f ad       	ldd	r19, Y+63	; 0x3f
    1a5c:	a5 97       	sbiw	r28, 0x25	; 37
    1a5e:	23 0f       	add	r18, r19
    1a60:	ae 96       	adiw	r28, 0x2e	; 46
    1a62:	2f af       	std	Y+63, r18	; 0x3f
    1a64:	ae 97       	sbiw	r28, 0x2e	; 46
    1a66:	41 e0       	ldi	r20, 0x01	; 1
    1a68:	af 96       	adiw	r28, 0x2f	; 47
    1a6a:	4f af       	std	Y+63, r20	; 0x3f
    1a6c:	af 97       	sbiw	r28, 0x2f	; 47
    1a6e:	ae 96       	adiw	r28, 0x2e	; 46
    1a70:	5f ad       	ldd	r21, Y+63	; 0x3f
    1a72:	ae 97       	sbiw	r28, 0x2e	; 46
    1a74:	a5 96       	adiw	r28, 0x25	; 37
    1a76:	6f ad       	ldd	r22, Y+63	; 0x3f
    1a78:	a5 97       	sbiw	r28, 0x25	; 37
    1a7a:	56 17       	cp	r21, r22
    1a7c:	18 f0       	brcs	.+6      	; 0x1a84 <TIMERS_voidTimer0Delay+0x51c>
    1a7e:	af 96       	adiw	r28, 0x2f	; 47
    1a80:	1f ae       	std	Y+63, r1	; 0x3f
    1a82:	af 97       	sbiw	r28, 0x2f	; 47
    1a84:	ad 96       	adiw	r28, 0x2d	; 45
    1a86:	7f ad       	ldd	r23, Y+63	; 0x3f
    1a88:	ad 97       	sbiw	r28, 0x2d	; 45
    1a8a:	af 96       	adiw	r28, 0x2f	; 47
    1a8c:	8f ad       	ldd	r24, Y+63	; 0x3f
    1a8e:	af 97       	sbiw	r28, 0x2f	; 47
    1a90:	78 2b       	or	r23, r24
    1a92:	ad 96       	adiw	r28, 0x2d	; 45
    1a94:	7f af       	std	Y+63, r23	; 0x3f
    1a96:	ad 97       	sbiw	r28, 0x2d	; 45
    1a98:	ae 96       	adiw	r28, 0x2e	; 46
    1a9a:	9f ad       	ldd	r25, Y+63	; 0x3f
    1a9c:	ae 97       	sbiw	r28, 0x2e	; 46
    1a9e:	a5 96       	adiw	r28, 0x25	; 37
    1aa0:	9f af       	std	Y+63, r25	; 0x3f
    1aa2:	a5 97       	sbiw	r28, 0x25	; 37
    1aa4:	23 96       	adiw	r28, 0x03	; 3
    1aa6:	0f ad       	ldd	r16, Y+63	; 0x3f
    1aa8:	23 97       	sbiw	r28, 0x03	; 3
    1aaa:	1a a9       	ldd	r17, Y+50	; 0x32
    1aac:	01 0f       	add	r16, r17
    1aae:	a6 96       	adiw	r28, 0x26	; 38
    1ab0:	0f af       	std	Y+63, r16	; 0x3f
    1ab2:	a6 97       	sbiw	r28, 0x26	; 38
    1ab4:	21 e0       	ldi	r18, 0x01	; 1
    1ab6:	e0 96       	adiw	r28, 0x30	; 48
    1ab8:	2f af       	std	Y+63, r18	; 0x3f
    1aba:	e0 97       	sbiw	r28, 0x30	; 48
    1abc:	a6 96       	adiw	r28, 0x26	; 38
    1abe:	3f ad       	ldd	r19, Y+63	; 0x3f
    1ac0:	a6 97       	sbiw	r28, 0x26	; 38
    1ac2:	23 96       	adiw	r28, 0x03	; 3
    1ac4:	4f ad       	ldd	r20, Y+63	; 0x3f
    1ac6:	23 97       	sbiw	r28, 0x03	; 3
    1ac8:	34 17       	cp	r19, r20
    1aca:	18 f0       	brcs	.+6      	; 0x1ad2 <TIMERS_voidTimer0Delay+0x56a>
    1acc:	e0 96       	adiw	r28, 0x30	; 48
    1ace:	1f ae       	std	Y+63, r1	; 0x3f
    1ad0:	e0 97       	sbiw	r28, 0x30	; 48
    1ad2:	ad 96       	adiw	r28, 0x2d	; 45
    1ad4:	5f ad       	ldd	r21, Y+63	; 0x3f
    1ad6:	ad 97       	sbiw	r28, 0x2d	; 45
    1ad8:	a6 96       	adiw	r28, 0x26	; 38
    1ada:	6f ad       	ldd	r22, Y+63	; 0x3f
    1adc:	a6 97       	sbiw	r28, 0x26	; 38
    1ade:	56 0f       	add	r21, r22
    1ae0:	e1 96       	adiw	r28, 0x31	; 49
    1ae2:	5f af       	std	Y+63, r21	; 0x3f
    1ae4:	e1 97       	sbiw	r28, 0x31	; 49
    1ae6:	71 e0       	ldi	r23, 0x01	; 1
    1ae8:	e2 96       	adiw	r28, 0x32	; 50
    1aea:	7f af       	std	Y+63, r23	; 0x3f
    1aec:	e2 97       	sbiw	r28, 0x32	; 50
    1aee:	e1 96       	adiw	r28, 0x31	; 49
    1af0:	8f ad       	ldd	r24, Y+63	; 0x3f
    1af2:	e1 97       	sbiw	r28, 0x31	; 49
    1af4:	a6 96       	adiw	r28, 0x26	; 38
    1af6:	9f ad       	ldd	r25, Y+63	; 0x3f
    1af8:	a6 97       	sbiw	r28, 0x26	; 38
    1afa:	89 17       	cp	r24, r25
    1afc:	18 f0       	brcs	.+6      	; 0x1b04 <TIMERS_voidTimer0Delay+0x59c>
    1afe:	e2 96       	adiw	r28, 0x32	; 50
    1b00:	1f ae       	std	Y+63, r1	; 0x3f
    1b02:	e2 97       	sbiw	r28, 0x32	; 50
    1b04:	e0 96       	adiw	r28, 0x30	; 48
    1b06:	0f ad       	ldd	r16, Y+63	; 0x3f
    1b08:	e0 97       	sbiw	r28, 0x30	; 48
    1b0a:	e2 96       	adiw	r28, 0x32	; 50
    1b0c:	1f ad       	ldd	r17, Y+63	; 0x3f
    1b0e:	e2 97       	sbiw	r28, 0x32	; 50
    1b10:	01 2b       	or	r16, r17
    1b12:	e0 96       	adiw	r28, 0x30	; 48
    1b14:	0f af       	std	Y+63, r16	; 0x3f
    1b16:	e0 97       	sbiw	r28, 0x30	; 48
    1b18:	e1 96       	adiw	r28, 0x31	; 49
    1b1a:	2f ad       	ldd	r18, Y+63	; 0x3f
    1b1c:	e1 97       	sbiw	r28, 0x31	; 49
    1b1e:	a6 96       	adiw	r28, 0x26	; 38
    1b20:	2f af       	std	Y+63, r18	; 0x3f
    1b22:	a6 97       	sbiw	r28, 0x26	; 38
    1b24:	24 96       	adiw	r28, 0x04	; 4
    1b26:	3f ad       	ldd	r19, Y+63	; 0x3f
    1b28:	24 97       	sbiw	r28, 0x04	; 4
    1b2a:	4b a9       	ldd	r20, Y+51	; 0x33
    1b2c:	34 0f       	add	r19, r20
    1b2e:	a7 96       	adiw	r28, 0x27	; 39
    1b30:	3f af       	std	Y+63, r19	; 0x3f
    1b32:	a7 97       	sbiw	r28, 0x27	; 39
    1b34:	51 e0       	ldi	r21, 0x01	; 1
    1b36:	e3 96       	adiw	r28, 0x33	; 51
    1b38:	5f af       	std	Y+63, r21	; 0x3f
    1b3a:	e3 97       	sbiw	r28, 0x33	; 51
    1b3c:	a7 96       	adiw	r28, 0x27	; 39
    1b3e:	6f ad       	ldd	r22, Y+63	; 0x3f
    1b40:	a7 97       	sbiw	r28, 0x27	; 39
    1b42:	24 96       	adiw	r28, 0x04	; 4
    1b44:	7f ad       	ldd	r23, Y+63	; 0x3f
    1b46:	24 97       	sbiw	r28, 0x04	; 4
    1b48:	67 17       	cp	r22, r23
    1b4a:	18 f0       	brcs	.+6      	; 0x1b52 <TIMERS_voidTimer0Delay+0x5ea>
    1b4c:	e3 96       	adiw	r28, 0x33	; 51
    1b4e:	1f ae       	std	Y+63, r1	; 0x3f
    1b50:	e3 97       	sbiw	r28, 0x33	; 51
    1b52:	e0 96       	adiw	r28, 0x30	; 48
    1b54:	8f ad       	ldd	r24, Y+63	; 0x3f
    1b56:	e0 97       	sbiw	r28, 0x30	; 48
    1b58:	a7 96       	adiw	r28, 0x27	; 39
    1b5a:	9f ad       	ldd	r25, Y+63	; 0x3f
    1b5c:	a7 97       	sbiw	r28, 0x27	; 39
    1b5e:	89 0f       	add	r24, r25
    1b60:	e4 96       	adiw	r28, 0x34	; 52
    1b62:	8f af       	std	Y+63, r24	; 0x3f
    1b64:	e4 97       	sbiw	r28, 0x34	; 52
    1b66:	01 e0       	ldi	r16, 0x01	; 1
    1b68:	e5 96       	adiw	r28, 0x35	; 53
    1b6a:	0f af       	std	Y+63, r16	; 0x3f
    1b6c:	e5 97       	sbiw	r28, 0x35	; 53
    1b6e:	e4 96       	adiw	r28, 0x34	; 52
    1b70:	1f ad       	ldd	r17, Y+63	; 0x3f
    1b72:	e4 97       	sbiw	r28, 0x34	; 52
    1b74:	a7 96       	adiw	r28, 0x27	; 39
    1b76:	2f ad       	ldd	r18, Y+63	; 0x3f
    1b78:	a7 97       	sbiw	r28, 0x27	; 39
    1b7a:	12 17       	cp	r17, r18
    1b7c:	18 f0       	brcs	.+6      	; 0x1b84 <TIMERS_voidTimer0Delay+0x61c>
    1b7e:	e5 96       	adiw	r28, 0x35	; 53
    1b80:	1f ae       	std	Y+63, r1	; 0x3f
    1b82:	e5 97       	sbiw	r28, 0x35	; 53
    1b84:	e3 96       	adiw	r28, 0x33	; 51
    1b86:	3f ad       	ldd	r19, Y+63	; 0x3f
    1b88:	e3 97       	sbiw	r28, 0x33	; 51
    1b8a:	e5 96       	adiw	r28, 0x35	; 53
    1b8c:	4f ad       	ldd	r20, Y+63	; 0x3f
    1b8e:	e5 97       	sbiw	r28, 0x35	; 53
    1b90:	34 2b       	or	r19, r20
    1b92:	e3 96       	adiw	r28, 0x33	; 51
    1b94:	3f af       	std	Y+63, r19	; 0x3f
    1b96:	e3 97       	sbiw	r28, 0x33	; 51
    1b98:	e4 96       	adiw	r28, 0x34	; 52
    1b9a:	5f ad       	ldd	r21, Y+63	; 0x3f
    1b9c:	e4 97       	sbiw	r28, 0x34	; 52
    1b9e:	a7 96       	adiw	r28, 0x27	; 39
    1ba0:	5f af       	std	Y+63, r21	; 0x3f
    1ba2:	a7 97       	sbiw	r28, 0x27	; 39
    1ba4:	25 96       	adiw	r28, 0x05	; 5
    1ba6:	6f ad       	ldd	r22, Y+63	; 0x3f
    1ba8:	25 97       	sbiw	r28, 0x05	; 5
    1baa:	7c a9       	ldd	r23, Y+52	; 0x34
    1bac:	67 0f       	add	r22, r23
    1bae:	a8 96       	adiw	r28, 0x28	; 40
    1bb0:	6f af       	std	Y+63, r22	; 0x3f
    1bb2:	a8 97       	sbiw	r28, 0x28	; 40
    1bb4:	81 e0       	ldi	r24, 0x01	; 1
    1bb6:	e6 96       	adiw	r28, 0x36	; 54
    1bb8:	8f af       	std	Y+63, r24	; 0x3f
    1bba:	e6 97       	sbiw	r28, 0x36	; 54
    1bbc:	a8 96       	adiw	r28, 0x28	; 40
    1bbe:	9f ad       	ldd	r25, Y+63	; 0x3f
    1bc0:	a8 97       	sbiw	r28, 0x28	; 40
    1bc2:	25 96       	adiw	r28, 0x05	; 5
    1bc4:	0f ad       	ldd	r16, Y+63	; 0x3f
    1bc6:	25 97       	sbiw	r28, 0x05	; 5
    1bc8:	90 17       	cp	r25, r16
    1bca:	18 f0       	brcs	.+6      	; 0x1bd2 <TIMERS_voidTimer0Delay+0x66a>
    1bcc:	e6 96       	adiw	r28, 0x36	; 54
    1bce:	1f ae       	std	Y+63, r1	; 0x3f
    1bd0:	e6 97       	sbiw	r28, 0x36	; 54
    1bd2:	e3 96       	adiw	r28, 0x33	; 51
    1bd4:	1f ad       	ldd	r17, Y+63	; 0x3f
    1bd6:	e3 97       	sbiw	r28, 0x33	; 51
    1bd8:	a8 96       	adiw	r28, 0x28	; 40
    1bda:	2f ad       	ldd	r18, Y+63	; 0x3f
    1bdc:	a8 97       	sbiw	r28, 0x28	; 40
    1bde:	12 0f       	add	r17, r18
    1be0:	e7 96       	adiw	r28, 0x37	; 55
    1be2:	1f af       	std	Y+63, r17	; 0x3f
    1be4:	e7 97       	sbiw	r28, 0x37	; 55
    1be6:	31 e0       	ldi	r19, 0x01	; 1
    1be8:	e8 96       	adiw	r28, 0x38	; 56
    1bea:	3f af       	std	Y+63, r19	; 0x3f
    1bec:	e8 97       	sbiw	r28, 0x38	; 56
    1bee:	e7 96       	adiw	r28, 0x37	; 55
    1bf0:	4f ad       	ldd	r20, Y+63	; 0x3f
    1bf2:	e7 97       	sbiw	r28, 0x37	; 55
    1bf4:	a8 96       	adiw	r28, 0x28	; 40
    1bf6:	5f ad       	ldd	r21, Y+63	; 0x3f
    1bf8:	a8 97       	sbiw	r28, 0x28	; 40
    1bfa:	45 17       	cp	r20, r21
    1bfc:	18 f0       	brcs	.+6      	; 0x1c04 <TIMERS_voidTimer0Delay+0x69c>
    1bfe:	e8 96       	adiw	r28, 0x38	; 56
    1c00:	1f ae       	std	Y+63, r1	; 0x3f
    1c02:	e8 97       	sbiw	r28, 0x38	; 56
    1c04:	e6 96       	adiw	r28, 0x36	; 54
    1c06:	6f ad       	ldd	r22, Y+63	; 0x3f
    1c08:	e6 97       	sbiw	r28, 0x36	; 54
    1c0a:	e8 96       	adiw	r28, 0x38	; 56
    1c0c:	7f ad       	ldd	r23, Y+63	; 0x3f
    1c0e:	e8 97       	sbiw	r28, 0x38	; 56
    1c10:	67 2b       	or	r22, r23
    1c12:	e6 96       	adiw	r28, 0x36	; 54
    1c14:	6f af       	std	Y+63, r22	; 0x3f
    1c16:	e6 97       	sbiw	r28, 0x36	; 54
    1c18:	e7 96       	adiw	r28, 0x37	; 55
    1c1a:	8f ad       	ldd	r24, Y+63	; 0x3f
    1c1c:	e7 97       	sbiw	r28, 0x37	; 55
    1c1e:	a8 96       	adiw	r28, 0x28	; 40
    1c20:	8f af       	std	Y+63, r24	; 0x3f
    1c22:	a8 97       	sbiw	r28, 0x28	; 40
    1c24:	26 96       	adiw	r28, 0x06	; 6
    1c26:	9f ad       	ldd	r25, Y+63	; 0x3f
    1c28:	26 97       	sbiw	r28, 0x06	; 6
    1c2a:	0d a9       	ldd	r16, Y+53	; 0x35
    1c2c:	90 0f       	add	r25, r16
    1c2e:	a9 96       	adiw	r28, 0x29	; 41
    1c30:	9f af       	std	Y+63, r25	; 0x3f
    1c32:	a9 97       	sbiw	r28, 0x29	; 41
    1c34:	11 e0       	ldi	r17, 0x01	; 1
    1c36:	e9 96       	adiw	r28, 0x39	; 57
    1c38:	1f af       	std	Y+63, r17	; 0x3f
    1c3a:	e9 97       	sbiw	r28, 0x39	; 57
    1c3c:	a9 96       	adiw	r28, 0x29	; 41
    1c3e:	2f ad       	ldd	r18, Y+63	; 0x3f
    1c40:	a9 97       	sbiw	r28, 0x29	; 41
    1c42:	26 96       	adiw	r28, 0x06	; 6
    1c44:	3f ad       	ldd	r19, Y+63	; 0x3f
    1c46:	26 97       	sbiw	r28, 0x06	; 6
    1c48:	23 17       	cp	r18, r19
    1c4a:	18 f0       	brcs	.+6      	; 0x1c52 <TIMERS_voidTimer0Delay+0x6ea>
    1c4c:	e9 96       	adiw	r28, 0x39	; 57
    1c4e:	1f ae       	std	Y+63, r1	; 0x3f
    1c50:	e9 97       	sbiw	r28, 0x39	; 57
    1c52:	e6 96       	adiw	r28, 0x36	; 54
    1c54:	4f ad       	ldd	r20, Y+63	; 0x3f
    1c56:	e6 97       	sbiw	r28, 0x36	; 54
    1c58:	a9 96       	adiw	r28, 0x29	; 41
    1c5a:	5f ad       	ldd	r21, Y+63	; 0x3f
    1c5c:	a9 97       	sbiw	r28, 0x29	; 41
    1c5e:	45 0f       	add	r20, r21
    1c60:	ea 96       	adiw	r28, 0x3a	; 58
    1c62:	4f af       	std	Y+63, r20	; 0x3f
    1c64:	ea 97       	sbiw	r28, 0x3a	; 58
    1c66:	61 e0       	ldi	r22, 0x01	; 1
    1c68:	eb 96       	adiw	r28, 0x3b	; 59
    1c6a:	6f af       	std	Y+63, r22	; 0x3f
    1c6c:	eb 97       	sbiw	r28, 0x3b	; 59
    1c6e:	ea 96       	adiw	r28, 0x3a	; 58
    1c70:	7f ad       	ldd	r23, Y+63	; 0x3f
    1c72:	ea 97       	sbiw	r28, 0x3a	; 58
    1c74:	a9 96       	adiw	r28, 0x29	; 41
    1c76:	8f ad       	ldd	r24, Y+63	; 0x3f
    1c78:	a9 97       	sbiw	r28, 0x29	; 41
    1c7a:	78 17       	cp	r23, r24
    1c7c:	18 f0       	brcs	.+6      	; 0x1c84 <TIMERS_voidTimer0Delay+0x71c>
    1c7e:	eb 96       	adiw	r28, 0x3b	; 59
    1c80:	1f ae       	std	Y+63, r1	; 0x3f
    1c82:	eb 97       	sbiw	r28, 0x3b	; 59
    1c84:	e9 96       	adiw	r28, 0x39	; 57
    1c86:	9f ad       	ldd	r25, Y+63	; 0x3f
    1c88:	e9 97       	sbiw	r28, 0x39	; 57
    1c8a:	eb 96       	adiw	r28, 0x3b	; 59
    1c8c:	0f ad       	ldd	r16, Y+63	; 0x3f
    1c8e:	eb 97       	sbiw	r28, 0x3b	; 59
    1c90:	90 2b       	or	r25, r16
    1c92:	e9 96       	adiw	r28, 0x39	; 57
    1c94:	9f af       	std	Y+63, r25	; 0x3f
    1c96:	e9 97       	sbiw	r28, 0x39	; 57
    1c98:	ea 96       	adiw	r28, 0x3a	; 58
    1c9a:	1f ad       	ldd	r17, Y+63	; 0x3f
    1c9c:	ea 97       	sbiw	r28, 0x3a	; 58
    1c9e:	a9 96       	adiw	r28, 0x29	; 41
    1ca0:	1f af       	std	Y+63, r17	; 0x3f
    1ca2:	a9 97       	sbiw	r28, 0x29	; 41
    1ca4:	27 96       	adiw	r28, 0x07	; 7
    1ca6:	2f ad       	ldd	r18, Y+63	; 0x3f
    1ca8:	27 97       	sbiw	r28, 0x07	; 7
    1caa:	3e a9       	ldd	r19, Y+54	; 0x36
    1cac:	23 0f       	add	r18, r19
    1cae:	aa 96       	adiw	r28, 0x2a	; 42
    1cb0:	2f af       	std	Y+63, r18	; 0x3f
    1cb2:	aa 97       	sbiw	r28, 0x2a	; 42
    1cb4:	41 e0       	ldi	r20, 0x01	; 1
    1cb6:	ec 96       	adiw	r28, 0x3c	; 60
    1cb8:	4f af       	std	Y+63, r20	; 0x3f
    1cba:	ec 97       	sbiw	r28, 0x3c	; 60
    1cbc:	aa 96       	adiw	r28, 0x2a	; 42
    1cbe:	5f ad       	ldd	r21, Y+63	; 0x3f
    1cc0:	aa 97       	sbiw	r28, 0x2a	; 42
    1cc2:	27 96       	adiw	r28, 0x07	; 7
    1cc4:	6f ad       	ldd	r22, Y+63	; 0x3f
    1cc6:	27 97       	sbiw	r28, 0x07	; 7
    1cc8:	56 17       	cp	r21, r22
    1cca:	18 f0       	brcs	.+6      	; 0x1cd2 <TIMERS_voidTimer0Delay+0x76a>
    1ccc:	ec 96       	adiw	r28, 0x3c	; 60
    1cce:	1f ae       	std	Y+63, r1	; 0x3f
    1cd0:	ec 97       	sbiw	r28, 0x3c	; 60
    1cd2:	e9 96       	adiw	r28, 0x39	; 57
    1cd4:	7f ad       	ldd	r23, Y+63	; 0x3f
    1cd6:	e9 97       	sbiw	r28, 0x39	; 57
    1cd8:	aa 96       	adiw	r28, 0x2a	; 42
    1cda:	8f ad       	ldd	r24, Y+63	; 0x3f
    1cdc:	aa 97       	sbiw	r28, 0x2a	; 42
    1cde:	78 0f       	add	r23, r24
    1ce0:	ed 96       	adiw	r28, 0x3d	; 61
    1ce2:	7f af       	std	Y+63, r23	; 0x3f
    1ce4:	ed 97       	sbiw	r28, 0x3d	; 61
    1ce6:	91 e0       	ldi	r25, 0x01	; 1
    1ce8:	ee 96       	adiw	r28, 0x3e	; 62
    1cea:	9f af       	std	Y+63, r25	; 0x3f
    1cec:	ee 97       	sbiw	r28, 0x3e	; 62
    1cee:	ed 96       	adiw	r28, 0x3d	; 61
    1cf0:	0f ad       	ldd	r16, Y+63	; 0x3f
    1cf2:	ed 97       	sbiw	r28, 0x3d	; 61
    1cf4:	aa 96       	adiw	r28, 0x2a	; 42
    1cf6:	1f ad       	ldd	r17, Y+63	; 0x3f
    1cf8:	aa 97       	sbiw	r28, 0x2a	; 42
    1cfa:	01 17       	cp	r16, r17
    1cfc:	18 f0       	brcs	.+6      	; 0x1d04 <TIMERS_voidTimer0Delay+0x79c>
    1cfe:	ee 96       	adiw	r28, 0x3e	; 62
    1d00:	1f ae       	std	Y+63, r1	; 0x3f
    1d02:	ee 97       	sbiw	r28, 0x3e	; 62
    1d04:	ec 96       	adiw	r28, 0x3c	; 60
    1d06:	2f ad       	ldd	r18, Y+63	; 0x3f
    1d08:	ec 97       	sbiw	r28, 0x3c	; 60
    1d0a:	ee 96       	adiw	r28, 0x3e	; 62
    1d0c:	3f ad       	ldd	r19, Y+63	; 0x3f
    1d0e:	ee 97       	sbiw	r28, 0x3e	; 62
    1d10:	23 2b       	or	r18, r19
    1d12:	ec 96       	adiw	r28, 0x3c	; 60
    1d14:	2f af       	std	Y+63, r18	; 0x3f
    1d16:	ec 97       	sbiw	r28, 0x3c	; 60
    1d18:	ed 96       	adiw	r28, 0x3d	; 61
    1d1a:	4f ad       	ldd	r20, Y+63	; 0x3f
    1d1c:	ed 97       	sbiw	r28, 0x3d	; 61
    1d1e:	aa 96       	adiw	r28, 0x2a	; 42
    1d20:	4f af       	std	Y+63, r20	; 0x3f
    1d22:	aa 97       	sbiw	r28, 0x2a	; 42
    1d24:	28 96       	adiw	r28, 0x08	; 8
    1d26:	5f ad       	ldd	r21, Y+63	; 0x3f
    1d28:	28 97       	sbiw	r28, 0x08	; 8
    1d2a:	6f a9       	ldd	r22, Y+55	; 0x37
    1d2c:	56 0f       	add	r21, r22
    1d2e:	ab 96       	adiw	r28, 0x2b	; 43
    1d30:	5f af       	std	Y+63, r21	; 0x3f
    1d32:	ab 97       	sbiw	r28, 0x2b	; 43
    1d34:	ec 96       	adiw	r28, 0x3c	; 60
    1d36:	8f ad       	ldd	r24, Y+63	; 0x3f
    1d38:	ec 97       	sbiw	r28, 0x3c	; 60
    1d3a:	ab 96       	adiw	r28, 0x2b	; 43
    1d3c:	7f ad       	ldd	r23, Y+63	; 0x3f
    1d3e:	ab 97       	sbiw	r28, 0x2b	; 43
    1d40:	87 0f       	add	r24, r23
    1d42:	ab 96       	adiw	r28, 0x2b	; 43
    1d44:	8f af       	std	Y+63, r24	; 0x3f
    1d46:	ab 97       	sbiw	r28, 0x2b	; 43
    1d48:	a4 96       	adiw	r28, 0x24	; 36
    1d4a:	8f ad       	ldd	r24, Y+63	; 0x3f
    1d4c:	a4 97       	sbiw	r28, 0x24	; 36
    1d4e:	21 96       	adiw	r28, 0x01	; 1
    1d50:	8f af       	std	Y+63, r24	; 0x3f
    1d52:	21 97       	sbiw	r28, 0x01	; 1
    1d54:	a5 96       	adiw	r28, 0x25	; 37
    1d56:	9f ad       	ldd	r25, Y+63	; 0x3f
    1d58:	a5 97       	sbiw	r28, 0x25	; 37
    1d5a:	22 96       	adiw	r28, 0x02	; 2
    1d5c:	9f af       	std	Y+63, r25	; 0x3f
    1d5e:	22 97       	sbiw	r28, 0x02	; 2
    1d60:	a6 96       	adiw	r28, 0x26	; 38
    1d62:	0f ad       	ldd	r16, Y+63	; 0x3f
    1d64:	a6 97       	sbiw	r28, 0x26	; 38
    1d66:	23 96       	adiw	r28, 0x03	; 3
    1d68:	0f af       	std	Y+63, r16	; 0x3f
    1d6a:	23 97       	sbiw	r28, 0x03	; 3
    1d6c:	a7 96       	adiw	r28, 0x27	; 39
    1d6e:	1f ad       	ldd	r17, Y+63	; 0x3f
    1d70:	a7 97       	sbiw	r28, 0x27	; 39
    1d72:	24 96       	adiw	r28, 0x04	; 4
    1d74:	1f af       	std	Y+63, r17	; 0x3f
    1d76:	24 97       	sbiw	r28, 0x04	; 4
    1d78:	a8 96       	adiw	r28, 0x28	; 40
    1d7a:	2f ad       	ldd	r18, Y+63	; 0x3f
    1d7c:	a8 97       	sbiw	r28, 0x28	; 40
    1d7e:	25 96       	adiw	r28, 0x05	; 5
    1d80:	2f af       	std	Y+63, r18	; 0x3f
    1d82:	25 97       	sbiw	r28, 0x05	; 5
    1d84:	a9 96       	adiw	r28, 0x29	; 41
    1d86:	3f ad       	ldd	r19, Y+63	; 0x3f
    1d88:	a9 97       	sbiw	r28, 0x29	; 41
    1d8a:	26 96       	adiw	r28, 0x06	; 6
    1d8c:	3f af       	std	Y+63, r19	; 0x3f
    1d8e:	26 97       	sbiw	r28, 0x06	; 6
    1d90:	aa 96       	adiw	r28, 0x2a	; 42
    1d92:	4f ad       	ldd	r20, Y+63	; 0x3f
    1d94:	aa 97       	sbiw	r28, 0x2a	; 42
    1d96:	27 96       	adiw	r28, 0x07	; 7
    1d98:	4f af       	std	Y+63, r20	; 0x3f
    1d9a:	27 97       	sbiw	r28, 0x07	; 7
    1d9c:	ab 96       	adiw	r28, 0x2b	; 43
    1d9e:	5f ad       	ldd	r21, Y+63	; 0x3f
    1da0:	ab 97       	sbiw	r28, 0x2b	; 43
    1da2:	28 96       	adiw	r28, 0x08	; 8
    1da4:	5f af       	std	Y+63, r21	; 0x3f
    1da6:	28 97       	sbiw	r28, 0x08	; 8
    1da8:	21 96       	adiw	r28, 0x01	; 1
    1daa:	2f ad       	ldd	r18, Y+63	; 0x3f
    1dac:	21 97       	sbiw	r28, 0x01	; 1
    1dae:	22 96       	adiw	r28, 0x02	; 2
    1db0:	3f ad       	ldd	r19, Y+63	; 0x3f
    1db2:	22 97       	sbiw	r28, 0x02	; 2
    1db4:	23 96       	adiw	r28, 0x03	; 3
    1db6:	4f ad       	ldd	r20, Y+63	; 0x3f
    1db8:	23 97       	sbiw	r28, 0x03	; 3
    1dba:	24 96       	adiw	r28, 0x04	; 4
    1dbc:	5f ad       	ldd	r21, Y+63	; 0x3f
    1dbe:	24 97       	sbiw	r28, 0x04	; 4
    1dc0:	25 96       	adiw	r28, 0x05	; 5
    1dc2:	6f ad       	ldd	r22, Y+63	; 0x3f
    1dc4:	25 97       	sbiw	r28, 0x05	; 5
    1dc6:	26 96       	adiw	r28, 0x06	; 6
    1dc8:	7f ad       	ldd	r23, Y+63	; 0x3f
    1dca:	26 97       	sbiw	r28, 0x06	; 6
    1dcc:	27 96       	adiw	r28, 0x07	; 7
    1dce:	8f ad       	ldd	r24, Y+63	; 0x3f
    1dd0:	27 97       	sbiw	r28, 0x07	; 7
    1dd2:	28 96       	adiw	r28, 0x08	; 8
    1dd4:	9f ad       	ldd	r25, Y+63	; 0x3f
    1dd6:	28 97       	sbiw	r28, 0x08	; 8
    1dd8:	03 e0       	ldi	r16, 0x03	; 3
    1dda:	0e 94 44 01 	call	0x288	; 0x288 <__ashldi3>
    1dde:	a2 2e       	mov	r10, r18
    1de0:	b3 2e       	mov	r11, r19
    1de2:	c4 2e       	mov	r12, r20
    1de4:	d5 2e       	mov	r13, r21
    1de6:	e6 2e       	mov	r14, r22
    1de8:	f7 2e       	mov	r15, r23
    1dea:	08 2f       	mov	r16, r24
    1dec:	19 2f       	mov	r17, r25
    1dee:	ae 8a       	std	Y+22, r10	; 0x16
    1df0:	bf 8a       	std	Y+23, r11	; 0x17
    1df2:	c8 8e       	std	Y+24, r12	; 0x18
    1df4:	d9 8e       	std	Y+25, r13	; 0x19
    1df6:	ea 8e       	std	Y+26, r14	; 0x1a
    1df8:	fb 8e       	std	Y+27, r15	; 0x1b
    1dfa:	0c 8f       	std	Y+28, r16	; 0x1c
    1dfc:	1d 8f       	std	Y+29, r17	; 0x1d
    1dfe:	2d c0       	rjmp	.+90     	; 0x1e5a <TIMERS_voidTimer0Delay+0x8f2>
	}
	else if (Copy_u8Type == TIMERS_S)
    1e00:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1e02:	82 30       	cpi	r24, 0x02	; 2
    1e04:	51 f5       	brne	.+84     	; 0x1e5a <TIMERS_voidTimer0Delay+0x8f2>
	{
		Copy_u64Delay *= 1000000;
    1e06:	2e 89       	ldd	r18, Y+22	; 0x16
    1e08:	3f 89       	ldd	r19, Y+23	; 0x17
    1e0a:	48 8d       	ldd	r20, Y+24	; 0x18
    1e0c:	59 8d       	ldd	r21, Y+25	; 0x19
    1e0e:	6a 8d       	ldd	r22, Y+26	; 0x1a
    1e10:	7b 8d       	ldd	r23, Y+27	; 0x1b
    1e12:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1e14:	9d 8d       	ldd	r25, Y+29	; 0x1d
    1e16:	aa 24       	eor	r10, r10
    1e18:	68 94       	set
    1e1a:	a6 f8       	bld	r10, 6
    1e1c:	0f 2e       	mov	r0, r31
    1e1e:	f2 e4       	ldi	r31, 0x42	; 66
    1e20:	bf 2e       	mov	r11, r31
    1e22:	f0 2d       	mov	r31, r0
    1e24:	0f 2e       	mov	r0, r31
    1e26:	ff e0       	ldi	r31, 0x0F	; 15
    1e28:	cf 2e       	mov	r12, r31
    1e2a:	f0 2d       	mov	r31, r0
    1e2c:	dd 24       	eor	r13, r13
    1e2e:	ee 24       	eor	r14, r14
    1e30:	ff 24       	eor	r15, r15
    1e32:	00 e0       	ldi	r16, 0x00	; 0
    1e34:	10 e0       	ldi	r17, 0x00	; 0
    1e36:	0e 94 49 00 	call	0x92	; 0x92 <__muldi3>
    1e3a:	a2 2e       	mov	r10, r18
    1e3c:	b3 2e       	mov	r11, r19
    1e3e:	c4 2e       	mov	r12, r20
    1e40:	d5 2e       	mov	r13, r21
    1e42:	e6 2e       	mov	r14, r22
    1e44:	f7 2e       	mov	r15, r23
    1e46:	08 2f       	mov	r16, r24
    1e48:	19 2f       	mov	r17, r25
    1e4a:	ae 8a       	std	Y+22, r10	; 0x16
    1e4c:	bf 8a       	std	Y+23, r11	; 0x17
    1e4e:	c8 8e       	std	Y+24, r12	; 0x18
    1e50:	d9 8e       	std	Y+25, r13	; 0x19
    1e52:	ea 8e       	std	Y+26, r14	; 0x1a
    1e54:	fb 8e       	std	Y+27, r15	; 0x1b
    1e56:	0c 8f       	std	Y+28, r16	; 0x1c
    1e58:	1d 8f       	std	Y+29, r17	; 0x1d
	}
	//Check if the user work in the correct mode or not
	#if ((TIMER0_MODE == TIMER0_CTC_MODE) || (TIMER0_MODE == TIMER0_OVF_MODE))
		f32 Local_f32TickTime, Local_f32OVFNumbers = 0;
    1e5a:	80 e0       	ldi	r24, 0x00	; 0
    1e5c:	90 e0       	ldi	r25, 0x00	; 0
    1e5e:	a0 e0       	ldi	r26, 0x00	; 0
    1e60:	b0 e0       	ldi	r27, 0x00	; 0
    1e62:	8e 87       	std	Y+14, r24	; 0x0e
    1e64:	9f 87       	std	Y+15, r25	; 0x0f
    1e66:	a8 8b       	std	Y+16, r26	; 0x10
    1e68:	b9 8b       	std	Y+17, r27	; 0x11
		u8 Local_u8Value = TIMER0_OVF_VALUE - 1;
    1e6a:	8f ef       	ldi	r24, 0xFF	; 255
    1e6c:	8d 87       	std	Y+13, r24	; 0x0d
		u32 Local_u32OVFNumbersInteger = 0, Local_u32OverflowTime;
    1e6e:	19 86       	std	Y+9, r1	; 0x09
    1e70:	1a 86       	std	Y+10, r1	; 0x0a
    1e72:	1b 86       	std	Y+11, r1	; 0x0b
    1e74:	1c 86       	std	Y+12, r1	; 0x0c

		//Calculate the tick time
		#if TIMER0_PRESCALER == TIMERS_PRESCALER_DIV_BY_1
			Local_f32TickTime = 1.0 / CLOCK;
    1e76:	80 e0       	ldi	r24, 0x00	; 0
    1e78:	90 e0       	ldi	r25, 0x00	; 0
    1e7a:	a0 e0       	ldi	r26, 0x00	; 0
    1e7c:	be e3       	ldi	r27, 0x3E	; 62
    1e7e:	8a 8b       	std	Y+18, r24	; 0x12
    1e80:	9b 8b       	std	Y+19, r25	; 0x13
    1e82:	ac 8b       	std	Y+20, r26	; 0x14
    1e84:	bd 8b       	std	Y+21, r27	; 0x15
			Local_f32TickTime = 256.0 / CLOCK;
		#elif TIMER0_PRESCALER == TIMERS_PRESCALER_DIV_BY_1024
			Local_f32TickTime = 1024.0 / CLOCK;
		#endif
		//Calculate the overflow Time
		Local_u32OverflowTime = Local_f32TickTime * (TIMER0_OVF_VALUE);
    1e86:	6a 89       	ldd	r22, Y+18	; 0x12
    1e88:	7b 89       	ldd	r23, Y+19	; 0x13
    1e8a:	8c 89       	ldd	r24, Y+20	; 0x14
    1e8c:	9d 89       	ldd	r25, Y+21	; 0x15
    1e8e:	20 e0       	ldi	r18, 0x00	; 0
    1e90:	30 e0       	ldi	r19, 0x00	; 0
    1e92:	40 e8       	ldi	r20, 0x80	; 128
    1e94:	53 e4       	ldi	r21, 0x43	; 67
    1e96:	0e 94 75 04 	call	0x8ea	; 0x8ea <__mulsf3>
    1e9a:	dc 01       	movw	r26, r24
    1e9c:	cb 01       	movw	r24, r22
    1e9e:	bc 01       	movw	r22, r24
    1ea0:	cd 01       	movw	r24, r26
    1ea2:	0e 94 c3 01 	call	0x386	; 0x386 <__fixunssfsi>
    1ea6:	dc 01       	movw	r26, r24
    1ea8:	cb 01       	movw	r24, r22
    1eaa:	8d 83       	std	Y+5, r24	; 0x05
    1eac:	9e 83       	std	Y+6, r25	; 0x06
    1eae:	af 83       	std	Y+7, r26	; 0x07
    1eb0:	b8 87       	std	Y+8, r27	; 0x08
		//Check if the delay is less the tick time
		if (Copy_u64Delay <= Local_f32TickTime)
    1eb2:	2e 89       	ldd	r18, Y+22	; 0x16
    1eb4:	3f 89       	ldd	r19, Y+23	; 0x17
    1eb6:	48 8d       	ldd	r20, Y+24	; 0x18
    1eb8:	59 8d       	ldd	r21, Y+25	; 0x19
    1eba:	6a 8d       	ldd	r22, Y+26	; 0x1a
    1ebc:	7b 8d       	ldd	r23, Y+27	; 0x1b
    1ebe:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1ec0:	9d 8d       	ldd	r25, Y+29	; 0x1d
    1ec2:	0e 94 ef 01 	call	0x3de	; 0x3de <__floatundisf>
    1ec6:	dc 01       	movw	r26, r24
    1ec8:	cb 01       	movw	r24, r22
    1eca:	bc 01       	movw	r22, r24
    1ecc:	cd 01       	movw	r24, r26
    1ece:	2a 89       	ldd	r18, Y+18	; 0x12
    1ed0:	3b 89       	ldd	r19, Y+19	; 0x13
    1ed2:	4c 89       	ldd	r20, Y+20	; 0x14
    1ed4:	5d 89       	ldd	r21, Y+21	; 0x15
    1ed6:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <__lesf2>
    1eda:	18 16       	cp	r1, r24
    1edc:	1c f0       	brlt	.+6      	; 0x1ee4 <TIMERS_voidTimer0Delay+0x97c>
		{
			Local_u8Value = 1;
    1ede:	81 e0       	ldi	r24, 0x01	; 1
    1ee0:	8d 87       	std	Y+13, r24	; 0x0d
    1ee2:	33 c1       	rjmp	.+614    	; 0x214a <TIMERS_voidTimer0Delay+0xbe2>
		}
		//Check if the delay is more the tick time and less than or equal the over flow time
		else if ((Copy_u64Delay > Local_f32TickTime) && (Copy_u64Delay <= Local_u32OverflowTime))
    1ee4:	2e 89       	ldd	r18, Y+22	; 0x16
    1ee6:	3f 89       	ldd	r19, Y+23	; 0x17
    1ee8:	48 8d       	ldd	r20, Y+24	; 0x18
    1eea:	59 8d       	ldd	r21, Y+25	; 0x19
    1eec:	6a 8d       	ldd	r22, Y+26	; 0x1a
    1eee:	7b 8d       	ldd	r23, Y+27	; 0x1b
    1ef0:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1ef2:	9d 8d       	ldd	r25, Y+29	; 0x1d
    1ef4:	0e 94 ef 01 	call	0x3de	; 0x3de <__floatundisf>
    1ef8:	dc 01       	movw	r26, r24
    1efa:	cb 01       	movw	r24, r22
    1efc:	1f a6       	std	Y+47, r1	; 0x2f
    1efe:	bc 01       	movw	r22, r24
    1f00:	cd 01       	movw	r24, r26
    1f02:	2a 89       	ldd	r18, Y+18	; 0x12
    1f04:	3b 89       	ldd	r19, Y+19	; 0x13
    1f06:	4c 89       	ldd	r20, Y+20	; 0x14
    1f08:	5d 89       	ldd	r21, Y+21	; 0x15
    1f0a:	0e 94 1b 06 	call	0xc36	; 0xc36 <__gtsf2>
    1f0e:	18 16       	cp	r1, r24
    1f10:	14 f4       	brge	.+4      	; 0x1f16 <TIMERS_voidTimer0Delay+0x9ae>
    1f12:	61 e0       	ldi	r22, 0x01	; 1
    1f14:	6f a7       	std	Y+47, r22	; 0x2f
    1f16:	81 e0       	ldi	r24, 0x01	; 1
    1f18:	7f a5       	ldd	r23, Y+47	; 0x2f
    1f1a:	87 27       	eor	r24, r23
    1f1c:	88 23       	and	r24, r24
    1f1e:	09 f0       	breq	.+2      	; 0x1f22 <TIMERS_voidTimer0Delay+0x9ba>
    1f20:	79 c0       	rjmp	.+242    	; 0x2014 <TIMERS_voidTimer0Delay+0xaac>
    1f22:	8d 81       	ldd	r24, Y+5	; 0x05
    1f24:	9e 81       	ldd	r25, Y+6	; 0x06
    1f26:	af 81       	ldd	r26, Y+7	; 0x07
    1f28:	b8 85       	ldd	r27, Y+8	; 0x08
    1f2a:	8c 01       	movw	r16, r24
    1f2c:	9d 01       	movw	r18, r26
    1f2e:	40 e0       	ldi	r20, 0x00	; 0
    1f30:	50 e0       	ldi	r21, 0x00	; 0
    1f32:	60 e0       	ldi	r22, 0x00	; 0
    1f34:	70 e0       	ldi	r23, 0x00	; 0
    1f36:	0f a3       	std	Y+39, r16	; 0x27
    1f38:	18 a7       	std	Y+40, r17	; 0x28
    1f3a:	29 a7       	std	Y+41, r18	; 0x29
    1f3c:	3a a7       	std	Y+42, r19	; 0x2a
    1f3e:	4b a7       	std	Y+43, r20	; 0x2b
    1f40:	5c a7       	std	Y+44, r21	; 0x2c
    1f42:	6d a7       	std	Y+45, r22	; 0x2d
    1f44:	7e a7       	std	Y+46, r23	; 0x2e
    1f46:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1f48:	1e a5       	ldd	r17, Y+46	; 0x2e
    1f4a:	18 17       	cp	r17, r24
    1f4c:	08 f4       	brcc	.+2      	; 0x1f50 <TIMERS_voidTimer0Delay+0x9e8>
    1f4e:	62 c0       	rjmp	.+196    	; 0x2014 <TIMERS_voidTimer0Delay+0xaac>
    1f50:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1f52:	2e a5       	ldd	r18, Y+46	; 0x2e
    1f54:	82 17       	cp	r24, r18
    1f56:	c1 f5       	brne	.+112    	; 0x1fc8 <TIMERS_voidTimer0Delay+0xa60>
    1f58:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1f5a:	3d a5       	ldd	r19, Y+45	; 0x2d
    1f5c:	38 17       	cp	r19, r24
    1f5e:	08 f4       	brcc	.+2      	; 0x1f62 <TIMERS_voidTimer0Delay+0x9fa>
    1f60:	59 c0       	rjmp	.+178    	; 0x2014 <TIMERS_voidTimer0Delay+0xaac>
    1f62:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1f64:	4d a5       	ldd	r20, Y+45	; 0x2d
    1f66:	84 17       	cp	r24, r20
    1f68:	79 f5       	brne	.+94     	; 0x1fc8 <TIMERS_voidTimer0Delay+0xa60>
    1f6a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1f6c:	5c a5       	ldd	r21, Y+44	; 0x2c
    1f6e:	58 17       	cp	r21, r24
    1f70:	08 f4       	brcc	.+2      	; 0x1f74 <TIMERS_voidTimer0Delay+0xa0c>
    1f72:	50 c0       	rjmp	.+160    	; 0x2014 <TIMERS_voidTimer0Delay+0xaac>
    1f74:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1f76:	6c a5       	ldd	r22, Y+44	; 0x2c
    1f78:	86 17       	cp	r24, r22
    1f7a:	31 f5       	brne	.+76     	; 0x1fc8 <TIMERS_voidTimer0Delay+0xa60>
    1f7c:	8a 8d       	ldd	r24, Y+26	; 0x1a
    1f7e:	7b a5       	ldd	r23, Y+43	; 0x2b
    1f80:	78 17       	cp	r23, r24
    1f82:	08 f4       	brcc	.+2      	; 0x1f86 <TIMERS_voidTimer0Delay+0xa1e>
    1f84:	47 c0       	rjmp	.+142    	; 0x2014 <TIMERS_voidTimer0Delay+0xaac>
    1f86:	8a 8d       	ldd	r24, Y+26	; 0x1a
    1f88:	9b a5       	ldd	r25, Y+43	; 0x2b
    1f8a:	89 17       	cp	r24, r25
    1f8c:	e9 f4       	brne	.+58     	; 0x1fc8 <TIMERS_voidTimer0Delay+0xa60>
    1f8e:	89 8d       	ldd	r24, Y+25	; 0x19
    1f90:	0a a5       	ldd	r16, Y+42	; 0x2a
    1f92:	08 17       	cp	r16, r24
    1f94:	08 f4       	brcc	.+2      	; 0x1f98 <TIMERS_voidTimer0Delay+0xa30>
    1f96:	3e c0       	rjmp	.+124    	; 0x2014 <TIMERS_voidTimer0Delay+0xaac>
    1f98:	89 8d       	ldd	r24, Y+25	; 0x19
    1f9a:	1a a5       	ldd	r17, Y+42	; 0x2a
    1f9c:	81 17       	cp	r24, r17
    1f9e:	a1 f4       	brne	.+40     	; 0x1fc8 <TIMERS_voidTimer0Delay+0xa60>
    1fa0:	88 8d       	ldd	r24, Y+24	; 0x18
    1fa2:	29 a5       	ldd	r18, Y+41	; 0x29
    1fa4:	28 17       	cp	r18, r24
    1fa6:	b0 f1       	brcs	.+108    	; 0x2014 <TIMERS_voidTimer0Delay+0xaac>
    1fa8:	88 8d       	ldd	r24, Y+24	; 0x18
    1faa:	39 a5       	ldd	r19, Y+41	; 0x29
    1fac:	83 17       	cp	r24, r19
    1fae:	61 f4       	brne	.+24     	; 0x1fc8 <TIMERS_voidTimer0Delay+0xa60>
    1fb0:	8f 89       	ldd	r24, Y+23	; 0x17
    1fb2:	48 a5       	ldd	r20, Y+40	; 0x28
    1fb4:	48 17       	cp	r20, r24
    1fb6:	70 f1       	brcs	.+92     	; 0x2014 <TIMERS_voidTimer0Delay+0xaac>
    1fb8:	8f 89       	ldd	r24, Y+23	; 0x17
    1fba:	58 a5       	ldd	r21, Y+40	; 0x28
    1fbc:	85 17       	cp	r24, r21
    1fbe:	21 f4       	brne	.+8      	; 0x1fc8 <TIMERS_voidTimer0Delay+0xa60>
    1fc0:	8e 89       	ldd	r24, Y+22	; 0x16
    1fc2:	6f a1       	ldd	r22, Y+39	; 0x27
    1fc4:	68 17       	cp	r22, r24
    1fc6:	30 f1       	brcs	.+76     	; 0x2014 <TIMERS_voidTimer0Delay+0xaac>
		{
			Local_u8Value = Copy_u64Delay / Local_f32TickTime;
    1fc8:	2e 89       	ldd	r18, Y+22	; 0x16
    1fca:	3f 89       	ldd	r19, Y+23	; 0x17
    1fcc:	48 8d       	ldd	r20, Y+24	; 0x18
    1fce:	59 8d       	ldd	r21, Y+25	; 0x19
    1fd0:	6a 8d       	ldd	r22, Y+26	; 0x1a
    1fd2:	7b 8d       	ldd	r23, Y+27	; 0x1b
    1fd4:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1fd6:	9d 8d       	ldd	r25, Y+29	; 0x1d
    1fd8:	0e 94 ef 01 	call	0x3de	; 0x3de <__floatundisf>
    1fdc:	dc 01       	movw	r26, r24
    1fde:	cb 01       	movw	r24, r22
    1fe0:	bc 01       	movw	r22, r24
    1fe2:	cd 01       	movw	r24, r26
    1fe4:	2a 89       	ldd	r18, Y+18	; 0x12
    1fe6:	3b 89       	ldd	r19, Y+19	; 0x13
    1fe8:	4c 89       	ldd	r20, Y+20	; 0x14
    1fea:	5d 89       	ldd	r21, Y+21	; 0x15
    1fec:	0e 94 6f 05 	call	0xade	; 0xade <__divsf3>
    1ff0:	dc 01       	movw	r26, r24
    1ff2:	cb 01       	movw	r24, r22
    1ff4:	bc 01       	movw	r22, r24
    1ff6:	cd 01       	movw	r24, r26
    1ff8:	0e 94 c3 01 	call	0x386	; 0x386 <__fixunssfsi>
    1ffc:	dc 01       	movw	r26, r24
    1ffe:	cb 01       	movw	r24, r22
    2000:	8d 87       	std	Y+13, r24	; 0x0d
			Local_u32OVFNumbersInteger = 1;
    2002:	81 e0       	ldi	r24, 0x01	; 1
    2004:	90 e0       	ldi	r25, 0x00	; 0
    2006:	a0 e0       	ldi	r26, 0x00	; 0
    2008:	b0 e0       	ldi	r27, 0x00	; 0
    200a:	89 87       	std	Y+9, r24	; 0x09
    200c:	9a 87       	std	Y+10, r25	; 0x0a
    200e:	ab 87       	std	Y+11, r26	; 0x0b
    2010:	bc 87       	std	Y+12, r27	; 0x0c
    2012:	9b c0       	rjmp	.+310    	; 0x214a <TIMERS_voidTimer0Delay+0xbe2>
		}
		//Check if the delay more than the over flow time
		else if (Copy_u64Delay > Local_u32OverflowTime)
    2014:	8d 81       	ldd	r24, Y+5	; 0x05
    2016:	9e 81       	ldd	r25, Y+6	; 0x06
    2018:	af 81       	ldd	r26, Y+7	; 0x07
    201a:	b8 85       	ldd	r27, Y+8	; 0x08
    201c:	8c 01       	movw	r16, r24
    201e:	9d 01       	movw	r18, r26
    2020:	40 e0       	ldi	r20, 0x00	; 0
    2022:	50 e0       	ldi	r21, 0x00	; 0
    2024:	60 e0       	ldi	r22, 0x00	; 0
    2026:	70 e0       	ldi	r23, 0x00	; 0
    2028:	0f 8f       	std	Y+31, r16	; 0x1f
    202a:	18 a3       	std	Y+32, r17	; 0x20
    202c:	29 a3       	std	Y+33, r18	; 0x21
    202e:	3a a3       	std	Y+34, r19	; 0x22
    2030:	4b a3       	std	Y+35, r20	; 0x23
    2032:	5c a3       	std	Y+36, r21	; 0x24
    2034:	6d a3       	std	Y+37, r22	; 0x25
    2036:	7e a3       	std	Y+38, r23	; 0x26
    2038:	8d 8d       	ldd	r24, Y+29	; 0x1d
    203a:	1e a1       	ldd	r17, Y+38	; 0x26
    203c:	18 17       	cp	r17, r24
    203e:	08 f4       	brcc	.+2      	; 0x2042 <TIMERS_voidTimer0Delay+0xada>
    2040:	40 c0       	rjmp	.+128    	; 0x20c2 <TIMERS_voidTimer0Delay+0xb5a>
    2042:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2044:	2e a1       	ldd	r18, Y+38	; 0x26
    2046:	82 17       	cp	r24, r18
    2048:	09 f0       	breq	.+2      	; 0x204c <TIMERS_voidTimer0Delay+0xae4>
    204a:	7f c0       	rjmp	.+254    	; 0x214a <TIMERS_voidTimer0Delay+0xbe2>
    204c:	8c 8d       	ldd	r24, Y+28	; 0x1c
    204e:	3d a1       	ldd	r19, Y+37	; 0x25
    2050:	38 17       	cp	r19, r24
    2052:	b8 f1       	brcs	.+110    	; 0x20c2 <TIMERS_voidTimer0Delay+0xb5a>
    2054:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2056:	4d a1       	ldd	r20, Y+37	; 0x25
    2058:	84 17       	cp	r24, r20
    205a:	09 f0       	breq	.+2      	; 0x205e <TIMERS_voidTimer0Delay+0xaf6>
    205c:	76 c0       	rjmp	.+236    	; 0x214a <TIMERS_voidTimer0Delay+0xbe2>
    205e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2060:	5c a1       	ldd	r21, Y+36	; 0x24
    2062:	58 17       	cp	r21, r24
    2064:	70 f1       	brcs	.+92     	; 0x20c2 <TIMERS_voidTimer0Delay+0xb5a>
    2066:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2068:	6c a1       	ldd	r22, Y+36	; 0x24
    206a:	86 17       	cp	r24, r22
    206c:	09 f0       	breq	.+2      	; 0x2070 <TIMERS_voidTimer0Delay+0xb08>
    206e:	6d c0       	rjmp	.+218    	; 0x214a <TIMERS_voidTimer0Delay+0xbe2>
    2070:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2072:	7b a1       	ldd	r23, Y+35	; 0x23
    2074:	78 17       	cp	r23, r24
    2076:	28 f1       	brcs	.+74     	; 0x20c2 <TIMERS_voidTimer0Delay+0xb5a>
    2078:	8a 8d       	ldd	r24, Y+26	; 0x1a
    207a:	9b a1       	ldd	r25, Y+35	; 0x23
    207c:	89 17       	cp	r24, r25
    207e:	09 f0       	breq	.+2      	; 0x2082 <TIMERS_voidTimer0Delay+0xb1a>
    2080:	64 c0       	rjmp	.+200    	; 0x214a <TIMERS_voidTimer0Delay+0xbe2>
    2082:	89 8d       	ldd	r24, Y+25	; 0x19
    2084:	0a a1       	ldd	r16, Y+34	; 0x22
    2086:	08 17       	cp	r16, r24
    2088:	e0 f0       	brcs	.+56     	; 0x20c2 <TIMERS_voidTimer0Delay+0xb5a>
    208a:	89 8d       	ldd	r24, Y+25	; 0x19
    208c:	1a a1       	ldd	r17, Y+34	; 0x22
    208e:	81 17       	cp	r24, r17
    2090:	09 f0       	breq	.+2      	; 0x2094 <TIMERS_voidTimer0Delay+0xb2c>
    2092:	5b c0       	rjmp	.+182    	; 0x214a <TIMERS_voidTimer0Delay+0xbe2>
    2094:	88 8d       	ldd	r24, Y+24	; 0x18
    2096:	29 a1       	ldd	r18, Y+33	; 0x21
    2098:	28 17       	cp	r18, r24
    209a:	98 f0       	brcs	.+38     	; 0x20c2 <TIMERS_voidTimer0Delay+0xb5a>
    209c:	88 8d       	ldd	r24, Y+24	; 0x18
    209e:	39 a1       	ldd	r19, Y+33	; 0x21
    20a0:	83 17       	cp	r24, r19
    20a2:	09 f0       	breq	.+2      	; 0x20a6 <TIMERS_voidTimer0Delay+0xb3e>
    20a4:	52 c0       	rjmp	.+164    	; 0x214a <TIMERS_voidTimer0Delay+0xbe2>
    20a6:	8f 89       	ldd	r24, Y+23	; 0x17
    20a8:	48 a1       	ldd	r20, Y+32	; 0x20
    20aa:	48 17       	cp	r20, r24
    20ac:	50 f0       	brcs	.+20     	; 0x20c2 <TIMERS_voidTimer0Delay+0xb5a>
    20ae:	8f 89       	ldd	r24, Y+23	; 0x17
    20b0:	58 a1       	ldd	r21, Y+32	; 0x20
    20b2:	85 17       	cp	r24, r21
    20b4:	09 f0       	breq	.+2      	; 0x20b8 <TIMERS_voidTimer0Delay+0xb50>
    20b6:	49 c0       	rjmp	.+146    	; 0x214a <TIMERS_voidTimer0Delay+0xbe2>
    20b8:	8e 89       	ldd	r24, Y+22	; 0x16
    20ba:	6f 8d       	ldd	r22, Y+31	; 0x1f
    20bc:	68 17       	cp	r22, r24
    20be:	08 f0       	brcs	.+2      	; 0x20c2 <TIMERS_voidTimer0Delay+0xb5a>
    20c0:	44 c0       	rjmp	.+136    	; 0x214a <TIMERS_voidTimer0Delay+0xbe2>
		{
			Local_f32OVFNumbers = (Copy_u64Delay / ((TIMER0_OVF_VALUE) * Local_f32TickTime));
    20c2:	2e 89       	ldd	r18, Y+22	; 0x16
    20c4:	3f 89       	ldd	r19, Y+23	; 0x17
    20c6:	48 8d       	ldd	r20, Y+24	; 0x18
    20c8:	59 8d       	ldd	r21, Y+25	; 0x19
    20ca:	6a 8d       	ldd	r22, Y+26	; 0x1a
    20cc:	7b 8d       	ldd	r23, Y+27	; 0x1b
    20ce:	8c 8d       	ldd	r24, Y+28	; 0x1c
    20d0:	9d 8d       	ldd	r25, Y+29	; 0x1d
    20d2:	0e 94 ef 01 	call	0x3de	; 0x3de <__floatundisf>
    20d6:	7b 01       	movw	r14, r22
    20d8:	8c 01       	movw	r16, r24
    20da:	6a 89       	ldd	r22, Y+18	; 0x12
    20dc:	7b 89       	ldd	r23, Y+19	; 0x13
    20de:	8c 89       	ldd	r24, Y+20	; 0x14
    20e0:	9d 89       	ldd	r25, Y+21	; 0x15
    20e2:	20 e0       	ldi	r18, 0x00	; 0
    20e4:	30 e0       	ldi	r19, 0x00	; 0
    20e6:	40 e8       	ldi	r20, 0x80	; 128
    20e8:	53 e4       	ldi	r21, 0x43	; 67
    20ea:	0e 94 75 04 	call	0x8ea	; 0x8ea <__mulsf3>
    20ee:	dc 01       	movw	r26, r24
    20f0:	cb 01       	movw	r24, r22
    20f2:	9c 01       	movw	r18, r24
    20f4:	ad 01       	movw	r20, r26
    20f6:	c8 01       	movw	r24, r16
    20f8:	b7 01       	movw	r22, r14
    20fa:	0e 94 6f 05 	call	0xade	; 0xade <__divsf3>
    20fe:	dc 01       	movw	r26, r24
    2100:	cb 01       	movw	r24, r22
    2102:	8e 87       	std	Y+14, r24	; 0x0e
    2104:	9f 87       	std	Y+15, r25	; 0x0f
    2106:	a8 8b       	std	Y+16, r26	; 0x10
    2108:	b9 8b       	std	Y+17, r27	; 0x11
			Local_u32OVFNumbersInteger = (u32)(Local_f32OVFNumbers);
    210a:	6e 85       	ldd	r22, Y+14	; 0x0e
    210c:	7f 85       	ldd	r23, Y+15	; 0x0f
    210e:	88 89       	ldd	r24, Y+16	; 0x10
    2110:	99 89       	ldd	r25, Y+17	; 0x11
    2112:	0e 94 c3 01 	call	0x386	; 0x386 <__fixunssfsi>
    2116:	dc 01       	movw	r26, r24
    2118:	cb 01       	movw	r24, r22
    211a:	89 87       	std	Y+9, r24	; 0x09
    211c:	9a 87       	std	Y+10, r25	; 0x0a
    211e:	ab 87       	std	Y+11, r26	; 0x0b
    2120:	bc 87       	std	Y+12, r27	; 0x0c
			Local_f32OVFNumbers -= Local_u32OVFNumbersInteger;
    2122:	69 85       	ldd	r22, Y+9	; 0x09
    2124:	7a 85       	ldd	r23, Y+10	; 0x0a
    2126:	8b 85       	ldd	r24, Y+11	; 0x0b
    2128:	9c 85       	ldd	r25, Y+12	; 0x0c
    212a:	0e 94 5d 07 	call	0xeba	; 0xeba <__floatunsisf>
    212e:	9b 01       	movw	r18, r22
    2130:	ac 01       	movw	r20, r24
    2132:	6e 85       	ldd	r22, Y+14	; 0x0e
    2134:	7f 85       	ldd	r23, Y+15	; 0x0f
    2136:	88 89       	ldd	r24, Y+16	; 0x10
    2138:	99 89       	ldd	r25, Y+17	; 0x11
    213a:	0e 94 17 04 	call	0x82e	; 0x82e <__subsf3>
    213e:	dc 01       	movw	r26, r24
    2140:	cb 01       	movw	r24, r22
    2142:	8e 87       	std	Y+14, r24	; 0x0e
    2144:	9f 87       	std	Y+15, r25	; 0x0f
    2146:	a8 8b       	std	Y+16, r26	; 0x10
    2148:	b9 8b       	std	Y+17, r27	; 0x11
			TIMERS_voidTimer0SetCompareMatchValue(Local_u8Value);
			while (GET_BIT(TIFR, TIFR_OCF0) == 0);
			SET_BIT(TIFR, TIFR_OCF0);
		//Calculations for OVF Mode
		#elif TIMER0_MODE == TIMER0_OVF_MODE
			Local_u8Value = (TIMER0_OVF_VALUE) * (1 - Local_f32OVFNumbers);
    214a:	60 e0       	ldi	r22, 0x00	; 0
    214c:	70 e0       	ldi	r23, 0x00	; 0
    214e:	80 e8       	ldi	r24, 0x80	; 128
    2150:	9f e3       	ldi	r25, 0x3F	; 63
    2152:	2e 85       	ldd	r18, Y+14	; 0x0e
    2154:	3f 85       	ldd	r19, Y+15	; 0x0f
    2156:	48 89       	ldd	r20, Y+16	; 0x10
    2158:	59 89       	ldd	r21, Y+17	; 0x11
    215a:	0e 94 17 04 	call	0x82e	; 0x82e <__subsf3>
    215e:	dc 01       	movw	r26, r24
    2160:	cb 01       	movw	r24, r22
    2162:	bc 01       	movw	r22, r24
    2164:	cd 01       	movw	r24, r26
    2166:	20 e0       	ldi	r18, 0x00	; 0
    2168:	30 e0       	ldi	r19, 0x00	; 0
    216a:	40 e8       	ldi	r20, 0x80	; 128
    216c:	53 e4       	ldi	r21, 0x43	; 67
    216e:	0e 94 75 04 	call	0x8ea	; 0x8ea <__mulsf3>
    2172:	dc 01       	movw	r26, r24
    2174:	cb 01       	movw	r24, r22
    2176:	bc 01       	movw	r22, r24
    2178:	cd 01       	movw	r24, r26
    217a:	0e 94 c3 01 	call	0x386	; 0x386 <__fixunssfsi>
    217e:	dc 01       	movw	r26, r24
    2180:	cb 01       	movw	r24, r22
    2182:	8d 87       	std	Y+13, r24	; 0x0d
			TIMERS_voidTimer0SetPreloadValue(Local_u8Value);
    2184:	8d 85       	ldd	r24, Y+13	; 0x0d
    2186:	0e 94 82 0a 	call	0x1504	; 0x1504 <TIMERS_voidTimer0SetPreloadValue>
			TIMERS_voidTimer0Init();
    218a:	0e 94 4a 0a 	call	0x1494	; 0x1494 <TIMERS_voidTimer0Init>
			for (u32 Local_u32Iterator = 0; Local_u32Iterator <= Local_u32OVFNumbersInteger; Local_u32Iterator++)
    218e:	19 82       	std	Y+1, r1	; 0x01
    2190:	1a 82       	std	Y+2, r1	; 0x02
    2192:	1b 82       	std	Y+3, r1	; 0x03
    2194:	1c 82       	std	Y+4, r1	; 0x04
    2196:	1b c0       	rjmp	.+54     	; 0x21ce <TIMERS_voidTimer0Delay+0xc66>
			{
				while (GET_BIT(TIFR, TIFR_TOV0) == 0);
    2198:	e8 e5       	ldi	r30, 0x58	; 88
    219a:	f0 e0       	ldi	r31, 0x00	; 0
    219c:	80 81       	ld	r24, Z
    219e:	88 2f       	mov	r24, r24
    21a0:	90 e0       	ldi	r25, 0x00	; 0
    21a2:	81 70       	andi	r24, 0x01	; 1
    21a4:	90 70       	andi	r25, 0x00	; 0
    21a6:	00 97       	sbiw	r24, 0x00	; 0
    21a8:	b9 f3       	breq	.-18     	; 0x2198 <TIMERS_voidTimer0Delay+0xc30>
				SET_BIT(TIFR, TIFR_TOV0);
    21aa:	a8 e5       	ldi	r26, 0x58	; 88
    21ac:	b0 e0       	ldi	r27, 0x00	; 0
    21ae:	e8 e5       	ldi	r30, 0x58	; 88
    21b0:	f0 e0       	ldi	r31, 0x00	; 0
    21b2:	80 81       	ld	r24, Z
    21b4:	81 60       	ori	r24, 0x01	; 1
    21b6:	8c 93       	st	X, r24
		//Calculations for OVF Mode
		#elif TIMER0_MODE == TIMER0_OVF_MODE
			Local_u8Value = (TIMER0_OVF_VALUE) * (1 - Local_f32OVFNumbers);
			TIMERS_voidTimer0SetPreloadValue(Local_u8Value);
			TIMERS_voidTimer0Init();
			for (u32 Local_u32Iterator = 0; Local_u32Iterator <= Local_u32OVFNumbersInteger; Local_u32Iterator++)
    21b8:	89 81       	ldd	r24, Y+1	; 0x01
    21ba:	9a 81       	ldd	r25, Y+2	; 0x02
    21bc:	ab 81       	ldd	r26, Y+3	; 0x03
    21be:	bc 81       	ldd	r27, Y+4	; 0x04
    21c0:	01 96       	adiw	r24, 0x01	; 1
    21c2:	a1 1d       	adc	r26, r1
    21c4:	b1 1d       	adc	r27, r1
    21c6:	89 83       	std	Y+1, r24	; 0x01
    21c8:	9a 83       	std	Y+2, r25	; 0x02
    21ca:	ab 83       	std	Y+3, r26	; 0x03
    21cc:	bc 83       	std	Y+4, r27	; 0x04
    21ce:	29 81       	ldd	r18, Y+1	; 0x01
    21d0:	3a 81       	ldd	r19, Y+2	; 0x02
    21d2:	4b 81       	ldd	r20, Y+3	; 0x03
    21d4:	5c 81       	ldd	r21, Y+4	; 0x04
    21d6:	89 85       	ldd	r24, Y+9	; 0x09
    21d8:	9a 85       	ldd	r25, Y+10	; 0x0a
    21da:	ab 85       	ldd	r26, Y+11	; 0x0b
    21dc:	bc 85       	ldd	r27, Y+12	; 0x0c
    21de:	82 17       	cp	r24, r18
    21e0:	93 07       	cpc	r25, r19
    21e2:	a4 07       	cpc	r26, r20
    21e4:	b5 07       	cpc	r27, r21
    21e6:	c0 f6       	brcc	.-80     	; 0x2198 <TIMERS_voidTimer0Delay+0xc30>
			}
		#endif
	#else
		#warning "The Delay function of Timer0 won't work"
	#endif
}
    21e8:	c3 58       	subi	r28, 0x83	; 131
    21ea:	df 4f       	sbci	r29, 0xFF	; 255
    21ec:	0f b6       	in	r0, 0x3f	; 63
    21ee:	f8 94       	cli
    21f0:	de bf       	out	0x3e, r29	; 62
    21f2:	0f be       	out	0x3f, r0	; 63
    21f4:	cd bf       	out	0x3d, r28	; 61
    21f6:	cf 91       	pop	r28
    21f8:	df 91       	pop	r29
    21fa:	1f 91       	pop	r17
    21fc:	0f 91       	pop	r16
    21fe:	ff 90       	pop	r15
    2200:	ef 90       	pop	r14
    2202:	df 90       	pop	r13
    2204:	cf 90       	pop	r12
    2206:	bf 90       	pop	r11
    2208:	af 90       	pop	r10
    220a:	08 95       	ret

0000220c <__vector_10>:

void __vector_10 (void) __attribute__((signal));
void __vector_10 (void)
{
    220c:	1f 92       	push	r1
    220e:	0f 92       	push	r0
    2210:	0f b6       	in	r0, 0x3f	; 63
    2212:	0f 92       	push	r0
    2214:	11 24       	eor	r1, r1
    2216:	2f 93       	push	r18
    2218:	3f 93       	push	r19
    221a:	4f 93       	push	r20
    221c:	5f 93       	push	r21
    221e:	6f 93       	push	r22
    2220:	7f 93       	push	r23
    2222:	8f 93       	push	r24
    2224:	9f 93       	push	r25
    2226:	af 93       	push	r26
    2228:	bf 93       	push	r27
    222a:	ef 93       	push	r30
    222c:	ff 93       	push	r31
    222e:	df 93       	push	r29
    2230:	cf 93       	push	r28
    2232:	cd b7       	in	r28, 0x3d	; 61
    2234:	de b7       	in	r29, 0x3e	; 62
	if (Global_pvArrayFunction[TIMER0_CTC] != NULL)
    2236:	80 91 68 01 	lds	r24, 0x0168
    223a:	90 91 69 01 	lds	r25, 0x0169
    223e:	00 97       	sbiw	r24, 0x00	; 0
    2240:	29 f0       	breq	.+10     	; 0x224c <__vector_10+0x40>
	{
		Global_pvArrayFunction[TIMER0_CTC]();
    2242:	e0 91 68 01 	lds	r30, 0x0168
    2246:	f0 91 69 01 	lds	r31, 0x0169
    224a:	09 95       	icall
	}
	else
	{
		/*Do Nothing*/
	}
}
    224c:	cf 91       	pop	r28
    224e:	df 91       	pop	r29
    2250:	ff 91       	pop	r31
    2252:	ef 91       	pop	r30
    2254:	bf 91       	pop	r27
    2256:	af 91       	pop	r26
    2258:	9f 91       	pop	r25
    225a:	8f 91       	pop	r24
    225c:	7f 91       	pop	r23
    225e:	6f 91       	pop	r22
    2260:	5f 91       	pop	r21
    2262:	4f 91       	pop	r20
    2264:	3f 91       	pop	r19
    2266:	2f 91       	pop	r18
    2268:	0f 90       	pop	r0
    226a:	0f be       	out	0x3f, r0	; 63
    226c:	0f 90       	pop	r0
    226e:	1f 90       	pop	r1
    2270:	18 95       	reti

00002272 <__vector_11>:

void __vector_11 (void) __attribute__((signal));
void __vector_11 (void)
{
    2272:	1f 92       	push	r1
    2274:	0f 92       	push	r0
    2276:	0f b6       	in	r0, 0x3f	; 63
    2278:	0f 92       	push	r0
    227a:	11 24       	eor	r1, r1
    227c:	2f 93       	push	r18
    227e:	3f 93       	push	r19
    2280:	4f 93       	push	r20
    2282:	5f 93       	push	r21
    2284:	6f 93       	push	r22
    2286:	7f 93       	push	r23
    2288:	8f 93       	push	r24
    228a:	9f 93       	push	r25
    228c:	af 93       	push	r26
    228e:	bf 93       	push	r27
    2290:	ef 93       	push	r30
    2292:	ff 93       	push	r31
    2294:	df 93       	push	r29
    2296:	cf 93       	push	r28
    2298:	cd b7       	in	r28, 0x3d	; 61
    229a:	de b7       	in	r29, 0x3e	; 62
	if (Global_pvArrayFunction[TIMER0_OVF] != NULL)
    229c:	80 91 6a 01 	lds	r24, 0x016A
    22a0:	90 91 6b 01 	lds	r25, 0x016B
    22a4:	00 97       	sbiw	r24, 0x00	; 0
    22a6:	29 f0       	breq	.+10     	; 0x22b2 <__vector_11+0x40>
	{
		Global_pvArrayFunction[TIMER0_OVF]();
    22a8:	e0 91 6a 01 	lds	r30, 0x016A
    22ac:	f0 91 6b 01 	lds	r31, 0x016B
    22b0:	09 95       	icall
	}
	else
	{
		/*Do Nothing*/
	}
}
    22b2:	cf 91       	pop	r28
    22b4:	df 91       	pop	r29
    22b6:	ff 91       	pop	r31
    22b8:	ef 91       	pop	r30
    22ba:	bf 91       	pop	r27
    22bc:	af 91       	pop	r26
    22be:	9f 91       	pop	r25
    22c0:	8f 91       	pop	r24
    22c2:	7f 91       	pop	r23
    22c4:	6f 91       	pop	r22
    22c6:	5f 91       	pop	r21
    22c8:	4f 91       	pop	r20
    22ca:	3f 91       	pop	r19
    22cc:	2f 91       	pop	r18
    22ce:	0f 90       	pop	r0
    22d0:	0f be       	out	0x3f, r0	; 63
    22d2:	0f 90       	pop	r0
    22d4:	1f 90       	pop	r1
    22d6:	18 95       	reti

000022d8 <TIMERS_voidTimer1Init>:


/********************			TIMER1 Functions			*********************************/

void TIMERS_voidTimer1Init (void)
{
    22d8:	df 93       	push	r29
    22da:	cf 93       	push	r28
    22dc:	cd b7       	in	r28, 0x3d	; 61
    22de:	de b7       	in	r29, 0x3e	; 62
	/*Set mode of operation*/
	TCCR1 &= TIMER1_MODE_MASK;
    22e0:	ae e4       	ldi	r26, 0x4E	; 78
    22e2:	b0 e0       	ldi	r27, 0x00	; 0
    22e4:	ee e4       	ldi	r30, 0x4E	; 78
    22e6:	f0 e0       	ldi	r31, 0x00	; 0
    22e8:	80 81       	ld	r24, Z
    22ea:	91 81       	ldd	r25, Z+1	; 0x01
    22ec:	87 7e       	andi	r24, 0xE7	; 231
    22ee:	9c 7f       	andi	r25, 0xFC	; 252
    22f0:	11 96       	adiw	r26, 0x01	; 1
    22f2:	9c 93       	st	X, r25
    22f4:	8e 93       	st	-X, r24
	TCCR1 |= TIMER1_MODE;
    22f6:	ae e4       	ldi	r26, 0x4E	; 78
    22f8:	b0 e0       	ldi	r27, 0x00	; 0
    22fa:	ee e4       	ldi	r30, 0x4E	; 78
    22fc:	f0 e0       	ldi	r31, 0x00	; 0
    22fe:	80 81       	ld	r24, Z
    2300:	91 81       	ldd	r25, Z+1	; 0x01
    2302:	11 96       	adiw	r26, 0x01	; 1
    2304:	9c 93       	st	X, r25
    2306:	8e 93       	st	-X, r24
        #if TIMER1_OVF_INTERRUPT == TIMER1_OVF_INTERRUPT_ON
        	/*Enable OVF interrupt*/
        	SET_BIT(TIMSK, TIMSK_TOIE1);
        #elif TIMER1_OVF_INTERRUPT == TIMER1_OVF_INTERRUPT_OFF
        	/*Disable OVF interrupt*/
        	CLR_BIT(TIMSK, TIMSK_TOIE1);
    2308:	a9 e5       	ldi	r26, 0x59	; 89
    230a:	b0 e0       	ldi	r27, 0x00	; 0
    230c:	e9 e5       	ldi	r30, 0x59	; 89
    230e:	f0 e0       	ldi	r31, 0x00	; 0
    2310:	80 81       	ld	r24, Z
    2312:	8b 7f       	andi	r24, 0xFB	; 251
    2314:	8c 93       	st	X, r24
        #endif
	#else
		#error "Timer1_MODE Configuration Error"
	#endif
	/*Set Prescaler of the clock*/
	TCCR1B &= TIMERS_PRESCALER_MASK;
    2316:	ae e4       	ldi	r26, 0x4E	; 78
    2318:	b0 e0       	ldi	r27, 0x00	; 0
    231a:	ee e4       	ldi	r30, 0x4E	; 78
    231c:	f0 e0       	ldi	r31, 0x00	; 0
    231e:	80 81       	ld	r24, Z
    2320:	88 7f       	andi	r24, 0xF8	; 248
    2322:	8c 93       	st	X, r24
	TCCR1B |= TIMER1_PRESCALER;
    2324:	ae e4       	ldi	r26, 0x4E	; 78
    2326:	b0 e0       	ldi	r27, 0x00	; 0
    2328:	ee e4       	ldi	r30, 0x4E	; 78
    232a:	f0 e0       	ldi	r31, 0x00	; 0
    232c:	80 81       	ld	r24, Z
    232e:	82 60       	ori	r24, 0x02	; 2
    2330:	8c 93       	st	X, r24
}
    2332:	cf 91       	pop	r28
    2334:	df 91       	pop	r29
    2336:	08 95       	ret

00002338 <TIMERS_voidTimer1SetPreloadValue>:

void TIMERS_voidTimer1SetPreloadValue (u16 Copy_u16PreloadValue)
{
    2338:	df 93       	push	r29
    233a:	cf 93       	push	r28
    233c:	00 d0       	rcall	.+0      	; 0x233e <TIMERS_voidTimer1SetPreloadValue+0x6>
    233e:	cd b7       	in	r28, 0x3d	; 61
    2340:	de b7       	in	r29, 0x3e	; 62
    2342:	9a 83       	std	Y+2, r25	; 0x02
    2344:	89 83       	std	Y+1, r24	; 0x01
	TCNT1 = Copy_u16PreloadValue;
    2346:	ec e4       	ldi	r30, 0x4C	; 76
    2348:	f0 e0       	ldi	r31, 0x00	; 0
    234a:	89 81       	ldd	r24, Y+1	; 0x01
    234c:	9a 81       	ldd	r25, Y+2	; 0x02
    234e:	91 83       	std	Z+1, r25	; 0x01
    2350:	80 83       	st	Z, r24
}
    2352:	0f 90       	pop	r0
    2354:	0f 90       	pop	r0
    2356:	cf 91       	pop	r28
    2358:	df 91       	pop	r29
    235a:	08 95       	ret

0000235c <TIMERS_voidTimer1SetTopValue>:

void TIMERS_voidTimer1SetTopValue (u16 Copy_u16TopValue)
{
    235c:	df 93       	push	r29
    235e:	cf 93       	push	r28
    2360:	00 d0       	rcall	.+0      	; 0x2362 <TIMERS_voidTimer1SetTopValue+0x6>
    2362:	cd b7       	in	r28, 0x3d	; 61
    2364:	de b7       	in	r29, 0x3e	; 62
    2366:	9a 83       	std	Y+2, r25	; 0x02
    2368:	89 83       	std	Y+1, r24	; 0x01
	ICR1 = Copy_u16TopValue;
    236a:	e6 e4       	ldi	r30, 0x46	; 70
    236c:	f0 e0       	ldi	r31, 0x00	; 0
    236e:	89 81       	ldd	r24, Y+1	; 0x01
    2370:	9a 81       	ldd	r25, Y+2	; 0x02
    2372:	91 83       	std	Z+1, r25	; 0x01
    2374:	80 83       	st	Z, r24
}
    2376:	0f 90       	pop	r0
    2378:	0f 90       	pop	r0
    237a:	cf 91       	pop	r28
    237c:	df 91       	pop	r29
    237e:	08 95       	ret

00002380 <TIMERS_voidTimer1SetChannelACompareMatchValue>:

void TIMERS_voidTimer1SetChannelACompareMatchValue (u16 Copy_u16CompareMatchValue)
{
    2380:	df 93       	push	r29
    2382:	cf 93       	push	r28
    2384:	00 d0       	rcall	.+0      	; 0x2386 <TIMERS_voidTimer1SetChannelACompareMatchValue+0x6>
    2386:	cd b7       	in	r28, 0x3d	; 61
    2388:	de b7       	in	r29, 0x3e	; 62
    238a:	9a 83       	std	Y+2, r25	; 0x02
    238c:	89 83       	std	Y+1, r24	; 0x01
	OCR1A = Copy_u16CompareMatchValue;
    238e:	ea e5       	ldi	r30, 0x5A	; 90
    2390:	f0 e0       	ldi	r31, 0x00	; 0
    2392:	89 81       	ldd	r24, Y+1	; 0x01
    2394:	9a 81       	ldd	r25, Y+2	; 0x02
    2396:	91 83       	std	Z+1, r25	; 0x01
    2398:	80 83       	st	Z, r24
}
    239a:	0f 90       	pop	r0
    239c:	0f 90       	pop	r0
    239e:	cf 91       	pop	r28
    23a0:	df 91       	pop	r29
    23a2:	08 95       	ret

000023a4 <TIMERS_voidTimer1SetCTCAInterruptControl>:

void TIMERS_voidTimer1SetCTCAInterruptControl (u8 Copy_u8InterruptState)
{
    23a4:	df 93       	push	r29
    23a6:	cf 93       	push	r28
    23a8:	00 d0       	rcall	.+0      	; 0x23aa <TIMERS_voidTimer1SetCTCAInterruptControl+0x6>
    23aa:	0f 92       	push	r0
    23ac:	cd b7       	in	r28, 0x3d	; 61
    23ae:	de b7       	in	r29, 0x3e	; 62
    23b0:	89 83       	std	Y+1, r24	; 0x01
	switch(Copy_u8InterruptState)
    23b2:	89 81       	ldd	r24, Y+1	; 0x01
    23b4:	28 2f       	mov	r18, r24
    23b6:	30 e0       	ldi	r19, 0x00	; 0
    23b8:	3b 83       	std	Y+3, r19	; 0x03
    23ba:	2a 83       	std	Y+2, r18	; 0x02
    23bc:	8a 81       	ldd	r24, Y+2	; 0x02
    23be:	9b 81       	ldd	r25, Y+3	; 0x03
    23c0:	00 97       	sbiw	r24, 0x00	; 0
    23c2:	69 f0       	breq	.+26     	; 0x23de <TIMERS_voidTimer1SetCTCAInterruptControl+0x3a>
    23c4:	2a 81       	ldd	r18, Y+2	; 0x02
    23c6:	3b 81       	ldd	r19, Y+3	; 0x03
    23c8:	21 30       	cpi	r18, 0x01	; 1
    23ca:	31 05       	cpc	r19, r1
    23cc:	79 f4       	brne	.+30     	; 0x23ec <TIMERS_voidTimer1SetCTCAInterruptControl+0x48>
	{
		case TIMERS_ENABLE:
		{
			/*Enable CTC Interrupt for Channel A*/
			SET_BIT(TIMSK, TIMSK_OCIE1A);
    23ce:	a9 e5       	ldi	r26, 0x59	; 89
    23d0:	b0 e0       	ldi	r27, 0x00	; 0
    23d2:	e9 e5       	ldi	r30, 0x59	; 89
    23d4:	f0 e0       	ldi	r31, 0x00	; 0
    23d6:	80 81       	ld	r24, Z
    23d8:	80 61       	ori	r24, 0x10	; 16
    23da:	8c 93       	st	X, r24
    23dc:	07 c0       	rjmp	.+14     	; 0x23ec <TIMERS_voidTimer1SetCTCAInterruptControl+0x48>
			break;
		}
		case TIMERS_DISABLE:
		{
			/*Disable CTC Interrupt for Channel A*/
			CLR_BIT(TIMSK, TIMSK_OCIE1A);
    23de:	a9 e5       	ldi	r26, 0x59	; 89
    23e0:	b0 e0       	ldi	r27, 0x00	; 0
    23e2:	e9 e5       	ldi	r30, 0x59	; 89
    23e4:	f0 e0       	ldi	r31, 0x00	; 0
    23e6:	80 81       	ld	r24, Z
    23e8:	8f 7e       	andi	r24, 0xEF	; 239
    23ea:	8c 93       	st	X, r24
			break;
		}
	}
}
    23ec:	0f 90       	pop	r0
    23ee:	0f 90       	pop	r0
    23f0:	0f 90       	pop	r0
    23f2:	cf 91       	pop	r28
    23f4:	df 91       	pop	r29
    23f6:	08 95       	ret

000023f8 <TIMERS_voidTimer1SetChannelBCompareMatchValue>:

void TIMERS_voidTimer1SetChannelBCompareMatchValue (u16 Copy_u16CompareMatchValue)
{
    23f8:	df 93       	push	r29
    23fa:	cf 93       	push	r28
    23fc:	00 d0       	rcall	.+0      	; 0x23fe <TIMERS_voidTimer1SetChannelBCompareMatchValue+0x6>
    23fe:	cd b7       	in	r28, 0x3d	; 61
    2400:	de b7       	in	r29, 0x3e	; 62
    2402:	9a 83       	std	Y+2, r25	; 0x02
    2404:	89 83       	std	Y+1, r24	; 0x01
	OCR1B = Copy_u16CompareMatchValue;
    2406:	e8 e4       	ldi	r30, 0x48	; 72
    2408:	f0 e0       	ldi	r31, 0x00	; 0
    240a:	89 81       	ldd	r24, Y+1	; 0x01
    240c:	9a 81       	ldd	r25, Y+2	; 0x02
    240e:	91 83       	std	Z+1, r25	; 0x01
    2410:	80 83       	st	Z, r24
}
    2412:	0f 90       	pop	r0
    2414:	0f 90       	pop	r0
    2416:	cf 91       	pop	r28
    2418:	df 91       	pop	r29
    241a:	08 95       	ret

0000241c <TIMERS_voidTimer1SetCTCBInterruptControl>:

void TIMERS_voidTimer1SetCTCBInterruptControl (u8 Copy_u8InterruptState)
{
    241c:	df 93       	push	r29
    241e:	cf 93       	push	r28
    2420:	00 d0       	rcall	.+0      	; 0x2422 <TIMERS_voidTimer1SetCTCBInterruptControl+0x6>
    2422:	0f 92       	push	r0
    2424:	cd b7       	in	r28, 0x3d	; 61
    2426:	de b7       	in	r29, 0x3e	; 62
    2428:	89 83       	std	Y+1, r24	; 0x01
	switch(Copy_u8InterruptState)
    242a:	89 81       	ldd	r24, Y+1	; 0x01
    242c:	28 2f       	mov	r18, r24
    242e:	30 e0       	ldi	r19, 0x00	; 0
    2430:	3b 83       	std	Y+3, r19	; 0x03
    2432:	2a 83       	std	Y+2, r18	; 0x02
    2434:	8a 81       	ldd	r24, Y+2	; 0x02
    2436:	9b 81       	ldd	r25, Y+3	; 0x03
    2438:	00 97       	sbiw	r24, 0x00	; 0
    243a:	69 f0       	breq	.+26     	; 0x2456 <TIMERS_voidTimer1SetCTCBInterruptControl+0x3a>
    243c:	2a 81       	ldd	r18, Y+2	; 0x02
    243e:	3b 81       	ldd	r19, Y+3	; 0x03
    2440:	21 30       	cpi	r18, 0x01	; 1
    2442:	31 05       	cpc	r19, r1
    2444:	79 f4       	brne	.+30     	; 0x2464 <TIMERS_voidTimer1SetCTCBInterruptControl+0x48>
	{
		case TIMERS_ENABLE:
		{
			/*Enable CTC Interrupt for Channel B*/
			SET_BIT(TIMSK, TIMSK_OCIE1B);
    2446:	a9 e5       	ldi	r26, 0x59	; 89
    2448:	b0 e0       	ldi	r27, 0x00	; 0
    244a:	e9 e5       	ldi	r30, 0x59	; 89
    244c:	f0 e0       	ldi	r31, 0x00	; 0
    244e:	80 81       	ld	r24, Z
    2450:	88 60       	ori	r24, 0x08	; 8
    2452:	8c 93       	st	X, r24
    2454:	07 c0       	rjmp	.+14     	; 0x2464 <TIMERS_voidTimer1SetCTCBInterruptControl+0x48>
			break;
		}
		case TIMERS_DISABLE:
		{
			/*Disable CTC Interrupt for Channel B*/
			CLR_BIT(TIMSK, TIMSK_OCIE1B);
    2456:	a9 e5       	ldi	r26, 0x59	; 89
    2458:	b0 e0       	ldi	r27, 0x00	; 0
    245a:	e9 e5       	ldi	r30, 0x59	; 89
    245c:	f0 e0       	ldi	r31, 0x00	; 0
    245e:	80 81       	ld	r24, Z
    2460:	87 7f       	andi	r24, 0xF7	; 247
    2462:	8c 93       	st	X, r24
			break;
		}
	}
}
    2464:	0f 90       	pop	r0
    2466:	0f 90       	pop	r0
    2468:	0f 90       	pop	r0
    246a:	cf 91       	pop	r28
    246c:	df 91       	pop	r29
    246e:	08 95       	ret

00002470 <TIMERS_voidTimer1ICUSetSenseControl>:

void TIMERS_voidTimer1ICUSetSenseControl (u8 Copy_u8SenseControl)
{
    2470:	df 93       	push	r29
    2472:	cf 93       	push	r28
    2474:	00 d0       	rcall	.+0      	; 0x2476 <TIMERS_voidTimer1ICUSetSenseControl+0x6>
    2476:	0f 92       	push	r0
    2478:	cd b7       	in	r28, 0x3d	; 61
    247a:	de b7       	in	r29, 0x3e	; 62
    247c:	89 83       	std	Y+1, r24	; 0x01
	switch(Copy_u8SenseControl)
    247e:	89 81       	ldd	r24, Y+1	; 0x01
    2480:	28 2f       	mov	r18, r24
    2482:	30 e0       	ldi	r19, 0x00	; 0
    2484:	3b 83       	std	Y+3, r19	; 0x03
    2486:	2a 83       	std	Y+2, r18	; 0x02
    2488:	8a 81       	ldd	r24, Y+2	; 0x02
    248a:	9b 81       	ldd	r25, Y+3	; 0x03
    248c:	00 97       	sbiw	r24, 0x00	; 0
    248e:	31 f0       	breq	.+12     	; 0x249c <TIMERS_voidTimer1ICUSetSenseControl+0x2c>
    2490:	2a 81       	ldd	r18, Y+2	; 0x02
    2492:	3b 81       	ldd	r19, Y+3	; 0x03
    2494:	21 30       	cpi	r18, 0x01	; 1
    2496:	31 05       	cpc	r19, r1
    2498:	49 f0       	breq	.+18     	; 0x24ac <TIMERS_voidTimer1ICUSetSenseControl+0x3c>
    249a:	0f c0       	rjmp	.+30     	; 0x24ba <TIMERS_voidTimer1ICUSetSenseControl+0x4a>
	{
		case TIMERS_FALLING_EDGE:
		{
			/*Set Sense Signal To Be Falling Edge*/
			CLR_BIT(TCCR1B, TCCR1B_ICES1);
    249c:	ae e4       	ldi	r26, 0x4E	; 78
    249e:	b0 e0       	ldi	r27, 0x00	; 0
    24a0:	ee e4       	ldi	r30, 0x4E	; 78
    24a2:	f0 e0       	ldi	r31, 0x00	; 0
    24a4:	80 81       	ld	r24, Z
    24a6:	8f 7b       	andi	r24, 0xBF	; 191
    24a8:	8c 93       	st	X, r24
    24aa:	07 c0       	rjmp	.+14     	; 0x24ba <TIMERS_voidTimer1ICUSetSenseControl+0x4a>
			break;
		}
		case TIMERS_RISING_EDGE:
		{
			/*Set Sense Signal To Be Rising Edge*/
			SET_BIT(TCCR1B, TCCR1B_ICES1);
    24ac:	ae e4       	ldi	r26, 0x4E	; 78
    24ae:	b0 e0       	ldi	r27, 0x00	; 0
    24b0:	ee e4       	ldi	r30, 0x4E	; 78
    24b2:	f0 e0       	ldi	r31, 0x00	; 0
    24b4:	80 81       	ld	r24, Z
    24b6:	80 64       	ori	r24, 0x40	; 64
    24b8:	8c 93       	st	X, r24
			break;
		}
	}
}
    24ba:	0f 90       	pop	r0
    24bc:	0f 90       	pop	r0
    24be:	0f 90       	pop	r0
    24c0:	cf 91       	pop	r28
    24c2:	df 91       	pop	r29
    24c4:	08 95       	ret

000024c6 <TIMERS_u16Timer1ICUReadInputCapture>:

u16 TIMERS_u16Timer1ICUReadInputCapture (void)
{
    24c6:	df 93       	push	r29
    24c8:	cf 93       	push	r28
    24ca:	cd b7       	in	r28, 0x3d	; 61
    24cc:	de b7       	in	r29, 0x3e	; 62
	/*Return Input Capture Register*/
	return ICR1;
    24ce:	e6 e4       	ldi	r30, 0x46	; 70
    24d0:	f0 e0       	ldi	r31, 0x00	; 0
    24d2:	80 81       	ld	r24, Z
    24d4:	91 81       	ldd	r25, Z+1	; 0x01
}
    24d6:	cf 91       	pop	r28
    24d8:	df 91       	pop	r29
    24da:	08 95       	ret

000024dc <TIMERS_voidTimer1ICUInterruptControl>:

void TIMERS_voidTimer1ICUInterruptControl (u8 Copy_u8InterruptState)
{
    24dc:	df 93       	push	r29
    24de:	cf 93       	push	r28
    24e0:	00 d0       	rcall	.+0      	; 0x24e2 <TIMERS_voidTimer1ICUInterruptControl+0x6>
    24e2:	0f 92       	push	r0
    24e4:	cd b7       	in	r28, 0x3d	; 61
    24e6:	de b7       	in	r29, 0x3e	; 62
    24e8:	89 83       	std	Y+1, r24	; 0x01
	switch(Copy_u8InterruptState)
    24ea:	89 81       	ldd	r24, Y+1	; 0x01
    24ec:	28 2f       	mov	r18, r24
    24ee:	30 e0       	ldi	r19, 0x00	; 0
    24f0:	3b 83       	std	Y+3, r19	; 0x03
    24f2:	2a 83       	std	Y+2, r18	; 0x02
    24f4:	8a 81       	ldd	r24, Y+2	; 0x02
    24f6:	9b 81       	ldd	r25, Y+3	; 0x03
    24f8:	00 97       	sbiw	r24, 0x00	; 0
    24fa:	69 f0       	breq	.+26     	; 0x2516 <TIMERS_voidTimer1ICUInterruptControl+0x3a>
    24fc:	2a 81       	ldd	r18, Y+2	; 0x02
    24fe:	3b 81       	ldd	r19, Y+3	; 0x03
    2500:	21 30       	cpi	r18, 0x01	; 1
    2502:	31 05       	cpc	r19, r1
    2504:	79 f4       	brne	.+30     	; 0x2524 <TIMERS_voidTimer1ICUInterruptControl+0x48>
	{
		case TIMERS_ENABLE:
		{
			/*Enable ICU Interrupt*/
			SET_BIT(TIMSK, TIMSK_TICIE1);
    2506:	a9 e5       	ldi	r26, 0x59	; 89
    2508:	b0 e0       	ldi	r27, 0x00	; 0
    250a:	e9 e5       	ldi	r30, 0x59	; 89
    250c:	f0 e0       	ldi	r31, 0x00	; 0
    250e:	80 81       	ld	r24, Z
    2510:	80 62       	ori	r24, 0x20	; 32
    2512:	8c 93       	st	X, r24
    2514:	07 c0       	rjmp	.+14     	; 0x2524 <TIMERS_voidTimer1ICUInterruptControl+0x48>
		break;
		}
		case TIMERS_DISABLE:
		{
			/*Disable ICU Interrupt*/
			CLR_BIT(TIMSK, TIMSK_TICIE1);
    2516:	a9 e5       	ldi	r26, 0x59	; 89
    2518:	b0 e0       	ldi	r27, 0x00	; 0
    251a:	e9 e5       	ldi	r30, 0x59	; 89
    251c:	f0 e0       	ldi	r31, 0x00	; 0
    251e:	80 81       	ld	r24, Z
    2520:	8f 7d       	andi	r24, 0xDF	; 223
    2522:	8c 93       	st	X, r24
		break;
		}
	}
}
    2524:	0f 90       	pop	r0
    2526:	0f 90       	pop	r0
    2528:	0f 90       	pop	r0
    252a:	cf 91       	pop	r28
    252c:	df 91       	pop	r29
    252e:	08 95       	ret

00002530 <TIMERS_voidTimer1ICUSetCallbackFunction>:

void TIMERS_voidTimer1ICUSetCallbackFunction (void (*Copy_pvCTCFunction) (void))
{
    2530:	df 93       	push	r29
    2532:	cf 93       	push	r28
    2534:	00 d0       	rcall	.+0      	; 0x2536 <TIMERS_voidTimer1ICUSetCallbackFunction+0x6>
    2536:	cd b7       	in	r28, 0x3d	; 61
    2538:	de b7       	in	r29, 0x3e	; 62
    253a:	9a 83       	std	Y+2, r25	; 0x02
    253c:	89 83       	std	Y+1, r24	; 0x01
	Global_pvArrayFunction[TIMER1_ICU] = Copy_pvCTCFunction;
    253e:	89 81       	ldd	r24, Y+1	; 0x01
    2540:	9a 81       	ldd	r25, Y+2	; 0x02
    2542:	90 93 6d 01 	sts	0x016D, r25
    2546:	80 93 6c 01 	sts	0x016C, r24
}
    254a:	0f 90       	pop	r0
    254c:	0f 90       	pop	r0
    254e:	cf 91       	pop	r28
    2550:	df 91       	pop	r29
    2552:	08 95       	ret

00002554 <TIMERS_voidTimer1CTCASetCallbackFunction>:

void TIMERS_voidTimer1CTCASetCallbackFunction (void (*Copy_pvCTCFunction) (void))
{
    2554:	df 93       	push	r29
    2556:	cf 93       	push	r28
    2558:	00 d0       	rcall	.+0      	; 0x255a <TIMERS_voidTimer1CTCASetCallbackFunction+0x6>
    255a:	cd b7       	in	r28, 0x3d	; 61
    255c:	de b7       	in	r29, 0x3e	; 62
    255e:	9a 83       	std	Y+2, r25	; 0x02
    2560:	89 83       	std	Y+1, r24	; 0x01
	Global_pvArrayFunction[TIMER1_CTCA] = Copy_pvCTCFunction;
    2562:	89 81       	ldd	r24, Y+1	; 0x01
    2564:	9a 81       	ldd	r25, Y+2	; 0x02
    2566:	90 93 6f 01 	sts	0x016F, r25
    256a:	80 93 6e 01 	sts	0x016E, r24
}
    256e:	0f 90       	pop	r0
    2570:	0f 90       	pop	r0
    2572:	cf 91       	pop	r28
    2574:	df 91       	pop	r29
    2576:	08 95       	ret

00002578 <TIMERS_voidTimer1CTCBSetCallbackFunction>:

void TIMERS_voidTimer1CTCBSetCallbackFunction (void (*Copy_pvCTCFunction) (void))
{
    2578:	df 93       	push	r29
    257a:	cf 93       	push	r28
    257c:	00 d0       	rcall	.+0      	; 0x257e <TIMERS_voidTimer1CTCBSetCallbackFunction+0x6>
    257e:	cd b7       	in	r28, 0x3d	; 61
    2580:	de b7       	in	r29, 0x3e	; 62
    2582:	9a 83       	std	Y+2, r25	; 0x02
    2584:	89 83       	std	Y+1, r24	; 0x01
	Global_pvArrayFunction[TIMER1_CTCB] = Copy_pvCTCFunction;
    2586:	89 81       	ldd	r24, Y+1	; 0x01
    2588:	9a 81       	ldd	r25, Y+2	; 0x02
    258a:	90 93 71 01 	sts	0x0171, r25
    258e:	80 93 70 01 	sts	0x0170, r24
}
    2592:	0f 90       	pop	r0
    2594:	0f 90       	pop	r0
    2596:	cf 91       	pop	r28
    2598:	df 91       	pop	r29
    259a:	08 95       	ret

0000259c <TIMERS_voidTimer1OVFSetCallbackFunction>:

void TIMERS_voidTimer1OVFSetCallbackFunction (void (*Copy_pvCTCFunction) (void))
{
    259c:	df 93       	push	r29
    259e:	cf 93       	push	r28
    25a0:	00 d0       	rcall	.+0      	; 0x25a2 <TIMERS_voidTimer1OVFSetCallbackFunction+0x6>
    25a2:	cd b7       	in	r28, 0x3d	; 61
    25a4:	de b7       	in	r29, 0x3e	; 62
    25a6:	9a 83       	std	Y+2, r25	; 0x02
    25a8:	89 83       	std	Y+1, r24	; 0x01
	Global_pvArrayFunction[TIMER1_OVF] = Copy_pvCTCFunction;
    25aa:	89 81       	ldd	r24, Y+1	; 0x01
    25ac:	9a 81       	ldd	r25, Y+2	; 0x02
    25ae:	90 93 73 01 	sts	0x0173, r25
    25b2:	80 93 72 01 	sts	0x0172, r24
}
    25b6:	0f 90       	pop	r0
    25b8:	0f 90       	pop	r0
    25ba:	cf 91       	pop	r28
    25bc:	df 91       	pop	r29
    25be:	08 95       	ret

000025c0 <__vector_6>:

void __vector_6 (void) __attribute__((signal));
void __vector_6 (void)
{
    25c0:	1f 92       	push	r1
    25c2:	0f 92       	push	r0
    25c4:	0f b6       	in	r0, 0x3f	; 63
    25c6:	0f 92       	push	r0
    25c8:	11 24       	eor	r1, r1
    25ca:	2f 93       	push	r18
    25cc:	3f 93       	push	r19
    25ce:	4f 93       	push	r20
    25d0:	5f 93       	push	r21
    25d2:	6f 93       	push	r22
    25d4:	7f 93       	push	r23
    25d6:	8f 93       	push	r24
    25d8:	9f 93       	push	r25
    25da:	af 93       	push	r26
    25dc:	bf 93       	push	r27
    25de:	ef 93       	push	r30
    25e0:	ff 93       	push	r31
    25e2:	df 93       	push	r29
    25e4:	cf 93       	push	r28
    25e6:	cd b7       	in	r28, 0x3d	; 61
    25e8:	de b7       	in	r29, 0x3e	; 62
	if (Global_pvArrayFunction[TIMER1_ICU] != NULL)
    25ea:	80 91 6c 01 	lds	r24, 0x016C
    25ee:	90 91 6d 01 	lds	r25, 0x016D
    25f2:	00 97       	sbiw	r24, 0x00	; 0
    25f4:	29 f0       	breq	.+10     	; 0x2600 <__vector_6+0x40>
	{
		Global_pvArrayFunction[TIMER1_ICU]();
    25f6:	e0 91 6c 01 	lds	r30, 0x016C
    25fa:	f0 91 6d 01 	lds	r31, 0x016D
    25fe:	09 95       	icall
	}
	else
	{
		/*Do Nothing*/
	}
}
    2600:	cf 91       	pop	r28
    2602:	df 91       	pop	r29
    2604:	ff 91       	pop	r31
    2606:	ef 91       	pop	r30
    2608:	bf 91       	pop	r27
    260a:	af 91       	pop	r26
    260c:	9f 91       	pop	r25
    260e:	8f 91       	pop	r24
    2610:	7f 91       	pop	r23
    2612:	6f 91       	pop	r22
    2614:	5f 91       	pop	r21
    2616:	4f 91       	pop	r20
    2618:	3f 91       	pop	r19
    261a:	2f 91       	pop	r18
    261c:	0f 90       	pop	r0
    261e:	0f be       	out	0x3f, r0	; 63
    2620:	0f 90       	pop	r0
    2622:	1f 90       	pop	r1
    2624:	18 95       	reti

00002626 <__vector_7>:

void __vector_7 (void) __attribute__((signal));
void __vector_7 (void)
{
    2626:	1f 92       	push	r1
    2628:	0f 92       	push	r0
    262a:	0f b6       	in	r0, 0x3f	; 63
    262c:	0f 92       	push	r0
    262e:	11 24       	eor	r1, r1
    2630:	2f 93       	push	r18
    2632:	3f 93       	push	r19
    2634:	4f 93       	push	r20
    2636:	5f 93       	push	r21
    2638:	6f 93       	push	r22
    263a:	7f 93       	push	r23
    263c:	8f 93       	push	r24
    263e:	9f 93       	push	r25
    2640:	af 93       	push	r26
    2642:	bf 93       	push	r27
    2644:	ef 93       	push	r30
    2646:	ff 93       	push	r31
    2648:	df 93       	push	r29
    264a:	cf 93       	push	r28
    264c:	cd b7       	in	r28, 0x3d	; 61
    264e:	de b7       	in	r29, 0x3e	; 62
	if (Global_pvArrayFunction[TIMER1_CTCA] != NULL)
    2650:	80 91 6e 01 	lds	r24, 0x016E
    2654:	90 91 6f 01 	lds	r25, 0x016F
    2658:	00 97       	sbiw	r24, 0x00	; 0
    265a:	29 f0       	breq	.+10     	; 0x2666 <__vector_7+0x40>
	{
		Global_pvArrayFunction[TIMER1_CTCA]();
    265c:	e0 91 6e 01 	lds	r30, 0x016E
    2660:	f0 91 6f 01 	lds	r31, 0x016F
    2664:	09 95       	icall
	}
	else
	{
		/*Do Nothing*/
	}
}
    2666:	cf 91       	pop	r28
    2668:	df 91       	pop	r29
    266a:	ff 91       	pop	r31
    266c:	ef 91       	pop	r30
    266e:	bf 91       	pop	r27
    2670:	af 91       	pop	r26
    2672:	9f 91       	pop	r25
    2674:	8f 91       	pop	r24
    2676:	7f 91       	pop	r23
    2678:	6f 91       	pop	r22
    267a:	5f 91       	pop	r21
    267c:	4f 91       	pop	r20
    267e:	3f 91       	pop	r19
    2680:	2f 91       	pop	r18
    2682:	0f 90       	pop	r0
    2684:	0f be       	out	0x3f, r0	; 63
    2686:	0f 90       	pop	r0
    2688:	1f 90       	pop	r1
    268a:	18 95       	reti

0000268c <__vector_8>:

void __vector_8 (void) __attribute__((signal));
void __vector_8 (void)
{
    268c:	1f 92       	push	r1
    268e:	0f 92       	push	r0
    2690:	0f b6       	in	r0, 0x3f	; 63
    2692:	0f 92       	push	r0
    2694:	11 24       	eor	r1, r1
    2696:	2f 93       	push	r18
    2698:	3f 93       	push	r19
    269a:	4f 93       	push	r20
    269c:	5f 93       	push	r21
    269e:	6f 93       	push	r22
    26a0:	7f 93       	push	r23
    26a2:	8f 93       	push	r24
    26a4:	9f 93       	push	r25
    26a6:	af 93       	push	r26
    26a8:	bf 93       	push	r27
    26aa:	ef 93       	push	r30
    26ac:	ff 93       	push	r31
    26ae:	df 93       	push	r29
    26b0:	cf 93       	push	r28
    26b2:	cd b7       	in	r28, 0x3d	; 61
    26b4:	de b7       	in	r29, 0x3e	; 62
	if (Global_pvArrayFunction[TIMER1_CTCB] != NULL)
    26b6:	80 91 70 01 	lds	r24, 0x0170
    26ba:	90 91 71 01 	lds	r25, 0x0171
    26be:	00 97       	sbiw	r24, 0x00	; 0
    26c0:	29 f0       	breq	.+10     	; 0x26cc <__vector_8+0x40>
	{
		Global_pvArrayFunction[TIMER1_CTCB]();
    26c2:	e0 91 70 01 	lds	r30, 0x0170
    26c6:	f0 91 71 01 	lds	r31, 0x0171
    26ca:	09 95       	icall
	}
	else
	{
		/*Do Nothing*/
	}
}
    26cc:	cf 91       	pop	r28
    26ce:	df 91       	pop	r29
    26d0:	ff 91       	pop	r31
    26d2:	ef 91       	pop	r30
    26d4:	bf 91       	pop	r27
    26d6:	af 91       	pop	r26
    26d8:	9f 91       	pop	r25
    26da:	8f 91       	pop	r24
    26dc:	7f 91       	pop	r23
    26de:	6f 91       	pop	r22
    26e0:	5f 91       	pop	r21
    26e2:	4f 91       	pop	r20
    26e4:	3f 91       	pop	r19
    26e6:	2f 91       	pop	r18
    26e8:	0f 90       	pop	r0
    26ea:	0f be       	out	0x3f, r0	; 63
    26ec:	0f 90       	pop	r0
    26ee:	1f 90       	pop	r1
    26f0:	18 95       	reti

000026f2 <__vector_9>:

void __vector_9 (void) __attribute__((signal));
void __vector_9 (void)
{
    26f2:	1f 92       	push	r1
    26f4:	0f 92       	push	r0
    26f6:	0f b6       	in	r0, 0x3f	; 63
    26f8:	0f 92       	push	r0
    26fa:	11 24       	eor	r1, r1
    26fc:	2f 93       	push	r18
    26fe:	3f 93       	push	r19
    2700:	4f 93       	push	r20
    2702:	5f 93       	push	r21
    2704:	6f 93       	push	r22
    2706:	7f 93       	push	r23
    2708:	8f 93       	push	r24
    270a:	9f 93       	push	r25
    270c:	af 93       	push	r26
    270e:	bf 93       	push	r27
    2710:	ef 93       	push	r30
    2712:	ff 93       	push	r31
    2714:	df 93       	push	r29
    2716:	cf 93       	push	r28
    2718:	cd b7       	in	r28, 0x3d	; 61
    271a:	de b7       	in	r29, 0x3e	; 62
	if (Global_pvArrayFunction[TIMER1_OVF] != NULL)
    271c:	80 91 72 01 	lds	r24, 0x0172
    2720:	90 91 73 01 	lds	r25, 0x0173
    2724:	00 97       	sbiw	r24, 0x00	; 0
    2726:	29 f0       	breq	.+10     	; 0x2732 <__vector_9+0x40>
	{
		Global_pvArrayFunction[TIMER1_OVF]();
    2728:	e0 91 72 01 	lds	r30, 0x0172
    272c:	f0 91 73 01 	lds	r31, 0x0173
    2730:	09 95       	icall
	}
	else
	{
		/*Do Nothing*/
	}
}
    2732:	cf 91       	pop	r28
    2734:	df 91       	pop	r29
    2736:	ff 91       	pop	r31
    2738:	ef 91       	pop	r30
    273a:	bf 91       	pop	r27
    273c:	af 91       	pop	r26
    273e:	9f 91       	pop	r25
    2740:	8f 91       	pop	r24
    2742:	7f 91       	pop	r23
    2744:	6f 91       	pop	r22
    2746:	5f 91       	pop	r21
    2748:	4f 91       	pop	r20
    274a:	3f 91       	pop	r19
    274c:	2f 91       	pop	r18
    274e:	0f 90       	pop	r0
    2750:	0f be       	out	0x3f, r0	; 63
    2752:	0f 90       	pop	r0
    2754:	1f 90       	pop	r1
    2756:	18 95       	reti

00002758 <TIMERS_voidTimer2Init>:


/********************			TIMER2 Functions			*********************************/

void TIMERS_voidTimer2Init (void)
{
    2758:	df 93       	push	r29
    275a:	cf 93       	push	r28
    275c:	cd b7       	in	r28, 0x3d	; 61
    275e:	de b7       	in	r29, 0x3e	; 62
	#if TIMER2_MODE == TIMER2_OVF_MODE
		/*Set OVF mode*/
		CLR_BIT(TCCR2, TCCR2_WGM20);
    2760:	a5 e4       	ldi	r26, 0x45	; 69
    2762:	b0 e0       	ldi	r27, 0x00	; 0
    2764:	e5 e4       	ldi	r30, 0x45	; 69
    2766:	f0 e0       	ldi	r31, 0x00	; 0
    2768:	80 81       	ld	r24, Z
    276a:	8f 7b       	andi	r24, 0xBF	; 191
    276c:	8c 93       	st	X, r24
		CLR_BIT(TCCR2, TCCR2_WGM21);
    276e:	a5 e4       	ldi	r26, 0x45	; 69
    2770:	b0 e0       	ldi	r27, 0x00	; 0
    2772:	e5 e4       	ldi	r30, 0x45	; 69
    2774:	f0 e0       	ldi	r31, 0x00	; 0
    2776:	80 81       	ld	r24, Z
    2778:	87 7f       	andi	r24, 0xF7	; 247
    277a:	8c 93       	st	X, r24
		/*Timer2 Interrupt mode*/
        #if TIMER2_OVF_INTERRUPT == TIMER2_OVF_INTERRUPT_ON
        	/*Enable OVF interrupt*/
        	SET_BIT(TIMSK, TIMSK_TOIE2);
    277c:	a9 e5       	ldi	r26, 0x59	; 89
    277e:	b0 e0       	ldi	r27, 0x00	; 0
    2780:	e9 e5       	ldi	r30, 0x59	; 89
    2782:	f0 e0       	ldi	r31, 0x00	; 0
    2784:	80 81       	ld	r24, Z
    2786:	80 64       	ori	r24, 0x40	; 64
    2788:	8c 93       	st	X, r24
	#else
		#error "Timer2_MODE Configuration Error"
	#endif

	/*Set Prescaler of the clock*/
	TCCR2 &= TIMERS_PRESCALER_MASK;
    278a:	a5 e4       	ldi	r26, 0x45	; 69
    278c:	b0 e0       	ldi	r27, 0x00	; 0
    278e:	e5 e4       	ldi	r30, 0x45	; 69
    2790:	f0 e0       	ldi	r31, 0x00	; 0
    2792:	80 81       	ld	r24, Z
    2794:	88 7f       	andi	r24, 0xF8	; 248
    2796:	8c 93       	st	X, r24
	TCCR2 |= TIMER2_PRESCALER;
    2798:	a5 e4       	ldi	r26, 0x45	; 69
    279a:	b0 e0       	ldi	r27, 0x00	; 0
    279c:	e5 e4       	ldi	r30, 0x45	; 69
    279e:	f0 e0       	ldi	r31, 0x00	; 0
    27a0:	80 81       	ld	r24, Z
    27a2:	82 60       	ori	r24, 0x02	; 2
    27a4:	8c 93       	st	X, r24
}
    27a6:	cf 91       	pop	r28
    27a8:	df 91       	pop	r29
    27aa:	08 95       	ret

000027ac <TIMERS_voidTimer2SetCompareMatchValue>:

void TIMERS_voidTimer2SetCompareMatchValue (u8 Copy_u8CompareMatchValue)
{
    27ac:	df 93       	push	r29
    27ae:	cf 93       	push	r28
    27b0:	0f 92       	push	r0
    27b2:	cd b7       	in	r28, 0x3d	; 61
    27b4:	de b7       	in	r29, 0x3e	; 62
    27b6:	89 83       	std	Y+1, r24	; 0x01
	OCR2 = Copy_u8CompareMatchValue;
    27b8:	e3 e4       	ldi	r30, 0x43	; 67
    27ba:	f0 e0       	ldi	r31, 0x00	; 0
    27bc:	89 81       	ldd	r24, Y+1	; 0x01
    27be:	80 83       	st	Z, r24
}
    27c0:	0f 90       	pop	r0
    27c2:	cf 91       	pop	r28
    27c4:	df 91       	pop	r29
    27c6:	08 95       	ret

000027c8 <TIMERS_voidTimer2SetPreloadValue>:

void TIMERS_voidTimer2SetPreloadValue (u8 Copy_u8PreloadValue)
{
    27c8:	df 93       	push	r29
    27ca:	cf 93       	push	r28
    27cc:	0f 92       	push	r0
    27ce:	cd b7       	in	r28, 0x3d	; 61
    27d0:	de b7       	in	r29, 0x3e	; 62
    27d2:	89 83       	std	Y+1, r24	; 0x01
	TCNT2 = Copy_u8PreloadValue;
    27d4:	e4 e4       	ldi	r30, 0x44	; 68
    27d6:	f0 e0       	ldi	r31, 0x00	; 0
    27d8:	89 81       	ldd	r24, Y+1	; 0x01
    27da:	80 83       	st	Z, r24
}
    27dc:	0f 90       	pop	r0
    27de:	cf 91       	pop	r28
    27e0:	df 91       	pop	r29
    27e2:	08 95       	ret

000027e4 <TIMERS_voidTimer2CTCSetCallbackFunction>:

void TIMERS_voidTimer2CTCSetCallbackFunction (void (*Copy_pvCTCFunction) (void))
{
    27e4:	df 93       	push	r29
    27e6:	cf 93       	push	r28
    27e8:	00 d0       	rcall	.+0      	; 0x27ea <TIMERS_voidTimer2CTCSetCallbackFunction+0x6>
    27ea:	cd b7       	in	r28, 0x3d	; 61
    27ec:	de b7       	in	r29, 0x3e	; 62
    27ee:	9a 83       	std	Y+2, r25	; 0x02
    27f0:	89 83       	std	Y+1, r24	; 0x01
	Global_pvArrayFunction[TIMER2_CTC] = Copy_pvCTCFunction;
    27f2:	89 81       	ldd	r24, Y+1	; 0x01
    27f4:	9a 81       	ldd	r25, Y+2	; 0x02
    27f6:	90 93 75 01 	sts	0x0175, r25
    27fa:	80 93 74 01 	sts	0x0174, r24
}
    27fe:	0f 90       	pop	r0
    2800:	0f 90       	pop	r0
    2802:	cf 91       	pop	r28
    2804:	df 91       	pop	r29
    2806:	08 95       	ret

00002808 <TIMERS_voidTimer2OVFSetCallbackFunction>:

void TIMERS_voidTimer2OVFSetCallbackFunction (void (*Copy_pvCTCFunction) (void))
{
    2808:	df 93       	push	r29
    280a:	cf 93       	push	r28
    280c:	00 d0       	rcall	.+0      	; 0x280e <TIMERS_voidTimer2OVFSetCallbackFunction+0x6>
    280e:	cd b7       	in	r28, 0x3d	; 61
    2810:	de b7       	in	r29, 0x3e	; 62
    2812:	9a 83       	std	Y+2, r25	; 0x02
    2814:	89 83       	std	Y+1, r24	; 0x01
	Global_pvArrayFunction[TIMER2_OVF] = Copy_pvCTCFunction;
    2816:	89 81       	ldd	r24, Y+1	; 0x01
    2818:	9a 81       	ldd	r25, Y+2	; 0x02
    281a:	90 93 77 01 	sts	0x0177, r25
    281e:	80 93 76 01 	sts	0x0176, r24
}
    2822:	0f 90       	pop	r0
    2824:	0f 90       	pop	r0
    2826:	cf 91       	pop	r28
    2828:	df 91       	pop	r29
    282a:	08 95       	ret

0000282c <__vector_4>:

void __vector_4 (void) __attribute__((signal));
void __vector_4 (void)
{
    282c:	1f 92       	push	r1
    282e:	0f 92       	push	r0
    2830:	0f b6       	in	r0, 0x3f	; 63
    2832:	0f 92       	push	r0
    2834:	11 24       	eor	r1, r1
    2836:	2f 93       	push	r18
    2838:	3f 93       	push	r19
    283a:	4f 93       	push	r20
    283c:	5f 93       	push	r21
    283e:	6f 93       	push	r22
    2840:	7f 93       	push	r23
    2842:	8f 93       	push	r24
    2844:	9f 93       	push	r25
    2846:	af 93       	push	r26
    2848:	bf 93       	push	r27
    284a:	ef 93       	push	r30
    284c:	ff 93       	push	r31
    284e:	df 93       	push	r29
    2850:	cf 93       	push	r28
    2852:	cd b7       	in	r28, 0x3d	; 61
    2854:	de b7       	in	r29, 0x3e	; 62
	if (Global_pvArrayFunction[TIMER2_CTC] != NULL)
    2856:	80 91 74 01 	lds	r24, 0x0174
    285a:	90 91 75 01 	lds	r25, 0x0175
    285e:	00 97       	sbiw	r24, 0x00	; 0
    2860:	29 f0       	breq	.+10     	; 0x286c <__vector_4+0x40>
	{
		Global_pvArrayFunction[TIMER2_CTC]();
    2862:	e0 91 74 01 	lds	r30, 0x0174
    2866:	f0 91 75 01 	lds	r31, 0x0175
    286a:	09 95       	icall
	}
	else
	{
		/*Do Nothing*/
	}
}
    286c:	cf 91       	pop	r28
    286e:	df 91       	pop	r29
    2870:	ff 91       	pop	r31
    2872:	ef 91       	pop	r30
    2874:	bf 91       	pop	r27
    2876:	af 91       	pop	r26
    2878:	9f 91       	pop	r25
    287a:	8f 91       	pop	r24
    287c:	7f 91       	pop	r23
    287e:	6f 91       	pop	r22
    2880:	5f 91       	pop	r21
    2882:	4f 91       	pop	r20
    2884:	3f 91       	pop	r19
    2886:	2f 91       	pop	r18
    2888:	0f 90       	pop	r0
    288a:	0f be       	out	0x3f, r0	; 63
    288c:	0f 90       	pop	r0
    288e:	1f 90       	pop	r1
    2890:	18 95       	reti

00002892 <__vector_5>:

void __vector_5 (void) __attribute__((signal));
void __vector_5 (void)
{
    2892:	1f 92       	push	r1
    2894:	0f 92       	push	r0
    2896:	0f b6       	in	r0, 0x3f	; 63
    2898:	0f 92       	push	r0
    289a:	11 24       	eor	r1, r1
    289c:	2f 93       	push	r18
    289e:	3f 93       	push	r19
    28a0:	4f 93       	push	r20
    28a2:	5f 93       	push	r21
    28a4:	6f 93       	push	r22
    28a6:	7f 93       	push	r23
    28a8:	8f 93       	push	r24
    28aa:	9f 93       	push	r25
    28ac:	af 93       	push	r26
    28ae:	bf 93       	push	r27
    28b0:	ef 93       	push	r30
    28b2:	ff 93       	push	r31
    28b4:	df 93       	push	r29
    28b6:	cf 93       	push	r28
    28b8:	cd b7       	in	r28, 0x3d	; 61
    28ba:	de b7       	in	r29, 0x3e	; 62
	if (Global_pvArrayFunction[TIMER2_OVF] != NULL)
    28bc:	80 91 76 01 	lds	r24, 0x0176
    28c0:	90 91 77 01 	lds	r25, 0x0177
    28c4:	00 97       	sbiw	r24, 0x00	; 0
    28c6:	29 f0       	breq	.+10     	; 0x28d2 <__vector_5+0x40>
	{
		Global_pvArrayFunction[TIMER2_OVF]();
    28c8:	e0 91 76 01 	lds	r30, 0x0176
    28cc:	f0 91 77 01 	lds	r31, 0x0177
    28d0:	09 95       	icall
	}
	else
	{
		/*Do Nothing*/
	}
}
    28d2:	cf 91       	pop	r28
    28d4:	df 91       	pop	r29
    28d6:	ff 91       	pop	r31
    28d8:	ef 91       	pop	r30
    28da:	bf 91       	pop	r27
    28dc:	af 91       	pop	r26
    28de:	9f 91       	pop	r25
    28e0:	8f 91       	pop	r24
    28e2:	7f 91       	pop	r23
    28e4:	6f 91       	pop	r22
    28e6:	5f 91       	pop	r21
    28e8:	4f 91       	pop	r20
    28ea:	3f 91       	pop	r19
    28ec:	2f 91       	pop	r18
    28ee:	0f 90       	pop	r0
    28f0:	0f be       	out	0x3f, r0	; 63
    28f2:	0f 90       	pop	r0
    28f4:	1f 90       	pop	r1
    28f6:	18 95       	reti

000028f8 <GIE_voidEnableGlobalInterrupt>:
#include "GIE_interface.h"
#include "GIE_private.h"
#include "GIE_config.h"

void GIE_voidEnableGlobalInterrupt(void)
{
    28f8:	df 93       	push	r29
    28fa:	cf 93       	push	r28
    28fc:	cd b7       	in	r28, 0x3d	; 61
    28fe:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(SREG, SREG_I);
    2900:	af e5       	ldi	r26, 0x5F	; 95
    2902:	b0 e0       	ldi	r27, 0x00	; 0
    2904:	ef e5       	ldi	r30, 0x5F	; 95
    2906:	f0 e0       	ldi	r31, 0x00	; 0
    2908:	80 81       	ld	r24, Z
    290a:	80 68       	ori	r24, 0x80	; 128
    290c:	8c 93       	st	X, r24
}
    290e:	cf 91       	pop	r28
    2910:	df 91       	pop	r29
    2912:	08 95       	ret

00002914 <GIE_voidDisableGlobalInterrupt>:

void GIE_voidDisableGlobalInterrupt(void)
{
    2914:	df 93       	push	r29
    2916:	cf 93       	push	r28
    2918:	cd b7       	in	r28, 0x3d	; 61
    291a:	de b7       	in	r29, 0x3e	; 62
	CLR_BIT(SREG, SREG_I);
    291c:	af e5       	ldi	r26, 0x5F	; 95
    291e:	b0 e0       	ldi	r27, 0x00	; 0
    2920:	ef e5       	ldi	r30, 0x5F	; 95
    2922:	f0 e0       	ldi	r31, 0x00	; 0
    2924:	80 81       	ld	r24, Z
    2926:	8f 77       	andi	r24, 0x7F	; 127
    2928:	8c 93       	st	X, r24
}
    292a:	cf 91       	pop	r28
    292c:	df 91       	pop	r29
    292e:	08 95       	ret

00002930 <EXTI_voidInit>:
static void (*Global_pvInt1NotifcationFunction)(void) = NULL;
static void (*Global_pvInt2NotifcationFunction)(void) = NULL;


void EXTI_voidInit (void)
{
    2930:	df 93       	push	r29
    2932:	cf 93       	push	r28
    2934:	cd b7       	in	r28, 0x3d	; 61
    2936:	de b7       	in	r29, 0x3e	; 62
	#if	EXTI_INT0_ENALBE == ENABLE
		SET_BIT(GICR, GICR_INT0);
    2938:	ab e5       	ldi	r26, 0x5B	; 91
    293a:	b0 e0       	ldi	r27, 0x00	; 0
    293c:	eb e5       	ldi	r30, 0x5B	; 91
    293e:	f0 e0       	ldi	r31, 0x00	; 0
    2940:	80 81       	ld	r24, Z
    2942:	80 64       	ori	r24, 0x40	; 64
    2944:	8c 93       	st	X, r24
			CLR_BIT(MCUCR, MCUCR_ISC00);
		#elif EXTI_INT0_SENSE_CONTROL == ON_CHANGE
			CLR_BIT(MCUCR, MCUCR_ISC01);
			SET_BIT(MCUCR, MCUCR_ISC00);
		#elif EXTI_INT0_SENSE_CONTROL == FALLING_EDGE
			SET_BIT(MCUCR, MCUCR_ISC01);
    2946:	a5 e5       	ldi	r26, 0x55	; 85
    2948:	b0 e0       	ldi	r27, 0x00	; 0
    294a:	e5 e5       	ldi	r30, 0x55	; 85
    294c:	f0 e0       	ldi	r31, 0x00	; 0
    294e:	80 81       	ld	r24, Z
    2950:	82 60       	ori	r24, 0x02	; 2
    2952:	8c 93       	st	X, r24
			CLR_BIT(MCUCR, MCUCR_ISC00);
    2954:	a5 e5       	ldi	r26, 0x55	; 85
    2956:	b0 e0       	ldi	r27, 0x00	; 0
    2958:	e5 e5       	ldi	r30, 0x55	; 85
    295a:	f0 e0       	ldi	r31, 0x00	; 0
    295c:	80 81       	ld	r24, Z
    295e:	8e 7f       	andi	r24, 0xFE	; 254
    2960:	8c 93       	st	X, r24
			SET_BIT(MCUCR, MCUCR_ISC10);
		#else
			#error "EXTI_INT1_CONTROL Error Configuration"
		#endif
	#elif EXTI_INT1_ENALBE == DISABLE
		CLR_BIT(GICR, GICR_INT1);
    2962:	ab e5       	ldi	r26, 0x5B	; 91
    2964:	b0 e0       	ldi	r27, 0x00	; 0
    2966:	eb e5       	ldi	r30, 0x5B	; 91
    2968:	f0 e0       	ldi	r31, 0x00	; 0
    296a:	80 81       	ld	r24, Z
    296c:	8f 77       	andi	r24, 0x7F	; 127
    296e:	8c 93       	st	X, r24
			SET_BIT(MCUCSR, MCUCSR_ISC2);
		#else
			#error "EXTI_INT2_CONTROL Error Configuration"
		#endif
	#elif EXTI_INT2_ENALBE == DISABLE
		CLR_BIT(GICR, GICR_INT2);
    2970:	ab e5       	ldi	r26, 0x5B	; 91
    2972:	b0 e0       	ldi	r27, 0x00	; 0
    2974:	eb e5       	ldi	r30, 0x5B	; 91
    2976:	f0 e0       	ldi	r31, 0x00	; 0
    2978:	80 81       	ld	r24, Z
    297a:	8f 7d       	andi	r24, 0xDF	; 223
    297c:	8c 93       	st	X, r24
	#else
		#error "EXTI_INT2_ENALBE Error Configuration"
	#endif
}
    297e:	cf 91       	pop	r28
    2980:	df 91       	pop	r29
    2982:	08 95       	ret

00002984 <EXTI_voidSetInt0SenseControl>:


void EXTI_voidSetInt0SenseControl (u8 Copy_u8SenseControl)
{
    2984:	df 93       	push	r29
    2986:	cf 93       	push	r28
    2988:	00 d0       	rcall	.+0      	; 0x298a <EXTI_voidSetInt0SenseControl+0x6>
    298a:	0f 92       	push	r0
    298c:	cd b7       	in	r28, 0x3d	; 61
    298e:	de b7       	in	r29, 0x3e	; 62
    2990:	89 83       	std	Y+1, r24	; 0x01
	switch (Copy_u8SenseControl)
    2992:	89 81       	ldd	r24, Y+1	; 0x01
    2994:	28 2f       	mov	r18, r24
    2996:	30 e0       	ldi	r19, 0x00	; 0
    2998:	3b 83       	std	Y+3, r19	; 0x03
    299a:	2a 83       	std	Y+2, r18	; 0x02
    299c:	8a 81       	ldd	r24, Y+2	; 0x02
    299e:	9b 81       	ldd	r25, Y+3	; 0x03
    29a0:	81 30       	cpi	r24, 0x01	; 1
    29a2:	91 05       	cpc	r25, r1
    29a4:	09 f4       	brne	.+2      	; 0x29a8 <EXTI_voidSetInt0SenseControl+0x24>
    29a6:	42 c0       	rjmp	.+132    	; 0x2a2c <EXTI_voidSetInt0SenseControl+0xa8>
    29a8:	2a 81       	ldd	r18, Y+2	; 0x02
    29aa:	3b 81       	ldd	r19, Y+3	; 0x03
    29ac:	22 30       	cpi	r18, 0x02	; 2
    29ae:	31 05       	cpc	r19, r1
    29b0:	2c f4       	brge	.+10     	; 0x29bc <EXTI_voidSetInt0SenseControl+0x38>
    29b2:	8a 81       	ldd	r24, Y+2	; 0x02
    29b4:	9b 81       	ldd	r25, Y+3	; 0x03
    29b6:	00 97       	sbiw	r24, 0x00	; 0
    29b8:	51 f1       	breq	.+84     	; 0x2a0e <EXTI_voidSetInt0SenseControl+0x8a>
    29ba:	46 c0       	rjmp	.+140    	; 0x2a48 <EXTI_voidSetInt0SenseControl+0xc4>
    29bc:	2a 81       	ldd	r18, Y+2	; 0x02
    29be:	3b 81       	ldd	r19, Y+3	; 0x03
    29c0:	22 30       	cpi	r18, 0x02	; 2
    29c2:	31 05       	cpc	r19, r1
    29c4:	31 f0       	breq	.+12     	; 0x29d2 <EXTI_voidSetInt0SenseControl+0x4e>
    29c6:	8a 81       	ldd	r24, Y+2	; 0x02
    29c8:	9b 81       	ldd	r25, Y+3	; 0x03
    29ca:	83 30       	cpi	r24, 0x03	; 3
    29cc:	91 05       	cpc	r25, r1
    29ce:	81 f0       	breq	.+32     	; 0x29f0 <EXTI_voidSetInt0SenseControl+0x6c>
    29d0:	3b c0       	rjmp	.+118    	; 0x2a48 <EXTI_voidSetInt0SenseControl+0xc4>
	{
	case LOW_LEVEL:
	{
		CLR_BIT(MCUCR, MCUCR_ISC01);
    29d2:	a5 e5       	ldi	r26, 0x55	; 85
    29d4:	b0 e0       	ldi	r27, 0x00	; 0
    29d6:	e5 e5       	ldi	r30, 0x55	; 85
    29d8:	f0 e0       	ldi	r31, 0x00	; 0
    29da:	80 81       	ld	r24, Z
    29dc:	8d 7f       	andi	r24, 0xFD	; 253
    29de:	8c 93       	st	X, r24
		CLR_BIT(MCUCR, MCUCR_ISC00);
    29e0:	a5 e5       	ldi	r26, 0x55	; 85
    29e2:	b0 e0       	ldi	r27, 0x00	; 0
    29e4:	e5 e5       	ldi	r30, 0x55	; 85
    29e6:	f0 e0       	ldi	r31, 0x00	; 0
    29e8:	80 81       	ld	r24, Z
    29ea:	8e 7f       	andi	r24, 0xFE	; 254
    29ec:	8c 93       	st	X, r24
    29ee:	2c c0       	rjmp	.+88     	; 0x2a48 <EXTI_voidSetInt0SenseControl+0xc4>
		break;
	}
	case ON_CHANGE:
	{
		CLR_BIT(MCUCR, MCUCR_ISC01);
    29f0:	a5 e5       	ldi	r26, 0x55	; 85
    29f2:	b0 e0       	ldi	r27, 0x00	; 0
    29f4:	e5 e5       	ldi	r30, 0x55	; 85
    29f6:	f0 e0       	ldi	r31, 0x00	; 0
    29f8:	80 81       	ld	r24, Z
    29fa:	8d 7f       	andi	r24, 0xFD	; 253
    29fc:	8c 93       	st	X, r24
		SET_BIT(MCUCR, MCUCR_ISC00);
    29fe:	a5 e5       	ldi	r26, 0x55	; 85
    2a00:	b0 e0       	ldi	r27, 0x00	; 0
    2a02:	e5 e5       	ldi	r30, 0x55	; 85
    2a04:	f0 e0       	ldi	r31, 0x00	; 0
    2a06:	80 81       	ld	r24, Z
    2a08:	81 60       	ori	r24, 0x01	; 1
    2a0a:	8c 93       	st	X, r24
    2a0c:	1d c0       	rjmp	.+58     	; 0x2a48 <EXTI_voidSetInt0SenseControl+0xc4>
		break;
	}
	case FALLING_EDGE:
	{
		SET_BIT(MCUCR, MCUCR_ISC01);
    2a0e:	a5 e5       	ldi	r26, 0x55	; 85
    2a10:	b0 e0       	ldi	r27, 0x00	; 0
    2a12:	e5 e5       	ldi	r30, 0x55	; 85
    2a14:	f0 e0       	ldi	r31, 0x00	; 0
    2a16:	80 81       	ld	r24, Z
    2a18:	82 60       	ori	r24, 0x02	; 2
    2a1a:	8c 93       	st	X, r24
		CLR_BIT(MCUCR, MCUCR_ISC00);
    2a1c:	a5 e5       	ldi	r26, 0x55	; 85
    2a1e:	b0 e0       	ldi	r27, 0x00	; 0
    2a20:	e5 e5       	ldi	r30, 0x55	; 85
    2a22:	f0 e0       	ldi	r31, 0x00	; 0
    2a24:	80 81       	ld	r24, Z
    2a26:	8e 7f       	andi	r24, 0xFE	; 254
    2a28:	8c 93       	st	X, r24
    2a2a:	0e c0       	rjmp	.+28     	; 0x2a48 <EXTI_voidSetInt0SenseControl+0xc4>
		break;
	}
	case RISING_EDGE:
	{
		SET_BIT(MCUCR, MCUCR_ISC01);
    2a2c:	a5 e5       	ldi	r26, 0x55	; 85
    2a2e:	b0 e0       	ldi	r27, 0x00	; 0
    2a30:	e5 e5       	ldi	r30, 0x55	; 85
    2a32:	f0 e0       	ldi	r31, 0x00	; 0
    2a34:	80 81       	ld	r24, Z
    2a36:	82 60       	ori	r24, 0x02	; 2
    2a38:	8c 93       	st	X, r24
		SET_BIT(MCUCR, MCUCR_ISC00);
    2a3a:	a5 e5       	ldi	r26, 0x55	; 85
    2a3c:	b0 e0       	ldi	r27, 0x00	; 0
    2a3e:	e5 e5       	ldi	r30, 0x55	; 85
    2a40:	f0 e0       	ldi	r31, 0x00	; 0
    2a42:	80 81       	ld	r24, Z
    2a44:	81 60       	ori	r24, 0x01	; 1
    2a46:	8c 93       	st	X, r24
	default:
	{
		break;
	}
	}
	SET_BIT(GICR, GICR_INT0);
    2a48:	ab e5       	ldi	r26, 0x5B	; 91
    2a4a:	b0 e0       	ldi	r27, 0x00	; 0
    2a4c:	eb e5       	ldi	r30, 0x5B	; 91
    2a4e:	f0 e0       	ldi	r31, 0x00	; 0
    2a50:	80 81       	ld	r24, Z
    2a52:	80 64       	ori	r24, 0x40	; 64
    2a54:	8c 93       	st	X, r24
}
    2a56:	0f 90       	pop	r0
    2a58:	0f 90       	pop	r0
    2a5a:	0f 90       	pop	r0
    2a5c:	cf 91       	pop	r28
    2a5e:	df 91       	pop	r29
    2a60:	08 95       	ret

00002a62 <EXTI_voidSetInt1SenseControl>:

void EXTI_voidSetInt1SenseControl(u8 Copy_u8SenseControl)
{
    2a62:	df 93       	push	r29
    2a64:	cf 93       	push	r28
    2a66:	00 d0       	rcall	.+0      	; 0x2a68 <EXTI_voidSetInt1SenseControl+0x6>
    2a68:	0f 92       	push	r0
    2a6a:	cd b7       	in	r28, 0x3d	; 61
    2a6c:	de b7       	in	r29, 0x3e	; 62
    2a6e:	89 83       	std	Y+1, r24	; 0x01
	switch (Copy_u8SenseControl)
    2a70:	89 81       	ldd	r24, Y+1	; 0x01
    2a72:	28 2f       	mov	r18, r24
    2a74:	30 e0       	ldi	r19, 0x00	; 0
    2a76:	3b 83       	std	Y+3, r19	; 0x03
    2a78:	2a 83       	std	Y+2, r18	; 0x02
    2a7a:	8a 81       	ldd	r24, Y+2	; 0x02
    2a7c:	9b 81       	ldd	r25, Y+3	; 0x03
    2a7e:	81 30       	cpi	r24, 0x01	; 1
    2a80:	91 05       	cpc	r25, r1
    2a82:	09 f4       	brne	.+2      	; 0x2a86 <EXTI_voidSetInt1SenseControl+0x24>
    2a84:	42 c0       	rjmp	.+132    	; 0x2b0a <EXTI_voidSetInt1SenseControl+0xa8>
    2a86:	2a 81       	ldd	r18, Y+2	; 0x02
    2a88:	3b 81       	ldd	r19, Y+3	; 0x03
    2a8a:	22 30       	cpi	r18, 0x02	; 2
    2a8c:	31 05       	cpc	r19, r1
    2a8e:	2c f4       	brge	.+10     	; 0x2a9a <EXTI_voidSetInt1SenseControl+0x38>
    2a90:	8a 81       	ldd	r24, Y+2	; 0x02
    2a92:	9b 81       	ldd	r25, Y+3	; 0x03
    2a94:	00 97       	sbiw	r24, 0x00	; 0
    2a96:	51 f1       	breq	.+84     	; 0x2aec <EXTI_voidSetInt1SenseControl+0x8a>
    2a98:	46 c0       	rjmp	.+140    	; 0x2b26 <EXTI_voidSetInt1SenseControl+0xc4>
    2a9a:	2a 81       	ldd	r18, Y+2	; 0x02
    2a9c:	3b 81       	ldd	r19, Y+3	; 0x03
    2a9e:	22 30       	cpi	r18, 0x02	; 2
    2aa0:	31 05       	cpc	r19, r1
    2aa2:	31 f0       	breq	.+12     	; 0x2ab0 <EXTI_voidSetInt1SenseControl+0x4e>
    2aa4:	8a 81       	ldd	r24, Y+2	; 0x02
    2aa6:	9b 81       	ldd	r25, Y+3	; 0x03
    2aa8:	83 30       	cpi	r24, 0x03	; 3
    2aaa:	91 05       	cpc	r25, r1
    2aac:	81 f0       	breq	.+32     	; 0x2ace <EXTI_voidSetInt1SenseControl+0x6c>
    2aae:	3b c0       	rjmp	.+118    	; 0x2b26 <EXTI_voidSetInt1SenseControl+0xc4>
	{
	case LOW_LEVEL:
	{
		CLR_BIT(MCUCR, MCUCR_ISC11);
    2ab0:	a5 e5       	ldi	r26, 0x55	; 85
    2ab2:	b0 e0       	ldi	r27, 0x00	; 0
    2ab4:	e5 e5       	ldi	r30, 0x55	; 85
    2ab6:	f0 e0       	ldi	r31, 0x00	; 0
    2ab8:	80 81       	ld	r24, Z
    2aba:	87 7f       	andi	r24, 0xF7	; 247
    2abc:	8c 93       	st	X, r24
		CLR_BIT(MCUCR, MCUCR_ISC10);
    2abe:	a5 e5       	ldi	r26, 0x55	; 85
    2ac0:	b0 e0       	ldi	r27, 0x00	; 0
    2ac2:	e5 e5       	ldi	r30, 0x55	; 85
    2ac4:	f0 e0       	ldi	r31, 0x00	; 0
    2ac6:	80 81       	ld	r24, Z
    2ac8:	8b 7f       	andi	r24, 0xFB	; 251
    2aca:	8c 93       	st	X, r24
    2acc:	2c c0       	rjmp	.+88     	; 0x2b26 <EXTI_voidSetInt1SenseControl+0xc4>
		break;
	}
	case ON_CHANGE:
	{
		CLR_BIT(MCUCR, MCUCR_ISC11);
    2ace:	a5 e5       	ldi	r26, 0x55	; 85
    2ad0:	b0 e0       	ldi	r27, 0x00	; 0
    2ad2:	e5 e5       	ldi	r30, 0x55	; 85
    2ad4:	f0 e0       	ldi	r31, 0x00	; 0
    2ad6:	80 81       	ld	r24, Z
    2ad8:	87 7f       	andi	r24, 0xF7	; 247
    2ada:	8c 93       	st	X, r24
		SET_BIT(MCUCR, MCUCR_ISC10);
    2adc:	a5 e5       	ldi	r26, 0x55	; 85
    2ade:	b0 e0       	ldi	r27, 0x00	; 0
    2ae0:	e5 e5       	ldi	r30, 0x55	; 85
    2ae2:	f0 e0       	ldi	r31, 0x00	; 0
    2ae4:	80 81       	ld	r24, Z
    2ae6:	84 60       	ori	r24, 0x04	; 4
    2ae8:	8c 93       	st	X, r24
    2aea:	1d c0       	rjmp	.+58     	; 0x2b26 <EXTI_voidSetInt1SenseControl+0xc4>
		break;
	}
	case FALLING_EDGE:
	{
		SET_BIT(MCUCR, MCUCR_ISC11);
    2aec:	a5 e5       	ldi	r26, 0x55	; 85
    2aee:	b0 e0       	ldi	r27, 0x00	; 0
    2af0:	e5 e5       	ldi	r30, 0x55	; 85
    2af2:	f0 e0       	ldi	r31, 0x00	; 0
    2af4:	80 81       	ld	r24, Z
    2af6:	88 60       	ori	r24, 0x08	; 8
    2af8:	8c 93       	st	X, r24
		CLR_BIT(MCUCR, MCUCR_ISC10);
    2afa:	a5 e5       	ldi	r26, 0x55	; 85
    2afc:	b0 e0       	ldi	r27, 0x00	; 0
    2afe:	e5 e5       	ldi	r30, 0x55	; 85
    2b00:	f0 e0       	ldi	r31, 0x00	; 0
    2b02:	80 81       	ld	r24, Z
    2b04:	8b 7f       	andi	r24, 0xFB	; 251
    2b06:	8c 93       	st	X, r24
    2b08:	0e c0       	rjmp	.+28     	; 0x2b26 <EXTI_voidSetInt1SenseControl+0xc4>
		break;
	}
	case RISING_EDGE:
	{
		SET_BIT(MCUCR, MCUCR_ISC11);
    2b0a:	a5 e5       	ldi	r26, 0x55	; 85
    2b0c:	b0 e0       	ldi	r27, 0x00	; 0
    2b0e:	e5 e5       	ldi	r30, 0x55	; 85
    2b10:	f0 e0       	ldi	r31, 0x00	; 0
    2b12:	80 81       	ld	r24, Z
    2b14:	88 60       	ori	r24, 0x08	; 8
    2b16:	8c 93       	st	X, r24
		SET_BIT(MCUCR, MCUCR_ISC10);
    2b18:	a5 e5       	ldi	r26, 0x55	; 85
    2b1a:	b0 e0       	ldi	r27, 0x00	; 0
    2b1c:	e5 e5       	ldi	r30, 0x55	; 85
    2b1e:	f0 e0       	ldi	r31, 0x00	; 0
    2b20:	80 81       	ld	r24, Z
    2b22:	84 60       	ori	r24, 0x04	; 4
    2b24:	8c 93       	st	X, r24
	default:
	{
		break;
	}
	}
	SET_BIT(GICR, GICR_INT1);
    2b26:	ab e5       	ldi	r26, 0x5B	; 91
    2b28:	b0 e0       	ldi	r27, 0x00	; 0
    2b2a:	eb e5       	ldi	r30, 0x5B	; 91
    2b2c:	f0 e0       	ldi	r31, 0x00	; 0
    2b2e:	80 81       	ld	r24, Z
    2b30:	80 68       	ori	r24, 0x80	; 128
    2b32:	8c 93       	st	X, r24
}
    2b34:	0f 90       	pop	r0
    2b36:	0f 90       	pop	r0
    2b38:	0f 90       	pop	r0
    2b3a:	cf 91       	pop	r28
    2b3c:	df 91       	pop	r29
    2b3e:	08 95       	ret

00002b40 <EXTI_voidSetInt2SenseControl>:

void EXTI_voidSetInt2SenseControl(u8 Copy_u8SenseControl)
{
    2b40:	df 93       	push	r29
    2b42:	cf 93       	push	r28
    2b44:	00 d0       	rcall	.+0      	; 0x2b46 <EXTI_voidSetInt2SenseControl+0x6>
    2b46:	0f 92       	push	r0
    2b48:	cd b7       	in	r28, 0x3d	; 61
    2b4a:	de b7       	in	r29, 0x3e	; 62
    2b4c:	89 83       	std	Y+1, r24	; 0x01
	switch (Copy_u8SenseControl)
    2b4e:	89 81       	ldd	r24, Y+1	; 0x01
    2b50:	28 2f       	mov	r18, r24
    2b52:	30 e0       	ldi	r19, 0x00	; 0
    2b54:	3b 83       	std	Y+3, r19	; 0x03
    2b56:	2a 83       	std	Y+2, r18	; 0x02
    2b58:	8a 81       	ldd	r24, Y+2	; 0x02
    2b5a:	9b 81       	ldd	r25, Y+3	; 0x03
    2b5c:	00 97       	sbiw	r24, 0x00	; 0
    2b5e:	31 f0       	breq	.+12     	; 0x2b6c <EXTI_voidSetInt2SenseControl+0x2c>
    2b60:	2a 81       	ldd	r18, Y+2	; 0x02
    2b62:	3b 81       	ldd	r19, Y+3	; 0x03
    2b64:	21 30       	cpi	r18, 0x01	; 1
    2b66:	31 05       	cpc	r19, r1
    2b68:	49 f0       	breq	.+18     	; 0x2b7c <EXTI_voidSetInt2SenseControl+0x3c>
    2b6a:	0f c0       	rjmp	.+30     	; 0x2b8a <EXTI_voidSetInt2SenseControl+0x4a>
	{
	case FALLING_EDGE:
	{
		CLR_BIT(MCUCSR, MCUCSR_ISC2);
    2b6c:	a4 e5       	ldi	r26, 0x54	; 84
    2b6e:	b0 e0       	ldi	r27, 0x00	; 0
    2b70:	e4 e5       	ldi	r30, 0x54	; 84
    2b72:	f0 e0       	ldi	r31, 0x00	; 0
    2b74:	80 81       	ld	r24, Z
    2b76:	8f 7b       	andi	r24, 0xBF	; 191
    2b78:	8c 93       	st	X, r24
    2b7a:	07 c0       	rjmp	.+14     	; 0x2b8a <EXTI_voidSetInt2SenseControl+0x4a>
		break;
	}
	case RISING_EDGE:
	{
		SET_BIT(MCUCSR, MCUCSR_ISC2);
    2b7c:	a4 e5       	ldi	r26, 0x54	; 84
    2b7e:	b0 e0       	ldi	r27, 0x00	; 0
    2b80:	e4 e5       	ldi	r30, 0x54	; 84
    2b82:	f0 e0       	ldi	r31, 0x00	; 0
    2b84:	80 81       	ld	r24, Z
    2b86:	80 64       	ori	r24, 0x40	; 64
    2b88:	8c 93       	st	X, r24
	default:
	{
		break;
	}
	}
	SET_BIT(GICR, GICR_INT2);
    2b8a:	ab e5       	ldi	r26, 0x5B	; 91
    2b8c:	b0 e0       	ldi	r27, 0x00	; 0
    2b8e:	eb e5       	ldi	r30, 0x5B	; 91
    2b90:	f0 e0       	ldi	r31, 0x00	; 0
    2b92:	80 81       	ld	r24, Z
    2b94:	80 62       	ori	r24, 0x20	; 32
    2b96:	8c 93       	st	X, r24
}
    2b98:	0f 90       	pop	r0
    2b9a:	0f 90       	pop	r0
    2b9c:	0f 90       	pop	r0
    2b9e:	cf 91       	pop	r28
    2ba0:	df 91       	pop	r29
    2ba2:	08 95       	ret

00002ba4 <EXTI_voidInt0SetCallBack>:


void EXTI_voidInt0SetCallBack (void (*Copy_pvNotificationFunction) (void))
{
    2ba4:	df 93       	push	r29
    2ba6:	cf 93       	push	r28
    2ba8:	00 d0       	rcall	.+0      	; 0x2baa <EXTI_voidInt0SetCallBack+0x6>
    2baa:	cd b7       	in	r28, 0x3d	; 61
    2bac:	de b7       	in	r29, 0x3e	; 62
    2bae:	9a 83       	std	Y+2, r25	; 0x02
    2bb0:	89 83       	std	Y+1, r24	; 0x01
	Global_pvInt0NotifcationFunction = Copy_pvNotificationFunction;
    2bb2:	89 81       	ldd	r24, Y+1	; 0x01
    2bb4:	9a 81       	ldd	r25, Y+2	; 0x02
    2bb6:	90 93 79 01 	sts	0x0179, r25
    2bba:	80 93 78 01 	sts	0x0178, r24
}
    2bbe:	0f 90       	pop	r0
    2bc0:	0f 90       	pop	r0
    2bc2:	cf 91       	pop	r28
    2bc4:	df 91       	pop	r29
    2bc6:	08 95       	ret

00002bc8 <__vector_1>:

/*ISR for INT0*/
void __vector_1 (void) __attribute__((signal));
void __vector_1 (void)
{
    2bc8:	1f 92       	push	r1
    2bca:	0f 92       	push	r0
    2bcc:	0f b6       	in	r0, 0x3f	; 63
    2bce:	0f 92       	push	r0
    2bd0:	11 24       	eor	r1, r1
    2bd2:	2f 93       	push	r18
    2bd4:	3f 93       	push	r19
    2bd6:	4f 93       	push	r20
    2bd8:	5f 93       	push	r21
    2bda:	6f 93       	push	r22
    2bdc:	7f 93       	push	r23
    2bde:	8f 93       	push	r24
    2be0:	9f 93       	push	r25
    2be2:	af 93       	push	r26
    2be4:	bf 93       	push	r27
    2be6:	ef 93       	push	r30
    2be8:	ff 93       	push	r31
    2bea:	df 93       	push	r29
    2bec:	cf 93       	push	r28
    2bee:	cd b7       	in	r28, 0x3d	; 61
    2bf0:	de b7       	in	r29, 0x3e	; 62
	if (Global_pvInt0NotifcationFunction != NULL)
    2bf2:	80 91 78 01 	lds	r24, 0x0178
    2bf6:	90 91 79 01 	lds	r25, 0x0179
    2bfa:	00 97       	sbiw	r24, 0x00	; 0
    2bfc:	29 f0       	breq	.+10     	; 0x2c08 <__vector_1+0x40>
	{
		Global_pvInt0NotifcationFunction();
    2bfe:	e0 91 78 01 	lds	r30, 0x0178
    2c02:	f0 91 79 01 	lds	r31, 0x0179
    2c06:	09 95       	icall
	}
	else
	{

	}
}
    2c08:	cf 91       	pop	r28
    2c0a:	df 91       	pop	r29
    2c0c:	ff 91       	pop	r31
    2c0e:	ef 91       	pop	r30
    2c10:	bf 91       	pop	r27
    2c12:	af 91       	pop	r26
    2c14:	9f 91       	pop	r25
    2c16:	8f 91       	pop	r24
    2c18:	7f 91       	pop	r23
    2c1a:	6f 91       	pop	r22
    2c1c:	5f 91       	pop	r21
    2c1e:	4f 91       	pop	r20
    2c20:	3f 91       	pop	r19
    2c22:	2f 91       	pop	r18
    2c24:	0f 90       	pop	r0
    2c26:	0f be       	out	0x3f, r0	; 63
    2c28:	0f 90       	pop	r0
    2c2a:	1f 90       	pop	r1
    2c2c:	18 95       	reti

00002c2e <EXTI_voidInt1SetCallBack>:

void EXTI_voidInt1SetCallBack (void (*Copy_pvNotificationFunction) (void))
{
    2c2e:	df 93       	push	r29
    2c30:	cf 93       	push	r28
    2c32:	00 d0       	rcall	.+0      	; 0x2c34 <EXTI_voidInt1SetCallBack+0x6>
    2c34:	cd b7       	in	r28, 0x3d	; 61
    2c36:	de b7       	in	r29, 0x3e	; 62
    2c38:	9a 83       	std	Y+2, r25	; 0x02
    2c3a:	89 83       	std	Y+1, r24	; 0x01
	Global_pvInt1NotifcationFunction = Copy_pvNotificationFunction;
    2c3c:	89 81       	ldd	r24, Y+1	; 0x01
    2c3e:	9a 81       	ldd	r25, Y+2	; 0x02
    2c40:	90 93 7b 01 	sts	0x017B, r25
    2c44:	80 93 7a 01 	sts	0x017A, r24
}
    2c48:	0f 90       	pop	r0
    2c4a:	0f 90       	pop	r0
    2c4c:	cf 91       	pop	r28
    2c4e:	df 91       	pop	r29
    2c50:	08 95       	ret

00002c52 <__vector_2>:

/*ISR for INT1*/
void __vector_2 (void) __attribute__((signal));
void __vector_2 (void)
{
    2c52:	1f 92       	push	r1
    2c54:	0f 92       	push	r0
    2c56:	0f b6       	in	r0, 0x3f	; 63
    2c58:	0f 92       	push	r0
    2c5a:	11 24       	eor	r1, r1
    2c5c:	2f 93       	push	r18
    2c5e:	3f 93       	push	r19
    2c60:	4f 93       	push	r20
    2c62:	5f 93       	push	r21
    2c64:	6f 93       	push	r22
    2c66:	7f 93       	push	r23
    2c68:	8f 93       	push	r24
    2c6a:	9f 93       	push	r25
    2c6c:	af 93       	push	r26
    2c6e:	bf 93       	push	r27
    2c70:	ef 93       	push	r30
    2c72:	ff 93       	push	r31
    2c74:	df 93       	push	r29
    2c76:	cf 93       	push	r28
    2c78:	cd b7       	in	r28, 0x3d	; 61
    2c7a:	de b7       	in	r29, 0x3e	; 62
	if (Global_pvInt1NotifcationFunction != NULL)
    2c7c:	80 91 7a 01 	lds	r24, 0x017A
    2c80:	90 91 7b 01 	lds	r25, 0x017B
    2c84:	00 97       	sbiw	r24, 0x00	; 0
    2c86:	29 f0       	breq	.+10     	; 0x2c92 <__vector_2+0x40>
	{
		Global_pvInt1NotifcationFunction();
    2c88:	e0 91 7a 01 	lds	r30, 0x017A
    2c8c:	f0 91 7b 01 	lds	r31, 0x017B
    2c90:	09 95       	icall
	}
	else
	{

	}
}
    2c92:	cf 91       	pop	r28
    2c94:	df 91       	pop	r29
    2c96:	ff 91       	pop	r31
    2c98:	ef 91       	pop	r30
    2c9a:	bf 91       	pop	r27
    2c9c:	af 91       	pop	r26
    2c9e:	9f 91       	pop	r25
    2ca0:	8f 91       	pop	r24
    2ca2:	7f 91       	pop	r23
    2ca4:	6f 91       	pop	r22
    2ca6:	5f 91       	pop	r21
    2ca8:	4f 91       	pop	r20
    2caa:	3f 91       	pop	r19
    2cac:	2f 91       	pop	r18
    2cae:	0f 90       	pop	r0
    2cb0:	0f be       	out	0x3f, r0	; 63
    2cb2:	0f 90       	pop	r0
    2cb4:	1f 90       	pop	r1
    2cb6:	18 95       	reti

00002cb8 <EXTI_voidInt2SetCallBack>:

void EXTI_voidInt2SetCallBack (void (*Copy_pvNotificationFunction) (void))
{
    2cb8:	df 93       	push	r29
    2cba:	cf 93       	push	r28
    2cbc:	00 d0       	rcall	.+0      	; 0x2cbe <EXTI_voidInt2SetCallBack+0x6>
    2cbe:	cd b7       	in	r28, 0x3d	; 61
    2cc0:	de b7       	in	r29, 0x3e	; 62
    2cc2:	9a 83       	std	Y+2, r25	; 0x02
    2cc4:	89 83       	std	Y+1, r24	; 0x01
	Global_pvInt2NotifcationFunction = Copy_pvNotificationFunction;
    2cc6:	89 81       	ldd	r24, Y+1	; 0x01
    2cc8:	9a 81       	ldd	r25, Y+2	; 0x02
    2cca:	90 93 7d 01 	sts	0x017D, r25
    2cce:	80 93 7c 01 	sts	0x017C, r24
}
    2cd2:	0f 90       	pop	r0
    2cd4:	0f 90       	pop	r0
    2cd6:	cf 91       	pop	r28
    2cd8:	df 91       	pop	r29
    2cda:	08 95       	ret

00002cdc <__vector_3>:

/*ISR for INT2*/
void __vector_3 (void) __attribute__((signal));
void __vector_3 (void)
{
    2cdc:	1f 92       	push	r1
    2cde:	0f 92       	push	r0
    2ce0:	0f b6       	in	r0, 0x3f	; 63
    2ce2:	0f 92       	push	r0
    2ce4:	11 24       	eor	r1, r1
    2ce6:	2f 93       	push	r18
    2ce8:	3f 93       	push	r19
    2cea:	4f 93       	push	r20
    2cec:	5f 93       	push	r21
    2cee:	6f 93       	push	r22
    2cf0:	7f 93       	push	r23
    2cf2:	8f 93       	push	r24
    2cf4:	9f 93       	push	r25
    2cf6:	af 93       	push	r26
    2cf8:	bf 93       	push	r27
    2cfa:	ef 93       	push	r30
    2cfc:	ff 93       	push	r31
    2cfe:	df 93       	push	r29
    2d00:	cf 93       	push	r28
    2d02:	cd b7       	in	r28, 0x3d	; 61
    2d04:	de b7       	in	r29, 0x3e	; 62
	if (Global_pvInt2NotifcationFunction != NULL)
    2d06:	80 91 7c 01 	lds	r24, 0x017C
    2d0a:	90 91 7d 01 	lds	r25, 0x017D
    2d0e:	00 97       	sbiw	r24, 0x00	; 0
    2d10:	29 f0       	breq	.+10     	; 0x2d1c <__vector_3+0x40>
	{
		Global_pvInt2NotifcationFunction();
    2d12:	e0 91 7c 01 	lds	r30, 0x017C
    2d16:	f0 91 7d 01 	lds	r31, 0x017D
    2d1a:	09 95       	icall
	}
	else
	{

	}
}
    2d1c:	cf 91       	pop	r28
    2d1e:	df 91       	pop	r29
    2d20:	ff 91       	pop	r31
    2d22:	ef 91       	pop	r30
    2d24:	bf 91       	pop	r27
    2d26:	af 91       	pop	r26
    2d28:	9f 91       	pop	r25
    2d2a:	8f 91       	pop	r24
    2d2c:	7f 91       	pop	r23
    2d2e:	6f 91       	pop	r22
    2d30:	5f 91       	pop	r21
    2d32:	4f 91       	pop	r20
    2d34:	3f 91       	pop	r19
    2d36:	2f 91       	pop	r18
    2d38:	0f 90       	pop	r0
    2d3a:	0f be       	out	0x3f, r0	; 63
    2d3c:	0f 90       	pop	r0
    2d3e:	1f 90       	pop	r1
    2d40:	18 95       	reti

00002d42 <DIO_u8SetPortDirection>:
#include "DIO_private.h"
#include "DIO_config.h"


u8 DIO_u8SetPortDirection(u8 Copy_u8Port, u8 Copy_u8Direction)
{
    2d42:	df 93       	push	r29
    2d44:	cf 93       	push	r28
    2d46:	00 d0       	rcall	.+0      	; 0x2d48 <DIO_u8SetPortDirection+0x6>
    2d48:	00 d0       	rcall	.+0      	; 0x2d4a <DIO_u8SetPortDirection+0x8>
    2d4a:	0f 92       	push	r0
    2d4c:	cd b7       	in	r28, 0x3d	; 61
    2d4e:	de b7       	in	r29, 0x3e	; 62
    2d50:	8a 83       	std	Y+2, r24	; 0x02
    2d52:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8RunState = DIO_OK;
    2d54:	19 82       	std	Y+1, r1	; 0x01
	switch(Copy_u8Port)
    2d56:	8a 81       	ldd	r24, Y+2	; 0x02
    2d58:	28 2f       	mov	r18, r24
    2d5a:	30 e0       	ldi	r19, 0x00	; 0
    2d5c:	3d 83       	std	Y+5, r19	; 0x05
    2d5e:	2c 83       	std	Y+4, r18	; 0x04
    2d60:	8c 81       	ldd	r24, Y+4	; 0x04
    2d62:	9d 81       	ldd	r25, Y+5	; 0x05
    2d64:	81 30       	cpi	r24, 0x01	; 1
    2d66:	91 05       	cpc	r25, r1
    2d68:	d1 f0       	breq	.+52     	; 0x2d9e <DIO_u8SetPortDirection+0x5c>
    2d6a:	2c 81       	ldd	r18, Y+4	; 0x04
    2d6c:	3d 81       	ldd	r19, Y+5	; 0x05
    2d6e:	22 30       	cpi	r18, 0x02	; 2
    2d70:	31 05       	cpc	r19, r1
    2d72:	2c f4       	brge	.+10     	; 0x2d7e <DIO_u8SetPortDirection+0x3c>
    2d74:	8c 81       	ldd	r24, Y+4	; 0x04
    2d76:	9d 81       	ldd	r25, Y+5	; 0x05
    2d78:	00 97       	sbiw	r24, 0x00	; 0
    2d7a:	61 f0       	breq	.+24     	; 0x2d94 <DIO_u8SetPortDirection+0x52>
    2d7c:	1f c0       	rjmp	.+62     	; 0x2dbc <DIO_u8SetPortDirection+0x7a>
    2d7e:	2c 81       	ldd	r18, Y+4	; 0x04
    2d80:	3d 81       	ldd	r19, Y+5	; 0x05
    2d82:	22 30       	cpi	r18, 0x02	; 2
    2d84:	31 05       	cpc	r19, r1
    2d86:	81 f0       	breq	.+32     	; 0x2da8 <DIO_u8SetPortDirection+0x66>
    2d88:	8c 81       	ldd	r24, Y+4	; 0x04
    2d8a:	9d 81       	ldd	r25, Y+5	; 0x05
    2d8c:	83 30       	cpi	r24, 0x03	; 3
    2d8e:	91 05       	cpc	r25, r1
    2d90:	81 f0       	breq	.+32     	; 0x2db2 <DIO_u8SetPortDirection+0x70>
    2d92:	14 c0       	rjmp	.+40     	; 0x2dbc <DIO_u8SetPortDirection+0x7a>
	{
	case DIO_PORTA: DDRA = Copy_u8Direction; break;
    2d94:	ea e3       	ldi	r30, 0x3A	; 58
    2d96:	f0 e0       	ldi	r31, 0x00	; 0
    2d98:	8b 81       	ldd	r24, Y+3	; 0x03
    2d9a:	80 83       	st	Z, r24
    2d9c:	11 c0       	rjmp	.+34     	; 0x2dc0 <DIO_u8SetPortDirection+0x7e>
	case DIO_PORTB:	DDRB = Copy_u8Direction; break;
    2d9e:	e7 e3       	ldi	r30, 0x37	; 55
    2da0:	f0 e0       	ldi	r31, 0x00	; 0
    2da2:	8b 81       	ldd	r24, Y+3	; 0x03
    2da4:	80 83       	st	Z, r24
    2da6:	0c c0       	rjmp	.+24     	; 0x2dc0 <DIO_u8SetPortDirection+0x7e>
	case DIO_PORTC: DDRC = Copy_u8Direction; break;
    2da8:	e4 e3       	ldi	r30, 0x34	; 52
    2daa:	f0 e0       	ldi	r31, 0x00	; 0
    2dac:	8b 81       	ldd	r24, Y+3	; 0x03
    2dae:	80 83       	st	Z, r24
    2db0:	07 c0       	rjmp	.+14     	; 0x2dc0 <DIO_u8SetPortDirection+0x7e>
	case DIO_PORTD: DDRD = Copy_u8Direction; break;
    2db2:	e1 e3       	ldi	r30, 0x31	; 49
    2db4:	f0 e0       	ldi	r31, 0x00	; 0
    2db6:	8b 81       	ldd	r24, Y+3	; 0x03
    2db8:	80 83       	st	Z, r24
    2dba:	02 c0       	rjmp	.+4      	; 0x2dc0 <DIO_u8SetPortDirection+0x7e>
	default: Local_u8RunState = DIO_ERROR;
    2dbc:	81 e0       	ldi	r24, 0x01	; 1
    2dbe:	89 83       	std	Y+1, r24	; 0x01
	}
	return Local_u8RunState;
    2dc0:	89 81       	ldd	r24, Y+1	; 0x01
}
    2dc2:	0f 90       	pop	r0
    2dc4:	0f 90       	pop	r0
    2dc6:	0f 90       	pop	r0
    2dc8:	0f 90       	pop	r0
    2dca:	0f 90       	pop	r0
    2dcc:	cf 91       	pop	r28
    2dce:	df 91       	pop	r29
    2dd0:	08 95       	ret

00002dd2 <DIO_u8SetPortValue>:


u8 DIO_u8SetPortValue(u8 Copy_u8Port, u8 Copy_u8Value)
{
    2dd2:	df 93       	push	r29
    2dd4:	cf 93       	push	r28
    2dd6:	00 d0       	rcall	.+0      	; 0x2dd8 <DIO_u8SetPortValue+0x6>
    2dd8:	00 d0       	rcall	.+0      	; 0x2dda <DIO_u8SetPortValue+0x8>
    2dda:	0f 92       	push	r0
    2ddc:	cd b7       	in	r28, 0x3d	; 61
    2dde:	de b7       	in	r29, 0x3e	; 62
    2de0:	8a 83       	std	Y+2, r24	; 0x02
    2de2:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8RunState = DIO_OK;
    2de4:	19 82       	std	Y+1, r1	; 0x01
	switch(Copy_u8Port)
    2de6:	8a 81       	ldd	r24, Y+2	; 0x02
    2de8:	28 2f       	mov	r18, r24
    2dea:	30 e0       	ldi	r19, 0x00	; 0
    2dec:	3d 83       	std	Y+5, r19	; 0x05
    2dee:	2c 83       	std	Y+4, r18	; 0x04
    2df0:	8c 81       	ldd	r24, Y+4	; 0x04
    2df2:	9d 81       	ldd	r25, Y+5	; 0x05
    2df4:	81 30       	cpi	r24, 0x01	; 1
    2df6:	91 05       	cpc	r25, r1
    2df8:	d1 f0       	breq	.+52     	; 0x2e2e <DIO_u8SetPortValue+0x5c>
    2dfa:	2c 81       	ldd	r18, Y+4	; 0x04
    2dfc:	3d 81       	ldd	r19, Y+5	; 0x05
    2dfe:	22 30       	cpi	r18, 0x02	; 2
    2e00:	31 05       	cpc	r19, r1
    2e02:	2c f4       	brge	.+10     	; 0x2e0e <DIO_u8SetPortValue+0x3c>
    2e04:	8c 81       	ldd	r24, Y+4	; 0x04
    2e06:	9d 81       	ldd	r25, Y+5	; 0x05
    2e08:	00 97       	sbiw	r24, 0x00	; 0
    2e0a:	61 f0       	breq	.+24     	; 0x2e24 <DIO_u8SetPortValue+0x52>
    2e0c:	1f c0       	rjmp	.+62     	; 0x2e4c <DIO_u8SetPortValue+0x7a>
    2e0e:	2c 81       	ldd	r18, Y+4	; 0x04
    2e10:	3d 81       	ldd	r19, Y+5	; 0x05
    2e12:	22 30       	cpi	r18, 0x02	; 2
    2e14:	31 05       	cpc	r19, r1
    2e16:	81 f0       	breq	.+32     	; 0x2e38 <DIO_u8SetPortValue+0x66>
    2e18:	8c 81       	ldd	r24, Y+4	; 0x04
    2e1a:	9d 81       	ldd	r25, Y+5	; 0x05
    2e1c:	83 30       	cpi	r24, 0x03	; 3
    2e1e:	91 05       	cpc	r25, r1
    2e20:	81 f0       	breq	.+32     	; 0x2e42 <DIO_u8SetPortValue+0x70>
    2e22:	14 c0       	rjmp	.+40     	; 0x2e4c <DIO_u8SetPortValue+0x7a>
	{
	case DIO_PORTA: PORTA = Copy_u8Value; break;
    2e24:	eb e3       	ldi	r30, 0x3B	; 59
    2e26:	f0 e0       	ldi	r31, 0x00	; 0
    2e28:	8b 81       	ldd	r24, Y+3	; 0x03
    2e2a:	80 83       	st	Z, r24
    2e2c:	11 c0       	rjmp	.+34     	; 0x2e50 <DIO_u8SetPortValue+0x7e>
	case DIO_PORTB:	PORTB = Copy_u8Value; break;
    2e2e:	e8 e3       	ldi	r30, 0x38	; 56
    2e30:	f0 e0       	ldi	r31, 0x00	; 0
    2e32:	8b 81       	ldd	r24, Y+3	; 0x03
    2e34:	80 83       	st	Z, r24
    2e36:	0c c0       	rjmp	.+24     	; 0x2e50 <DIO_u8SetPortValue+0x7e>
	case DIO_PORTC: PORTC = Copy_u8Value; break;
    2e38:	e5 e3       	ldi	r30, 0x35	; 53
    2e3a:	f0 e0       	ldi	r31, 0x00	; 0
    2e3c:	8b 81       	ldd	r24, Y+3	; 0x03
    2e3e:	80 83       	st	Z, r24
    2e40:	07 c0       	rjmp	.+14     	; 0x2e50 <DIO_u8SetPortValue+0x7e>
	case DIO_PORTD: PORTD = Copy_u8Value; break;
    2e42:	e2 e3       	ldi	r30, 0x32	; 50
    2e44:	f0 e0       	ldi	r31, 0x00	; 0
    2e46:	8b 81       	ldd	r24, Y+3	; 0x03
    2e48:	80 83       	st	Z, r24
    2e4a:	02 c0       	rjmp	.+4      	; 0x2e50 <DIO_u8SetPortValue+0x7e>
	default: Local_u8RunState = DIO_ERROR;
    2e4c:	81 e0       	ldi	r24, 0x01	; 1
    2e4e:	89 83       	std	Y+1, r24	; 0x01
	}
	return Local_u8RunState;
    2e50:	89 81       	ldd	r24, Y+1	; 0x01
}
    2e52:	0f 90       	pop	r0
    2e54:	0f 90       	pop	r0
    2e56:	0f 90       	pop	r0
    2e58:	0f 90       	pop	r0
    2e5a:	0f 90       	pop	r0
    2e5c:	cf 91       	pop	r28
    2e5e:	df 91       	pop	r29
    2e60:	08 95       	ret

00002e62 <DIO_u8GetPortValue>:


u8 DIO_u8GetPortValue(u8 Copy_u8Port, u8 *Copy_u8Variable)
{
    2e62:	df 93       	push	r29
    2e64:	cf 93       	push	r28
    2e66:	00 d0       	rcall	.+0      	; 0x2e68 <DIO_u8GetPortValue+0x6>
    2e68:	00 d0       	rcall	.+0      	; 0x2e6a <DIO_u8GetPortValue+0x8>
    2e6a:	00 d0       	rcall	.+0      	; 0x2e6c <DIO_u8GetPortValue+0xa>
    2e6c:	cd b7       	in	r28, 0x3d	; 61
    2e6e:	de b7       	in	r29, 0x3e	; 62
    2e70:	8a 83       	std	Y+2, r24	; 0x02
    2e72:	7c 83       	std	Y+4, r23	; 0x04
    2e74:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8RunState = DIO_OK;
    2e76:	19 82       	std	Y+1, r1	; 0x01
	if(Copy_u8Variable != NULL)
    2e78:	8b 81       	ldd	r24, Y+3	; 0x03
    2e7a:	9c 81       	ldd	r25, Y+4	; 0x04
    2e7c:	00 97       	sbiw	r24, 0x00	; 0
    2e7e:	09 f4       	brne	.+2      	; 0x2e82 <DIO_u8GetPortValue+0x20>
    2e80:	3e c0       	rjmp	.+124    	; 0x2efe <DIO_u8GetPortValue+0x9c>
	{
		switch(Copy_u8Port)
    2e82:	8a 81       	ldd	r24, Y+2	; 0x02
    2e84:	28 2f       	mov	r18, r24
    2e86:	30 e0       	ldi	r19, 0x00	; 0
    2e88:	3e 83       	std	Y+6, r19	; 0x06
    2e8a:	2d 83       	std	Y+5, r18	; 0x05
    2e8c:	8d 81       	ldd	r24, Y+5	; 0x05
    2e8e:	9e 81       	ldd	r25, Y+6	; 0x06
    2e90:	81 30       	cpi	r24, 0x01	; 1
    2e92:	91 05       	cpc	r25, r1
    2e94:	e1 f0       	breq	.+56     	; 0x2ece <DIO_u8GetPortValue+0x6c>
    2e96:	2d 81       	ldd	r18, Y+5	; 0x05
    2e98:	3e 81       	ldd	r19, Y+6	; 0x06
    2e9a:	22 30       	cpi	r18, 0x02	; 2
    2e9c:	31 05       	cpc	r19, r1
    2e9e:	2c f4       	brge	.+10     	; 0x2eaa <DIO_u8GetPortValue+0x48>
    2ea0:	8d 81       	ldd	r24, Y+5	; 0x05
    2ea2:	9e 81       	ldd	r25, Y+6	; 0x06
    2ea4:	00 97       	sbiw	r24, 0x00	; 0
    2ea6:	61 f0       	breq	.+24     	; 0x2ec0 <DIO_u8GetPortValue+0x5e>
    2ea8:	27 c0       	rjmp	.+78     	; 0x2ef8 <DIO_u8GetPortValue+0x96>
    2eaa:	2d 81       	ldd	r18, Y+5	; 0x05
    2eac:	3e 81       	ldd	r19, Y+6	; 0x06
    2eae:	22 30       	cpi	r18, 0x02	; 2
    2eb0:	31 05       	cpc	r19, r1
    2eb2:	a1 f0       	breq	.+40     	; 0x2edc <DIO_u8GetPortValue+0x7a>
    2eb4:	8d 81       	ldd	r24, Y+5	; 0x05
    2eb6:	9e 81       	ldd	r25, Y+6	; 0x06
    2eb8:	83 30       	cpi	r24, 0x03	; 3
    2eba:	91 05       	cpc	r25, r1
    2ebc:	b1 f0       	breq	.+44     	; 0x2eea <DIO_u8GetPortValue+0x88>
    2ebe:	1c c0       	rjmp	.+56     	; 0x2ef8 <DIO_u8GetPortValue+0x96>
		{
		case DIO_PORTA: *Copy_u8Variable = PINA; break;
    2ec0:	e9 e3       	ldi	r30, 0x39	; 57
    2ec2:	f0 e0       	ldi	r31, 0x00	; 0
    2ec4:	80 81       	ld	r24, Z
    2ec6:	eb 81       	ldd	r30, Y+3	; 0x03
    2ec8:	fc 81       	ldd	r31, Y+4	; 0x04
    2eca:	80 83       	st	Z, r24
    2ecc:	1a c0       	rjmp	.+52     	; 0x2f02 <DIO_u8GetPortValue+0xa0>
		case DIO_PORTB:	*Copy_u8Variable = PINB; break;
    2ece:	e6 e3       	ldi	r30, 0x36	; 54
    2ed0:	f0 e0       	ldi	r31, 0x00	; 0
    2ed2:	80 81       	ld	r24, Z
    2ed4:	eb 81       	ldd	r30, Y+3	; 0x03
    2ed6:	fc 81       	ldd	r31, Y+4	; 0x04
    2ed8:	80 83       	st	Z, r24
    2eda:	13 c0       	rjmp	.+38     	; 0x2f02 <DIO_u8GetPortValue+0xa0>
		case DIO_PORTC: *Copy_u8Variable = PINC; break;
    2edc:	e3 e3       	ldi	r30, 0x33	; 51
    2ede:	f0 e0       	ldi	r31, 0x00	; 0
    2ee0:	80 81       	ld	r24, Z
    2ee2:	eb 81       	ldd	r30, Y+3	; 0x03
    2ee4:	fc 81       	ldd	r31, Y+4	; 0x04
    2ee6:	80 83       	st	Z, r24
    2ee8:	0c c0       	rjmp	.+24     	; 0x2f02 <DIO_u8GetPortValue+0xa0>
		case DIO_PORTD: *Copy_u8Variable = PIND; break;
    2eea:	e0 e3       	ldi	r30, 0x30	; 48
    2eec:	f0 e0       	ldi	r31, 0x00	; 0
    2eee:	80 81       	ld	r24, Z
    2ef0:	eb 81       	ldd	r30, Y+3	; 0x03
    2ef2:	fc 81       	ldd	r31, Y+4	; 0x04
    2ef4:	80 83       	st	Z, r24
    2ef6:	05 c0       	rjmp	.+10     	; 0x2f02 <DIO_u8GetPortValue+0xa0>
		default: Local_u8RunState = DIO_ERROR;
    2ef8:	81 e0       	ldi	r24, 0x01	; 1
    2efa:	89 83       	std	Y+1, r24	; 0x01
    2efc:	02 c0       	rjmp	.+4      	; 0x2f02 <DIO_u8GetPortValue+0xa0>
		}
	}
	else
	{
		Local_u8RunState = DIO_ERROR;
    2efe:	81 e0       	ldi	r24, 0x01	; 1
    2f00:	89 83       	std	Y+1, r24	; 0x01
	}
	return Local_u8RunState;
    2f02:	89 81       	ldd	r24, Y+1	; 0x01
}
    2f04:	26 96       	adiw	r28, 0x06	; 6
    2f06:	0f b6       	in	r0, 0x3f	; 63
    2f08:	f8 94       	cli
    2f0a:	de bf       	out	0x3e, r29	; 62
    2f0c:	0f be       	out	0x3f, r0	; 63
    2f0e:	cd bf       	out	0x3d, r28	; 61
    2f10:	cf 91       	pop	r28
    2f12:	df 91       	pop	r29
    2f14:	08 95       	ret

00002f16 <DIO_u8SetPinDirection>:


u8 DIO_u8SetPinDirection(u8 Copy_u8Port, u8 Copy_u8Pin, u8 Copy_u8Direction)
{
    2f16:	df 93       	push	r29
    2f18:	cf 93       	push	r28
    2f1a:	cd b7       	in	r28, 0x3d	; 61
    2f1c:	de b7       	in	r29, 0x3e	; 62
    2f1e:	28 97       	sbiw	r28, 0x08	; 8
    2f20:	0f b6       	in	r0, 0x3f	; 63
    2f22:	f8 94       	cli
    2f24:	de bf       	out	0x3e, r29	; 62
    2f26:	0f be       	out	0x3f, r0	; 63
    2f28:	cd bf       	out	0x3d, r28	; 61
    2f2a:	8a 83       	std	Y+2, r24	; 0x02
    2f2c:	6b 83       	std	Y+3, r22	; 0x03
    2f2e:	4c 83       	std	Y+4, r20	; 0x04
	u8 Local_u8RunState = DIO_OK;
    2f30:	19 82       	std	Y+1, r1	; 0x01
	if((Copy_u8Pin >= DIO_PIN0) && (Copy_u8Pin <= DIO_PIN7))
    2f32:	8b 81       	ldd	r24, Y+3	; 0x03
    2f34:	88 30       	cpi	r24, 0x08	; 8
    2f36:	08 f0       	brcs	.+2      	; 0x2f3a <DIO_u8SetPinDirection+0x24>
    2f38:	f4 c0       	rjmp	.+488    	; 0x3122 <DIO_u8SetPinDirection+0x20c>
	{
		if(Copy_u8Direction == DIO_PIN_INPUT)
    2f3a:	8c 81       	ldd	r24, Y+4	; 0x04
    2f3c:	88 23       	and	r24, r24
    2f3e:	09 f0       	breq	.+2      	; 0x2f42 <DIO_u8SetPinDirection+0x2c>
    2f40:	77 c0       	rjmp	.+238    	; 0x3030 <DIO_u8SetPinDirection+0x11a>
		{
			switch(Copy_u8Port)
    2f42:	8a 81       	ldd	r24, Y+2	; 0x02
    2f44:	28 2f       	mov	r18, r24
    2f46:	30 e0       	ldi	r19, 0x00	; 0
    2f48:	38 87       	std	Y+8, r19	; 0x08
    2f4a:	2f 83       	std	Y+7, r18	; 0x07
    2f4c:	8f 81       	ldd	r24, Y+7	; 0x07
    2f4e:	98 85       	ldd	r25, Y+8	; 0x08
    2f50:	81 30       	cpi	r24, 0x01	; 1
    2f52:	91 05       	cpc	r25, r1
    2f54:	59 f1       	breq	.+86     	; 0x2fac <DIO_u8SetPinDirection+0x96>
    2f56:	2f 81       	ldd	r18, Y+7	; 0x07
    2f58:	38 85       	ldd	r19, Y+8	; 0x08
    2f5a:	22 30       	cpi	r18, 0x02	; 2
    2f5c:	31 05       	cpc	r19, r1
    2f5e:	2c f4       	brge	.+10     	; 0x2f6a <DIO_u8SetPinDirection+0x54>
    2f60:	8f 81       	ldd	r24, Y+7	; 0x07
    2f62:	98 85       	ldd	r25, Y+8	; 0x08
    2f64:	00 97       	sbiw	r24, 0x00	; 0
    2f66:	69 f0       	breq	.+26     	; 0x2f82 <DIO_u8SetPinDirection+0x6c>
    2f68:	60 c0       	rjmp	.+192    	; 0x302a <DIO_u8SetPinDirection+0x114>
    2f6a:	2f 81       	ldd	r18, Y+7	; 0x07
    2f6c:	38 85       	ldd	r19, Y+8	; 0x08
    2f6e:	22 30       	cpi	r18, 0x02	; 2
    2f70:	31 05       	cpc	r19, r1
    2f72:	89 f1       	breq	.+98     	; 0x2fd6 <DIO_u8SetPinDirection+0xc0>
    2f74:	8f 81       	ldd	r24, Y+7	; 0x07
    2f76:	98 85       	ldd	r25, Y+8	; 0x08
    2f78:	83 30       	cpi	r24, 0x03	; 3
    2f7a:	91 05       	cpc	r25, r1
    2f7c:	09 f4       	brne	.+2      	; 0x2f80 <DIO_u8SetPinDirection+0x6a>
    2f7e:	40 c0       	rjmp	.+128    	; 0x3000 <DIO_u8SetPinDirection+0xea>
    2f80:	54 c0       	rjmp	.+168    	; 0x302a <DIO_u8SetPinDirection+0x114>
			{
			case DIO_PORTA: CLR_BIT(DDRA, Copy_u8Pin); break;
    2f82:	aa e3       	ldi	r26, 0x3A	; 58
    2f84:	b0 e0       	ldi	r27, 0x00	; 0
    2f86:	ea e3       	ldi	r30, 0x3A	; 58
    2f88:	f0 e0       	ldi	r31, 0x00	; 0
    2f8a:	80 81       	ld	r24, Z
    2f8c:	48 2f       	mov	r20, r24
    2f8e:	8b 81       	ldd	r24, Y+3	; 0x03
    2f90:	28 2f       	mov	r18, r24
    2f92:	30 e0       	ldi	r19, 0x00	; 0
    2f94:	81 e0       	ldi	r24, 0x01	; 1
    2f96:	90 e0       	ldi	r25, 0x00	; 0
    2f98:	02 2e       	mov	r0, r18
    2f9a:	02 c0       	rjmp	.+4      	; 0x2fa0 <DIO_u8SetPinDirection+0x8a>
    2f9c:	88 0f       	add	r24, r24
    2f9e:	99 1f       	adc	r25, r25
    2fa0:	0a 94       	dec	r0
    2fa2:	e2 f7       	brpl	.-8      	; 0x2f9c <DIO_u8SetPinDirection+0x86>
    2fa4:	80 95       	com	r24
    2fa6:	84 23       	and	r24, r20
    2fa8:	8c 93       	st	X, r24
    2faa:	bd c0       	rjmp	.+378    	; 0x3126 <DIO_u8SetPinDirection+0x210>
			case DIO_PORTB:	CLR_BIT(DDRB, Copy_u8Pin); break;
    2fac:	a7 e3       	ldi	r26, 0x37	; 55
    2fae:	b0 e0       	ldi	r27, 0x00	; 0
    2fb0:	e7 e3       	ldi	r30, 0x37	; 55
    2fb2:	f0 e0       	ldi	r31, 0x00	; 0
    2fb4:	80 81       	ld	r24, Z
    2fb6:	48 2f       	mov	r20, r24
    2fb8:	8b 81       	ldd	r24, Y+3	; 0x03
    2fba:	28 2f       	mov	r18, r24
    2fbc:	30 e0       	ldi	r19, 0x00	; 0
    2fbe:	81 e0       	ldi	r24, 0x01	; 1
    2fc0:	90 e0       	ldi	r25, 0x00	; 0
    2fc2:	02 2e       	mov	r0, r18
    2fc4:	02 c0       	rjmp	.+4      	; 0x2fca <DIO_u8SetPinDirection+0xb4>
    2fc6:	88 0f       	add	r24, r24
    2fc8:	99 1f       	adc	r25, r25
    2fca:	0a 94       	dec	r0
    2fcc:	e2 f7       	brpl	.-8      	; 0x2fc6 <DIO_u8SetPinDirection+0xb0>
    2fce:	80 95       	com	r24
    2fd0:	84 23       	and	r24, r20
    2fd2:	8c 93       	st	X, r24
    2fd4:	a8 c0       	rjmp	.+336    	; 0x3126 <DIO_u8SetPinDirection+0x210>
			case DIO_PORTC: CLR_BIT(DDRC, Copy_u8Pin); break;
    2fd6:	a4 e3       	ldi	r26, 0x34	; 52
    2fd8:	b0 e0       	ldi	r27, 0x00	; 0
    2fda:	e4 e3       	ldi	r30, 0x34	; 52
    2fdc:	f0 e0       	ldi	r31, 0x00	; 0
    2fde:	80 81       	ld	r24, Z
    2fe0:	48 2f       	mov	r20, r24
    2fe2:	8b 81       	ldd	r24, Y+3	; 0x03
    2fe4:	28 2f       	mov	r18, r24
    2fe6:	30 e0       	ldi	r19, 0x00	; 0
    2fe8:	81 e0       	ldi	r24, 0x01	; 1
    2fea:	90 e0       	ldi	r25, 0x00	; 0
    2fec:	02 2e       	mov	r0, r18
    2fee:	02 c0       	rjmp	.+4      	; 0x2ff4 <DIO_u8SetPinDirection+0xde>
    2ff0:	88 0f       	add	r24, r24
    2ff2:	99 1f       	adc	r25, r25
    2ff4:	0a 94       	dec	r0
    2ff6:	e2 f7       	brpl	.-8      	; 0x2ff0 <DIO_u8SetPinDirection+0xda>
    2ff8:	80 95       	com	r24
    2ffa:	84 23       	and	r24, r20
    2ffc:	8c 93       	st	X, r24
    2ffe:	93 c0       	rjmp	.+294    	; 0x3126 <DIO_u8SetPinDirection+0x210>
			case DIO_PORTD: CLR_BIT(DDRD, Copy_u8Pin); break;
    3000:	a1 e3       	ldi	r26, 0x31	; 49
    3002:	b0 e0       	ldi	r27, 0x00	; 0
    3004:	e1 e3       	ldi	r30, 0x31	; 49
    3006:	f0 e0       	ldi	r31, 0x00	; 0
    3008:	80 81       	ld	r24, Z
    300a:	48 2f       	mov	r20, r24
    300c:	8b 81       	ldd	r24, Y+3	; 0x03
    300e:	28 2f       	mov	r18, r24
    3010:	30 e0       	ldi	r19, 0x00	; 0
    3012:	81 e0       	ldi	r24, 0x01	; 1
    3014:	90 e0       	ldi	r25, 0x00	; 0
    3016:	02 2e       	mov	r0, r18
    3018:	02 c0       	rjmp	.+4      	; 0x301e <DIO_u8SetPinDirection+0x108>
    301a:	88 0f       	add	r24, r24
    301c:	99 1f       	adc	r25, r25
    301e:	0a 94       	dec	r0
    3020:	e2 f7       	brpl	.-8      	; 0x301a <DIO_u8SetPinDirection+0x104>
    3022:	80 95       	com	r24
    3024:	84 23       	and	r24, r20
    3026:	8c 93       	st	X, r24
    3028:	7e c0       	rjmp	.+252    	; 0x3126 <DIO_u8SetPinDirection+0x210>
			default: Local_u8RunState = DIO_ERROR;
    302a:	81 e0       	ldi	r24, 0x01	; 1
    302c:	89 83       	std	Y+1, r24	; 0x01
    302e:	7b c0       	rjmp	.+246    	; 0x3126 <DIO_u8SetPinDirection+0x210>
			}
		}
		else if(Copy_u8Direction == DIO_PIN_OUTPUT)
    3030:	8c 81       	ldd	r24, Y+4	; 0x04
    3032:	81 30       	cpi	r24, 0x01	; 1
    3034:	09 f0       	breq	.+2      	; 0x3038 <DIO_u8SetPinDirection+0x122>
    3036:	72 c0       	rjmp	.+228    	; 0x311c <DIO_u8SetPinDirection+0x206>
		{
			switch(Copy_u8Port)
    3038:	8a 81       	ldd	r24, Y+2	; 0x02
    303a:	28 2f       	mov	r18, r24
    303c:	30 e0       	ldi	r19, 0x00	; 0
    303e:	3e 83       	std	Y+6, r19	; 0x06
    3040:	2d 83       	std	Y+5, r18	; 0x05
    3042:	8d 81       	ldd	r24, Y+5	; 0x05
    3044:	9e 81       	ldd	r25, Y+6	; 0x06
    3046:	81 30       	cpi	r24, 0x01	; 1
    3048:	91 05       	cpc	r25, r1
    304a:	49 f1       	breq	.+82     	; 0x309e <DIO_u8SetPinDirection+0x188>
    304c:	2d 81       	ldd	r18, Y+5	; 0x05
    304e:	3e 81       	ldd	r19, Y+6	; 0x06
    3050:	22 30       	cpi	r18, 0x02	; 2
    3052:	31 05       	cpc	r19, r1
    3054:	2c f4       	brge	.+10     	; 0x3060 <DIO_u8SetPinDirection+0x14a>
    3056:	8d 81       	ldd	r24, Y+5	; 0x05
    3058:	9e 81       	ldd	r25, Y+6	; 0x06
    305a:	00 97       	sbiw	r24, 0x00	; 0
    305c:	61 f0       	breq	.+24     	; 0x3076 <DIO_u8SetPinDirection+0x160>
    305e:	5b c0       	rjmp	.+182    	; 0x3116 <DIO_u8SetPinDirection+0x200>
    3060:	2d 81       	ldd	r18, Y+5	; 0x05
    3062:	3e 81       	ldd	r19, Y+6	; 0x06
    3064:	22 30       	cpi	r18, 0x02	; 2
    3066:	31 05       	cpc	r19, r1
    3068:	71 f1       	breq	.+92     	; 0x30c6 <DIO_u8SetPinDirection+0x1b0>
    306a:	8d 81       	ldd	r24, Y+5	; 0x05
    306c:	9e 81       	ldd	r25, Y+6	; 0x06
    306e:	83 30       	cpi	r24, 0x03	; 3
    3070:	91 05       	cpc	r25, r1
    3072:	e9 f1       	breq	.+122    	; 0x30ee <DIO_u8SetPinDirection+0x1d8>
    3074:	50 c0       	rjmp	.+160    	; 0x3116 <DIO_u8SetPinDirection+0x200>
			{
			case DIO_PORTA: SET_BIT(DDRA, Copy_u8Pin); break;
    3076:	aa e3       	ldi	r26, 0x3A	; 58
    3078:	b0 e0       	ldi	r27, 0x00	; 0
    307a:	ea e3       	ldi	r30, 0x3A	; 58
    307c:	f0 e0       	ldi	r31, 0x00	; 0
    307e:	80 81       	ld	r24, Z
    3080:	48 2f       	mov	r20, r24
    3082:	8b 81       	ldd	r24, Y+3	; 0x03
    3084:	28 2f       	mov	r18, r24
    3086:	30 e0       	ldi	r19, 0x00	; 0
    3088:	81 e0       	ldi	r24, 0x01	; 1
    308a:	90 e0       	ldi	r25, 0x00	; 0
    308c:	02 2e       	mov	r0, r18
    308e:	02 c0       	rjmp	.+4      	; 0x3094 <DIO_u8SetPinDirection+0x17e>
    3090:	88 0f       	add	r24, r24
    3092:	99 1f       	adc	r25, r25
    3094:	0a 94       	dec	r0
    3096:	e2 f7       	brpl	.-8      	; 0x3090 <DIO_u8SetPinDirection+0x17a>
    3098:	84 2b       	or	r24, r20
    309a:	8c 93       	st	X, r24
    309c:	44 c0       	rjmp	.+136    	; 0x3126 <DIO_u8SetPinDirection+0x210>
			case DIO_PORTB:	SET_BIT(DDRB, Copy_u8Pin); break;
    309e:	a7 e3       	ldi	r26, 0x37	; 55
    30a0:	b0 e0       	ldi	r27, 0x00	; 0
    30a2:	e7 e3       	ldi	r30, 0x37	; 55
    30a4:	f0 e0       	ldi	r31, 0x00	; 0
    30a6:	80 81       	ld	r24, Z
    30a8:	48 2f       	mov	r20, r24
    30aa:	8b 81       	ldd	r24, Y+3	; 0x03
    30ac:	28 2f       	mov	r18, r24
    30ae:	30 e0       	ldi	r19, 0x00	; 0
    30b0:	81 e0       	ldi	r24, 0x01	; 1
    30b2:	90 e0       	ldi	r25, 0x00	; 0
    30b4:	02 2e       	mov	r0, r18
    30b6:	02 c0       	rjmp	.+4      	; 0x30bc <DIO_u8SetPinDirection+0x1a6>
    30b8:	88 0f       	add	r24, r24
    30ba:	99 1f       	adc	r25, r25
    30bc:	0a 94       	dec	r0
    30be:	e2 f7       	brpl	.-8      	; 0x30b8 <DIO_u8SetPinDirection+0x1a2>
    30c0:	84 2b       	or	r24, r20
    30c2:	8c 93       	st	X, r24
    30c4:	30 c0       	rjmp	.+96     	; 0x3126 <DIO_u8SetPinDirection+0x210>
			case DIO_PORTC: SET_BIT(DDRC, Copy_u8Pin); break;
    30c6:	a4 e3       	ldi	r26, 0x34	; 52
    30c8:	b0 e0       	ldi	r27, 0x00	; 0
    30ca:	e4 e3       	ldi	r30, 0x34	; 52
    30cc:	f0 e0       	ldi	r31, 0x00	; 0
    30ce:	80 81       	ld	r24, Z
    30d0:	48 2f       	mov	r20, r24
    30d2:	8b 81       	ldd	r24, Y+3	; 0x03
    30d4:	28 2f       	mov	r18, r24
    30d6:	30 e0       	ldi	r19, 0x00	; 0
    30d8:	81 e0       	ldi	r24, 0x01	; 1
    30da:	90 e0       	ldi	r25, 0x00	; 0
    30dc:	02 2e       	mov	r0, r18
    30de:	02 c0       	rjmp	.+4      	; 0x30e4 <DIO_u8SetPinDirection+0x1ce>
    30e0:	88 0f       	add	r24, r24
    30e2:	99 1f       	adc	r25, r25
    30e4:	0a 94       	dec	r0
    30e6:	e2 f7       	brpl	.-8      	; 0x30e0 <DIO_u8SetPinDirection+0x1ca>
    30e8:	84 2b       	or	r24, r20
    30ea:	8c 93       	st	X, r24
    30ec:	1c c0       	rjmp	.+56     	; 0x3126 <DIO_u8SetPinDirection+0x210>
			case DIO_PORTD: SET_BIT(DDRD, Copy_u8Pin); break;
    30ee:	a1 e3       	ldi	r26, 0x31	; 49
    30f0:	b0 e0       	ldi	r27, 0x00	; 0
    30f2:	e1 e3       	ldi	r30, 0x31	; 49
    30f4:	f0 e0       	ldi	r31, 0x00	; 0
    30f6:	80 81       	ld	r24, Z
    30f8:	48 2f       	mov	r20, r24
    30fa:	8b 81       	ldd	r24, Y+3	; 0x03
    30fc:	28 2f       	mov	r18, r24
    30fe:	30 e0       	ldi	r19, 0x00	; 0
    3100:	81 e0       	ldi	r24, 0x01	; 1
    3102:	90 e0       	ldi	r25, 0x00	; 0
    3104:	02 2e       	mov	r0, r18
    3106:	02 c0       	rjmp	.+4      	; 0x310c <DIO_u8SetPinDirection+0x1f6>
    3108:	88 0f       	add	r24, r24
    310a:	99 1f       	adc	r25, r25
    310c:	0a 94       	dec	r0
    310e:	e2 f7       	brpl	.-8      	; 0x3108 <DIO_u8SetPinDirection+0x1f2>
    3110:	84 2b       	or	r24, r20
    3112:	8c 93       	st	X, r24
    3114:	08 c0       	rjmp	.+16     	; 0x3126 <DIO_u8SetPinDirection+0x210>
			default: Local_u8RunState = DIO_ERROR;
    3116:	81 e0       	ldi	r24, 0x01	; 1
    3118:	89 83       	std	Y+1, r24	; 0x01
    311a:	05 c0       	rjmp	.+10     	; 0x3126 <DIO_u8SetPinDirection+0x210>
			}
		}
		else
		{
			Local_u8RunState = DIO_ERROR;
    311c:	81 e0       	ldi	r24, 0x01	; 1
    311e:	89 83       	std	Y+1, r24	; 0x01
    3120:	02 c0       	rjmp	.+4      	; 0x3126 <DIO_u8SetPinDirection+0x210>
		}
	}
	else
	{
		Local_u8RunState = DIO_ERROR;
    3122:	81 e0       	ldi	r24, 0x01	; 1
    3124:	89 83       	std	Y+1, r24	; 0x01
	}
	return Local_u8RunState;
    3126:	89 81       	ldd	r24, Y+1	; 0x01
}
    3128:	28 96       	adiw	r28, 0x08	; 8
    312a:	0f b6       	in	r0, 0x3f	; 63
    312c:	f8 94       	cli
    312e:	de bf       	out	0x3e, r29	; 62
    3130:	0f be       	out	0x3f, r0	; 63
    3132:	cd bf       	out	0x3d, r28	; 61
    3134:	cf 91       	pop	r28
    3136:	df 91       	pop	r29
    3138:	08 95       	ret

0000313a <DIO_u8SetPinValue>:


u8 DIO_u8SetPinValue(u8 Copy_u8Port, u8 Copy_u8Pin, u8 Copy_u8Value)
{
    313a:	df 93       	push	r29
    313c:	cf 93       	push	r28
    313e:	cd b7       	in	r28, 0x3d	; 61
    3140:	de b7       	in	r29, 0x3e	; 62
    3142:	28 97       	sbiw	r28, 0x08	; 8
    3144:	0f b6       	in	r0, 0x3f	; 63
    3146:	f8 94       	cli
    3148:	de bf       	out	0x3e, r29	; 62
    314a:	0f be       	out	0x3f, r0	; 63
    314c:	cd bf       	out	0x3d, r28	; 61
    314e:	8a 83       	std	Y+2, r24	; 0x02
    3150:	6b 83       	std	Y+3, r22	; 0x03
    3152:	4c 83       	std	Y+4, r20	; 0x04
	u8 Local_u8RunState = DIO_OK;
    3154:	19 82       	std	Y+1, r1	; 0x01
	if((Copy_u8Pin >= DIO_PIN0) && (Copy_u8Pin <= DIO_PIN7))
    3156:	8b 81       	ldd	r24, Y+3	; 0x03
    3158:	88 30       	cpi	r24, 0x08	; 8
    315a:	08 f0       	brcs	.+2      	; 0x315e <DIO_u8SetPinValue+0x24>
    315c:	f4 c0       	rjmp	.+488    	; 0x3346 <DIO_u8SetPinValue+0x20c>
	{
		if(Copy_u8Value == DIO_PIN_LOW)
    315e:	8c 81       	ldd	r24, Y+4	; 0x04
    3160:	88 23       	and	r24, r24
    3162:	09 f0       	breq	.+2      	; 0x3166 <DIO_u8SetPinValue+0x2c>
    3164:	77 c0       	rjmp	.+238    	; 0x3254 <DIO_u8SetPinValue+0x11a>
		{
			switch(Copy_u8Port)
    3166:	8a 81       	ldd	r24, Y+2	; 0x02
    3168:	28 2f       	mov	r18, r24
    316a:	30 e0       	ldi	r19, 0x00	; 0
    316c:	38 87       	std	Y+8, r19	; 0x08
    316e:	2f 83       	std	Y+7, r18	; 0x07
    3170:	8f 81       	ldd	r24, Y+7	; 0x07
    3172:	98 85       	ldd	r25, Y+8	; 0x08
    3174:	81 30       	cpi	r24, 0x01	; 1
    3176:	91 05       	cpc	r25, r1
    3178:	59 f1       	breq	.+86     	; 0x31d0 <DIO_u8SetPinValue+0x96>
    317a:	2f 81       	ldd	r18, Y+7	; 0x07
    317c:	38 85       	ldd	r19, Y+8	; 0x08
    317e:	22 30       	cpi	r18, 0x02	; 2
    3180:	31 05       	cpc	r19, r1
    3182:	2c f4       	brge	.+10     	; 0x318e <DIO_u8SetPinValue+0x54>
    3184:	8f 81       	ldd	r24, Y+7	; 0x07
    3186:	98 85       	ldd	r25, Y+8	; 0x08
    3188:	00 97       	sbiw	r24, 0x00	; 0
    318a:	69 f0       	breq	.+26     	; 0x31a6 <DIO_u8SetPinValue+0x6c>
    318c:	60 c0       	rjmp	.+192    	; 0x324e <DIO_u8SetPinValue+0x114>
    318e:	2f 81       	ldd	r18, Y+7	; 0x07
    3190:	38 85       	ldd	r19, Y+8	; 0x08
    3192:	22 30       	cpi	r18, 0x02	; 2
    3194:	31 05       	cpc	r19, r1
    3196:	89 f1       	breq	.+98     	; 0x31fa <DIO_u8SetPinValue+0xc0>
    3198:	8f 81       	ldd	r24, Y+7	; 0x07
    319a:	98 85       	ldd	r25, Y+8	; 0x08
    319c:	83 30       	cpi	r24, 0x03	; 3
    319e:	91 05       	cpc	r25, r1
    31a0:	09 f4       	brne	.+2      	; 0x31a4 <DIO_u8SetPinValue+0x6a>
    31a2:	40 c0       	rjmp	.+128    	; 0x3224 <DIO_u8SetPinValue+0xea>
    31a4:	54 c0       	rjmp	.+168    	; 0x324e <DIO_u8SetPinValue+0x114>
			{
			case DIO_PORTA: CLR_BIT(PORTA, Copy_u8Pin); break;
    31a6:	ab e3       	ldi	r26, 0x3B	; 59
    31a8:	b0 e0       	ldi	r27, 0x00	; 0
    31aa:	eb e3       	ldi	r30, 0x3B	; 59
    31ac:	f0 e0       	ldi	r31, 0x00	; 0
    31ae:	80 81       	ld	r24, Z
    31b0:	48 2f       	mov	r20, r24
    31b2:	8b 81       	ldd	r24, Y+3	; 0x03
    31b4:	28 2f       	mov	r18, r24
    31b6:	30 e0       	ldi	r19, 0x00	; 0
    31b8:	81 e0       	ldi	r24, 0x01	; 1
    31ba:	90 e0       	ldi	r25, 0x00	; 0
    31bc:	02 2e       	mov	r0, r18
    31be:	02 c0       	rjmp	.+4      	; 0x31c4 <DIO_u8SetPinValue+0x8a>
    31c0:	88 0f       	add	r24, r24
    31c2:	99 1f       	adc	r25, r25
    31c4:	0a 94       	dec	r0
    31c6:	e2 f7       	brpl	.-8      	; 0x31c0 <DIO_u8SetPinValue+0x86>
    31c8:	80 95       	com	r24
    31ca:	84 23       	and	r24, r20
    31cc:	8c 93       	st	X, r24
    31ce:	bd c0       	rjmp	.+378    	; 0x334a <DIO_u8SetPinValue+0x210>
			case DIO_PORTB:	CLR_BIT(PORTB, Copy_u8Pin); break;
    31d0:	a8 e3       	ldi	r26, 0x38	; 56
    31d2:	b0 e0       	ldi	r27, 0x00	; 0
    31d4:	e8 e3       	ldi	r30, 0x38	; 56
    31d6:	f0 e0       	ldi	r31, 0x00	; 0
    31d8:	80 81       	ld	r24, Z
    31da:	48 2f       	mov	r20, r24
    31dc:	8b 81       	ldd	r24, Y+3	; 0x03
    31de:	28 2f       	mov	r18, r24
    31e0:	30 e0       	ldi	r19, 0x00	; 0
    31e2:	81 e0       	ldi	r24, 0x01	; 1
    31e4:	90 e0       	ldi	r25, 0x00	; 0
    31e6:	02 2e       	mov	r0, r18
    31e8:	02 c0       	rjmp	.+4      	; 0x31ee <DIO_u8SetPinValue+0xb4>
    31ea:	88 0f       	add	r24, r24
    31ec:	99 1f       	adc	r25, r25
    31ee:	0a 94       	dec	r0
    31f0:	e2 f7       	brpl	.-8      	; 0x31ea <DIO_u8SetPinValue+0xb0>
    31f2:	80 95       	com	r24
    31f4:	84 23       	and	r24, r20
    31f6:	8c 93       	st	X, r24
    31f8:	a8 c0       	rjmp	.+336    	; 0x334a <DIO_u8SetPinValue+0x210>
			case DIO_PORTC: CLR_BIT(PORTC, Copy_u8Pin); break;
    31fa:	a5 e3       	ldi	r26, 0x35	; 53
    31fc:	b0 e0       	ldi	r27, 0x00	; 0
    31fe:	e5 e3       	ldi	r30, 0x35	; 53
    3200:	f0 e0       	ldi	r31, 0x00	; 0
    3202:	80 81       	ld	r24, Z
    3204:	48 2f       	mov	r20, r24
    3206:	8b 81       	ldd	r24, Y+3	; 0x03
    3208:	28 2f       	mov	r18, r24
    320a:	30 e0       	ldi	r19, 0x00	; 0
    320c:	81 e0       	ldi	r24, 0x01	; 1
    320e:	90 e0       	ldi	r25, 0x00	; 0
    3210:	02 2e       	mov	r0, r18
    3212:	02 c0       	rjmp	.+4      	; 0x3218 <DIO_u8SetPinValue+0xde>
    3214:	88 0f       	add	r24, r24
    3216:	99 1f       	adc	r25, r25
    3218:	0a 94       	dec	r0
    321a:	e2 f7       	brpl	.-8      	; 0x3214 <DIO_u8SetPinValue+0xda>
    321c:	80 95       	com	r24
    321e:	84 23       	and	r24, r20
    3220:	8c 93       	st	X, r24
    3222:	93 c0       	rjmp	.+294    	; 0x334a <DIO_u8SetPinValue+0x210>
			case DIO_PORTD: CLR_BIT(PORTD, Copy_u8Pin); break;
    3224:	a2 e3       	ldi	r26, 0x32	; 50
    3226:	b0 e0       	ldi	r27, 0x00	; 0
    3228:	e2 e3       	ldi	r30, 0x32	; 50
    322a:	f0 e0       	ldi	r31, 0x00	; 0
    322c:	80 81       	ld	r24, Z
    322e:	48 2f       	mov	r20, r24
    3230:	8b 81       	ldd	r24, Y+3	; 0x03
    3232:	28 2f       	mov	r18, r24
    3234:	30 e0       	ldi	r19, 0x00	; 0
    3236:	81 e0       	ldi	r24, 0x01	; 1
    3238:	90 e0       	ldi	r25, 0x00	; 0
    323a:	02 2e       	mov	r0, r18
    323c:	02 c0       	rjmp	.+4      	; 0x3242 <DIO_u8SetPinValue+0x108>
    323e:	88 0f       	add	r24, r24
    3240:	99 1f       	adc	r25, r25
    3242:	0a 94       	dec	r0
    3244:	e2 f7       	brpl	.-8      	; 0x323e <DIO_u8SetPinValue+0x104>
    3246:	80 95       	com	r24
    3248:	84 23       	and	r24, r20
    324a:	8c 93       	st	X, r24
    324c:	7e c0       	rjmp	.+252    	; 0x334a <DIO_u8SetPinValue+0x210>
			default: Local_u8RunState = DIO_ERROR;
    324e:	81 e0       	ldi	r24, 0x01	; 1
    3250:	89 83       	std	Y+1, r24	; 0x01
    3252:	7b c0       	rjmp	.+246    	; 0x334a <DIO_u8SetPinValue+0x210>
			}
		}
		else if(Copy_u8Value == DIO_PIN_HIGH)
    3254:	8c 81       	ldd	r24, Y+4	; 0x04
    3256:	81 30       	cpi	r24, 0x01	; 1
    3258:	09 f0       	breq	.+2      	; 0x325c <DIO_u8SetPinValue+0x122>
    325a:	72 c0       	rjmp	.+228    	; 0x3340 <DIO_u8SetPinValue+0x206>
		{
			switch(Copy_u8Port)
    325c:	8a 81       	ldd	r24, Y+2	; 0x02
    325e:	28 2f       	mov	r18, r24
    3260:	30 e0       	ldi	r19, 0x00	; 0
    3262:	3e 83       	std	Y+6, r19	; 0x06
    3264:	2d 83       	std	Y+5, r18	; 0x05
    3266:	8d 81       	ldd	r24, Y+5	; 0x05
    3268:	9e 81       	ldd	r25, Y+6	; 0x06
    326a:	81 30       	cpi	r24, 0x01	; 1
    326c:	91 05       	cpc	r25, r1
    326e:	49 f1       	breq	.+82     	; 0x32c2 <DIO_u8SetPinValue+0x188>
    3270:	2d 81       	ldd	r18, Y+5	; 0x05
    3272:	3e 81       	ldd	r19, Y+6	; 0x06
    3274:	22 30       	cpi	r18, 0x02	; 2
    3276:	31 05       	cpc	r19, r1
    3278:	2c f4       	brge	.+10     	; 0x3284 <DIO_u8SetPinValue+0x14a>
    327a:	8d 81       	ldd	r24, Y+5	; 0x05
    327c:	9e 81       	ldd	r25, Y+6	; 0x06
    327e:	00 97       	sbiw	r24, 0x00	; 0
    3280:	61 f0       	breq	.+24     	; 0x329a <DIO_u8SetPinValue+0x160>
    3282:	5b c0       	rjmp	.+182    	; 0x333a <DIO_u8SetPinValue+0x200>
    3284:	2d 81       	ldd	r18, Y+5	; 0x05
    3286:	3e 81       	ldd	r19, Y+6	; 0x06
    3288:	22 30       	cpi	r18, 0x02	; 2
    328a:	31 05       	cpc	r19, r1
    328c:	71 f1       	breq	.+92     	; 0x32ea <DIO_u8SetPinValue+0x1b0>
    328e:	8d 81       	ldd	r24, Y+5	; 0x05
    3290:	9e 81       	ldd	r25, Y+6	; 0x06
    3292:	83 30       	cpi	r24, 0x03	; 3
    3294:	91 05       	cpc	r25, r1
    3296:	e9 f1       	breq	.+122    	; 0x3312 <DIO_u8SetPinValue+0x1d8>
    3298:	50 c0       	rjmp	.+160    	; 0x333a <DIO_u8SetPinValue+0x200>
			{
			case DIO_PORTA: SET_BIT(PORTA, Copy_u8Pin); break;
    329a:	ab e3       	ldi	r26, 0x3B	; 59
    329c:	b0 e0       	ldi	r27, 0x00	; 0
    329e:	eb e3       	ldi	r30, 0x3B	; 59
    32a0:	f0 e0       	ldi	r31, 0x00	; 0
    32a2:	80 81       	ld	r24, Z
    32a4:	48 2f       	mov	r20, r24
    32a6:	8b 81       	ldd	r24, Y+3	; 0x03
    32a8:	28 2f       	mov	r18, r24
    32aa:	30 e0       	ldi	r19, 0x00	; 0
    32ac:	81 e0       	ldi	r24, 0x01	; 1
    32ae:	90 e0       	ldi	r25, 0x00	; 0
    32b0:	02 2e       	mov	r0, r18
    32b2:	02 c0       	rjmp	.+4      	; 0x32b8 <DIO_u8SetPinValue+0x17e>
    32b4:	88 0f       	add	r24, r24
    32b6:	99 1f       	adc	r25, r25
    32b8:	0a 94       	dec	r0
    32ba:	e2 f7       	brpl	.-8      	; 0x32b4 <DIO_u8SetPinValue+0x17a>
    32bc:	84 2b       	or	r24, r20
    32be:	8c 93       	st	X, r24
    32c0:	44 c0       	rjmp	.+136    	; 0x334a <DIO_u8SetPinValue+0x210>
			case DIO_PORTB:	SET_BIT(PORTB, Copy_u8Pin); break;
    32c2:	a8 e3       	ldi	r26, 0x38	; 56
    32c4:	b0 e0       	ldi	r27, 0x00	; 0
    32c6:	e8 e3       	ldi	r30, 0x38	; 56
    32c8:	f0 e0       	ldi	r31, 0x00	; 0
    32ca:	80 81       	ld	r24, Z
    32cc:	48 2f       	mov	r20, r24
    32ce:	8b 81       	ldd	r24, Y+3	; 0x03
    32d0:	28 2f       	mov	r18, r24
    32d2:	30 e0       	ldi	r19, 0x00	; 0
    32d4:	81 e0       	ldi	r24, 0x01	; 1
    32d6:	90 e0       	ldi	r25, 0x00	; 0
    32d8:	02 2e       	mov	r0, r18
    32da:	02 c0       	rjmp	.+4      	; 0x32e0 <DIO_u8SetPinValue+0x1a6>
    32dc:	88 0f       	add	r24, r24
    32de:	99 1f       	adc	r25, r25
    32e0:	0a 94       	dec	r0
    32e2:	e2 f7       	brpl	.-8      	; 0x32dc <DIO_u8SetPinValue+0x1a2>
    32e4:	84 2b       	or	r24, r20
    32e6:	8c 93       	st	X, r24
    32e8:	30 c0       	rjmp	.+96     	; 0x334a <DIO_u8SetPinValue+0x210>
			case DIO_PORTC: SET_BIT(PORTC, Copy_u8Pin); break;
    32ea:	a5 e3       	ldi	r26, 0x35	; 53
    32ec:	b0 e0       	ldi	r27, 0x00	; 0
    32ee:	e5 e3       	ldi	r30, 0x35	; 53
    32f0:	f0 e0       	ldi	r31, 0x00	; 0
    32f2:	80 81       	ld	r24, Z
    32f4:	48 2f       	mov	r20, r24
    32f6:	8b 81       	ldd	r24, Y+3	; 0x03
    32f8:	28 2f       	mov	r18, r24
    32fa:	30 e0       	ldi	r19, 0x00	; 0
    32fc:	81 e0       	ldi	r24, 0x01	; 1
    32fe:	90 e0       	ldi	r25, 0x00	; 0
    3300:	02 2e       	mov	r0, r18
    3302:	02 c0       	rjmp	.+4      	; 0x3308 <DIO_u8SetPinValue+0x1ce>
    3304:	88 0f       	add	r24, r24
    3306:	99 1f       	adc	r25, r25
    3308:	0a 94       	dec	r0
    330a:	e2 f7       	brpl	.-8      	; 0x3304 <DIO_u8SetPinValue+0x1ca>
    330c:	84 2b       	or	r24, r20
    330e:	8c 93       	st	X, r24
    3310:	1c c0       	rjmp	.+56     	; 0x334a <DIO_u8SetPinValue+0x210>
			case DIO_PORTD: SET_BIT(PORTD, Copy_u8Pin); break;
    3312:	a2 e3       	ldi	r26, 0x32	; 50
    3314:	b0 e0       	ldi	r27, 0x00	; 0
    3316:	e2 e3       	ldi	r30, 0x32	; 50
    3318:	f0 e0       	ldi	r31, 0x00	; 0
    331a:	80 81       	ld	r24, Z
    331c:	48 2f       	mov	r20, r24
    331e:	8b 81       	ldd	r24, Y+3	; 0x03
    3320:	28 2f       	mov	r18, r24
    3322:	30 e0       	ldi	r19, 0x00	; 0
    3324:	81 e0       	ldi	r24, 0x01	; 1
    3326:	90 e0       	ldi	r25, 0x00	; 0
    3328:	02 2e       	mov	r0, r18
    332a:	02 c0       	rjmp	.+4      	; 0x3330 <DIO_u8SetPinValue+0x1f6>
    332c:	88 0f       	add	r24, r24
    332e:	99 1f       	adc	r25, r25
    3330:	0a 94       	dec	r0
    3332:	e2 f7       	brpl	.-8      	; 0x332c <DIO_u8SetPinValue+0x1f2>
    3334:	84 2b       	or	r24, r20
    3336:	8c 93       	st	X, r24
    3338:	08 c0       	rjmp	.+16     	; 0x334a <DIO_u8SetPinValue+0x210>
			default: Local_u8RunState = DIO_ERROR;
    333a:	81 e0       	ldi	r24, 0x01	; 1
    333c:	89 83       	std	Y+1, r24	; 0x01
    333e:	05 c0       	rjmp	.+10     	; 0x334a <DIO_u8SetPinValue+0x210>
			}
		}
		else
		{
			Local_u8RunState = DIO_ERROR;
    3340:	81 e0       	ldi	r24, 0x01	; 1
    3342:	89 83       	std	Y+1, r24	; 0x01
    3344:	02 c0       	rjmp	.+4      	; 0x334a <DIO_u8SetPinValue+0x210>
		}
	}
	else
	{
		Local_u8RunState = DIO_ERROR;
    3346:	81 e0       	ldi	r24, 0x01	; 1
    3348:	89 83       	std	Y+1, r24	; 0x01
	}
	return Local_u8RunState;
    334a:	89 81       	ldd	r24, Y+1	; 0x01
}
    334c:	28 96       	adiw	r28, 0x08	; 8
    334e:	0f b6       	in	r0, 0x3f	; 63
    3350:	f8 94       	cli
    3352:	de bf       	out	0x3e, r29	; 62
    3354:	0f be       	out	0x3f, r0	; 63
    3356:	cd bf       	out	0x3d, r28	; 61
    3358:	cf 91       	pop	r28
    335a:	df 91       	pop	r29
    335c:	08 95       	ret

0000335e <DIO_u8GetPinValue>:


u8 DIO_u8GetPinValue(u8 Copy_u8Port, u8 Copy_u8Pin, u8 *Copy_u8Variable)
{
    335e:	df 93       	push	r29
    3360:	cf 93       	push	r28
    3362:	cd b7       	in	r28, 0x3d	; 61
    3364:	de b7       	in	r29, 0x3e	; 62
    3366:	27 97       	sbiw	r28, 0x07	; 7
    3368:	0f b6       	in	r0, 0x3f	; 63
    336a:	f8 94       	cli
    336c:	de bf       	out	0x3e, r29	; 62
    336e:	0f be       	out	0x3f, r0	; 63
    3370:	cd bf       	out	0x3d, r28	; 61
    3372:	8a 83       	std	Y+2, r24	; 0x02
    3374:	6b 83       	std	Y+3, r22	; 0x03
    3376:	5d 83       	std	Y+5, r21	; 0x05
    3378:	4c 83       	std	Y+4, r20	; 0x04
	u8 Local_u8RunState = DIO_OK;
    337a:	19 82       	std	Y+1, r1	; 0x01
	if((Copy_u8Pin >= DIO_PIN0) && (Copy_u8Pin <= DIO_PIN7) && (Copy_u8Variable != NULL))
    337c:	8b 81       	ldd	r24, Y+3	; 0x03
    337e:	88 30       	cpi	r24, 0x08	; 8
    3380:	08 f0       	brcs	.+2      	; 0x3384 <DIO_u8GetPinValue+0x26>
    3382:	79 c0       	rjmp	.+242    	; 0x3476 <DIO_u8GetPinValue+0x118>
    3384:	8c 81       	ldd	r24, Y+4	; 0x04
    3386:	9d 81       	ldd	r25, Y+5	; 0x05
    3388:	00 97       	sbiw	r24, 0x00	; 0
    338a:	09 f4       	brne	.+2      	; 0x338e <DIO_u8GetPinValue+0x30>
    338c:	74 c0       	rjmp	.+232    	; 0x3476 <DIO_u8GetPinValue+0x118>
	{
		switch(Copy_u8Port)
    338e:	8a 81       	ldd	r24, Y+2	; 0x02
    3390:	28 2f       	mov	r18, r24
    3392:	30 e0       	ldi	r19, 0x00	; 0
    3394:	3f 83       	std	Y+7, r19	; 0x07
    3396:	2e 83       	std	Y+6, r18	; 0x06
    3398:	4e 81       	ldd	r20, Y+6	; 0x06
    339a:	5f 81       	ldd	r21, Y+7	; 0x07
    339c:	41 30       	cpi	r20, 0x01	; 1
    339e:	51 05       	cpc	r21, r1
    33a0:	59 f1       	breq	.+86     	; 0x33f8 <DIO_u8GetPinValue+0x9a>
    33a2:	8e 81       	ldd	r24, Y+6	; 0x06
    33a4:	9f 81       	ldd	r25, Y+7	; 0x07
    33a6:	82 30       	cpi	r24, 0x02	; 2
    33a8:	91 05       	cpc	r25, r1
    33aa:	34 f4       	brge	.+12     	; 0x33b8 <DIO_u8GetPinValue+0x5a>
    33ac:	2e 81       	ldd	r18, Y+6	; 0x06
    33ae:	3f 81       	ldd	r19, Y+7	; 0x07
    33b0:	21 15       	cp	r18, r1
    33b2:	31 05       	cpc	r19, r1
    33b4:	69 f0       	breq	.+26     	; 0x33d0 <DIO_u8GetPinValue+0x72>
    33b6:	5c c0       	rjmp	.+184    	; 0x3470 <DIO_u8GetPinValue+0x112>
    33b8:	4e 81       	ldd	r20, Y+6	; 0x06
    33ba:	5f 81       	ldd	r21, Y+7	; 0x07
    33bc:	42 30       	cpi	r20, 0x02	; 2
    33be:	51 05       	cpc	r21, r1
    33c0:	79 f1       	breq	.+94     	; 0x3420 <DIO_u8GetPinValue+0xc2>
    33c2:	8e 81       	ldd	r24, Y+6	; 0x06
    33c4:	9f 81       	ldd	r25, Y+7	; 0x07
    33c6:	83 30       	cpi	r24, 0x03	; 3
    33c8:	91 05       	cpc	r25, r1
    33ca:	09 f4       	brne	.+2      	; 0x33ce <DIO_u8GetPinValue+0x70>
    33cc:	3d c0       	rjmp	.+122    	; 0x3448 <DIO_u8GetPinValue+0xea>
    33ce:	50 c0       	rjmp	.+160    	; 0x3470 <DIO_u8GetPinValue+0x112>
		{
		case DIO_PORTA: *Copy_u8Variable = GET_BIT(PINA, Copy_u8Pin); break;
    33d0:	e9 e3       	ldi	r30, 0x39	; 57
    33d2:	f0 e0       	ldi	r31, 0x00	; 0
    33d4:	80 81       	ld	r24, Z
    33d6:	28 2f       	mov	r18, r24
    33d8:	30 e0       	ldi	r19, 0x00	; 0
    33da:	8b 81       	ldd	r24, Y+3	; 0x03
    33dc:	88 2f       	mov	r24, r24
    33de:	90 e0       	ldi	r25, 0x00	; 0
    33e0:	a9 01       	movw	r20, r18
    33e2:	02 c0       	rjmp	.+4      	; 0x33e8 <DIO_u8GetPinValue+0x8a>
    33e4:	55 95       	asr	r21
    33e6:	47 95       	ror	r20
    33e8:	8a 95       	dec	r24
    33ea:	e2 f7       	brpl	.-8      	; 0x33e4 <DIO_u8GetPinValue+0x86>
    33ec:	ca 01       	movw	r24, r20
    33ee:	81 70       	andi	r24, 0x01	; 1
    33f0:	ec 81       	ldd	r30, Y+4	; 0x04
    33f2:	fd 81       	ldd	r31, Y+5	; 0x05
    33f4:	80 83       	st	Z, r24
    33f6:	41 c0       	rjmp	.+130    	; 0x347a <DIO_u8GetPinValue+0x11c>
		case DIO_PORTB:	*Copy_u8Variable = GET_BIT(PINB, Copy_u8Pin); break;
    33f8:	e6 e3       	ldi	r30, 0x36	; 54
    33fa:	f0 e0       	ldi	r31, 0x00	; 0
    33fc:	80 81       	ld	r24, Z
    33fe:	28 2f       	mov	r18, r24
    3400:	30 e0       	ldi	r19, 0x00	; 0
    3402:	8b 81       	ldd	r24, Y+3	; 0x03
    3404:	88 2f       	mov	r24, r24
    3406:	90 e0       	ldi	r25, 0x00	; 0
    3408:	a9 01       	movw	r20, r18
    340a:	02 c0       	rjmp	.+4      	; 0x3410 <DIO_u8GetPinValue+0xb2>
    340c:	55 95       	asr	r21
    340e:	47 95       	ror	r20
    3410:	8a 95       	dec	r24
    3412:	e2 f7       	brpl	.-8      	; 0x340c <DIO_u8GetPinValue+0xae>
    3414:	ca 01       	movw	r24, r20
    3416:	81 70       	andi	r24, 0x01	; 1
    3418:	ec 81       	ldd	r30, Y+4	; 0x04
    341a:	fd 81       	ldd	r31, Y+5	; 0x05
    341c:	80 83       	st	Z, r24
    341e:	2d c0       	rjmp	.+90     	; 0x347a <DIO_u8GetPinValue+0x11c>
		case DIO_PORTC: *Copy_u8Variable = GET_BIT(PINC, Copy_u8Pin); break;
    3420:	e3 e3       	ldi	r30, 0x33	; 51
    3422:	f0 e0       	ldi	r31, 0x00	; 0
    3424:	80 81       	ld	r24, Z
    3426:	28 2f       	mov	r18, r24
    3428:	30 e0       	ldi	r19, 0x00	; 0
    342a:	8b 81       	ldd	r24, Y+3	; 0x03
    342c:	88 2f       	mov	r24, r24
    342e:	90 e0       	ldi	r25, 0x00	; 0
    3430:	a9 01       	movw	r20, r18
    3432:	02 c0       	rjmp	.+4      	; 0x3438 <DIO_u8GetPinValue+0xda>
    3434:	55 95       	asr	r21
    3436:	47 95       	ror	r20
    3438:	8a 95       	dec	r24
    343a:	e2 f7       	brpl	.-8      	; 0x3434 <DIO_u8GetPinValue+0xd6>
    343c:	ca 01       	movw	r24, r20
    343e:	81 70       	andi	r24, 0x01	; 1
    3440:	ec 81       	ldd	r30, Y+4	; 0x04
    3442:	fd 81       	ldd	r31, Y+5	; 0x05
    3444:	80 83       	st	Z, r24
    3446:	19 c0       	rjmp	.+50     	; 0x347a <DIO_u8GetPinValue+0x11c>
		case DIO_PORTD: *Copy_u8Variable = GET_BIT(PIND, Copy_u8Pin); break;
    3448:	e0 e3       	ldi	r30, 0x30	; 48
    344a:	f0 e0       	ldi	r31, 0x00	; 0
    344c:	80 81       	ld	r24, Z
    344e:	28 2f       	mov	r18, r24
    3450:	30 e0       	ldi	r19, 0x00	; 0
    3452:	8b 81       	ldd	r24, Y+3	; 0x03
    3454:	88 2f       	mov	r24, r24
    3456:	90 e0       	ldi	r25, 0x00	; 0
    3458:	a9 01       	movw	r20, r18
    345a:	02 c0       	rjmp	.+4      	; 0x3460 <DIO_u8GetPinValue+0x102>
    345c:	55 95       	asr	r21
    345e:	47 95       	ror	r20
    3460:	8a 95       	dec	r24
    3462:	e2 f7       	brpl	.-8      	; 0x345c <DIO_u8GetPinValue+0xfe>
    3464:	ca 01       	movw	r24, r20
    3466:	81 70       	andi	r24, 0x01	; 1
    3468:	ec 81       	ldd	r30, Y+4	; 0x04
    346a:	fd 81       	ldd	r31, Y+5	; 0x05
    346c:	80 83       	st	Z, r24
    346e:	05 c0       	rjmp	.+10     	; 0x347a <DIO_u8GetPinValue+0x11c>
		default: Local_u8RunState = DIO_ERROR;
    3470:	81 e0       	ldi	r24, 0x01	; 1
    3472:	89 83       	std	Y+1, r24	; 0x01
    3474:	02 c0       	rjmp	.+4      	; 0x347a <DIO_u8GetPinValue+0x11c>
		}
	}
	else
	{
		Local_u8RunState = DIO_ERROR;
    3476:	81 e0       	ldi	r24, 0x01	; 1
    3478:	89 83       	std	Y+1, r24	; 0x01
	}
	return Local_u8RunState;
    347a:	89 81       	ldd	r24, Y+1	; 0x01
}
    347c:	27 96       	adiw	r28, 0x07	; 7
    347e:	0f b6       	in	r0, 0x3f	; 63
    3480:	f8 94       	cli
    3482:	de bf       	out	0x3e, r29	; 62
    3484:	0f be       	out	0x3f, r0	; 63
    3486:	cd bf       	out	0x3d, r28	; 61
    3488:	cf 91       	pop	r28
    348a:	df 91       	pop	r29
    348c:	08 95       	ret

0000348e <LED_voidInitLED>:
#include "../../ECUAL/LED/LED_private.h"

LED_t LEDS[NUMBER_OF_LEDS] = {{NULL}};

void LED_voidInitLED (u8 Copy_u8ID, u8 Copy_u8Port, u8 Copy_u8Pin)
{
    348e:	df 93       	push	r29
    3490:	cf 93       	push	r28
    3492:	00 d0       	rcall	.+0      	; 0x3494 <LED_voidInitLED+0x6>
    3494:	0f 92       	push	r0
    3496:	cd b7       	in	r28, 0x3d	; 61
    3498:	de b7       	in	r29, 0x3e	; 62
    349a:	89 83       	std	Y+1, r24	; 0x01
    349c:	6a 83       	std	Y+2, r22	; 0x02
    349e:	4b 83       	std	Y+3, r20	; 0x03
	LEDS[Copy_u8ID].u8Port = Copy_u8Port;
    34a0:	89 81       	ldd	r24, Y+1	; 0x01
    34a2:	88 2f       	mov	r24, r24
    34a4:	90 e0       	ldi	r25, 0x00	; 0
    34a6:	88 0f       	add	r24, r24
    34a8:	99 1f       	adc	r25, r25
    34aa:	fc 01       	movw	r30, r24
    34ac:	e2 58       	subi	r30, 0x82	; 130
    34ae:	fe 4f       	sbci	r31, 0xFE	; 254
    34b0:	8a 81       	ldd	r24, Y+2	; 0x02
    34b2:	80 83       	st	Z, r24
	LEDS[Copy_u8ID].u8Pin = Copy_u8Pin;
    34b4:	89 81       	ldd	r24, Y+1	; 0x01
    34b6:	88 2f       	mov	r24, r24
    34b8:	90 e0       	ldi	r25, 0x00	; 0
    34ba:	88 0f       	add	r24, r24
    34bc:	99 1f       	adc	r25, r25
    34be:	fc 01       	movw	r30, r24
    34c0:	e1 58       	subi	r30, 0x81	; 129
    34c2:	fe 4f       	sbci	r31, 0xFE	; 254
    34c4:	8b 81       	ldd	r24, Y+3	; 0x03
    34c6:	80 83       	st	Z, r24
	DIO_u8SetPinDirection(LEDS[Copy_u8ID].u8Port, LEDS[Copy_u8ID].u8Pin, DIO_PIN_OUTPUT);
    34c8:	89 81       	ldd	r24, Y+1	; 0x01
    34ca:	88 2f       	mov	r24, r24
    34cc:	90 e0       	ldi	r25, 0x00	; 0
    34ce:	88 0f       	add	r24, r24
    34d0:	99 1f       	adc	r25, r25
    34d2:	fc 01       	movw	r30, r24
    34d4:	e2 58       	subi	r30, 0x82	; 130
    34d6:	fe 4f       	sbci	r31, 0xFE	; 254
    34d8:	20 81       	ld	r18, Z
    34da:	89 81       	ldd	r24, Y+1	; 0x01
    34dc:	88 2f       	mov	r24, r24
    34de:	90 e0       	ldi	r25, 0x00	; 0
    34e0:	88 0f       	add	r24, r24
    34e2:	99 1f       	adc	r25, r25
    34e4:	fc 01       	movw	r30, r24
    34e6:	e1 58       	subi	r30, 0x81	; 129
    34e8:	fe 4f       	sbci	r31, 0xFE	; 254
    34ea:	90 81       	ld	r25, Z
    34ec:	82 2f       	mov	r24, r18
    34ee:	69 2f       	mov	r22, r25
    34f0:	41 e0       	ldi	r20, 0x01	; 1
    34f2:	0e 94 8b 17 	call	0x2f16	; 0x2f16 <DIO_u8SetPinDirection>
}
    34f6:	0f 90       	pop	r0
    34f8:	0f 90       	pop	r0
    34fa:	0f 90       	pop	r0
    34fc:	cf 91       	pop	r28
    34fe:	df 91       	pop	r29
    3500:	08 95       	ret

00003502 <LED_voidInitGroupOfLEDS>:

void LED_voidInitGroupOfLEDS (u8 Copy_u8StartID, u8 Copy_u8EndID, u8 Copy_u8Port, u8 Copy_u8Pin)
{
    3502:	df 93       	push	r29
    3504:	cf 93       	push	r28
    3506:	00 d0       	rcall	.+0      	; 0x3508 <LED_voidInitGroupOfLEDS+0x6>
    3508:	00 d0       	rcall	.+0      	; 0x350a <LED_voidInitGroupOfLEDS+0x8>
    350a:	0f 92       	push	r0
    350c:	cd b7       	in	r28, 0x3d	; 61
    350e:	de b7       	in	r29, 0x3e	; 62
    3510:	8a 83       	std	Y+2, r24	; 0x02
    3512:	6b 83       	std	Y+3, r22	; 0x03
    3514:	4c 83       	std	Y+4, r20	; 0x04
    3516:	2d 83       	std	Y+5, r18	; 0x05
	if ((Copy_u8EndID - Copy_u8StartID) <= (DIO_PIN7 - Copy_u8Pin))
    3518:	8b 81       	ldd	r24, Y+3	; 0x03
    351a:	28 2f       	mov	r18, r24
    351c:	30 e0       	ldi	r19, 0x00	; 0
    351e:	8a 81       	ldd	r24, Y+2	; 0x02
    3520:	88 2f       	mov	r24, r24
    3522:	90 e0       	ldi	r25, 0x00	; 0
    3524:	a9 01       	movw	r20, r18
    3526:	48 1b       	sub	r20, r24
    3528:	59 0b       	sbc	r21, r25
    352a:	8d 81       	ldd	r24, Y+5	; 0x05
    352c:	28 2f       	mov	r18, r24
    352e:	30 e0       	ldi	r19, 0x00	; 0
    3530:	87 e0       	ldi	r24, 0x07	; 7
    3532:	90 e0       	ldi	r25, 0x00	; 0
    3534:	82 1b       	sub	r24, r18
    3536:	93 0b       	sbc	r25, r19
    3538:	84 17       	cp	r24, r20
    353a:	95 07       	cpc	r25, r21
    353c:	dc f1       	brlt	.+118    	; 0x35b4 <LED_voidInitGroupOfLEDS+0xb2>
	{
		for (u8 Local_u8Iterator = Copy_u8StartID; Local_u8Iterator <= Copy_u8EndID; Local_u8Iterator++)
    353e:	8a 81       	ldd	r24, Y+2	; 0x02
    3540:	89 83       	std	Y+1, r24	; 0x01
    3542:	34 c0       	rjmp	.+104    	; 0x35ac <LED_voidInitGroupOfLEDS+0xaa>
		{
			LEDS[Local_u8Iterator].u8Port = Copy_u8Port;
    3544:	89 81       	ldd	r24, Y+1	; 0x01
    3546:	88 2f       	mov	r24, r24
    3548:	90 e0       	ldi	r25, 0x00	; 0
    354a:	88 0f       	add	r24, r24
    354c:	99 1f       	adc	r25, r25
    354e:	fc 01       	movw	r30, r24
    3550:	e2 58       	subi	r30, 0x82	; 130
    3552:	fe 4f       	sbci	r31, 0xFE	; 254
    3554:	8c 81       	ldd	r24, Y+4	; 0x04
    3556:	80 83       	st	Z, r24
			LEDS[Local_u8Iterator].u8Pin = Copy_u8Pin + (Local_u8Iterator - Copy_u8StartID);
    3558:	89 81       	ldd	r24, Y+1	; 0x01
    355a:	28 2f       	mov	r18, r24
    355c:	30 e0       	ldi	r19, 0x00	; 0
    355e:	99 81       	ldd	r25, Y+1	; 0x01
    3560:	8a 81       	ldd	r24, Y+2	; 0x02
    3562:	98 1b       	sub	r25, r24
    3564:	8d 81       	ldd	r24, Y+5	; 0x05
    3566:	49 2f       	mov	r20, r25
    3568:	48 0f       	add	r20, r24
    356a:	c9 01       	movw	r24, r18
    356c:	88 0f       	add	r24, r24
    356e:	99 1f       	adc	r25, r25
    3570:	fc 01       	movw	r30, r24
    3572:	e1 58       	subi	r30, 0x81	; 129
    3574:	fe 4f       	sbci	r31, 0xFE	; 254
    3576:	40 83       	st	Z, r20
			DIO_u8SetPinDirection(LEDS[Local_u8Iterator].u8Port, LEDS[Local_u8Iterator].u8Pin, DIO_PIN_OUTPUT);
    3578:	89 81       	ldd	r24, Y+1	; 0x01
    357a:	88 2f       	mov	r24, r24
    357c:	90 e0       	ldi	r25, 0x00	; 0
    357e:	88 0f       	add	r24, r24
    3580:	99 1f       	adc	r25, r25
    3582:	fc 01       	movw	r30, r24
    3584:	e2 58       	subi	r30, 0x82	; 130
    3586:	fe 4f       	sbci	r31, 0xFE	; 254
    3588:	20 81       	ld	r18, Z
    358a:	89 81       	ldd	r24, Y+1	; 0x01
    358c:	88 2f       	mov	r24, r24
    358e:	90 e0       	ldi	r25, 0x00	; 0
    3590:	88 0f       	add	r24, r24
    3592:	99 1f       	adc	r25, r25
    3594:	fc 01       	movw	r30, r24
    3596:	e1 58       	subi	r30, 0x81	; 129
    3598:	fe 4f       	sbci	r31, 0xFE	; 254
    359a:	90 81       	ld	r25, Z
    359c:	82 2f       	mov	r24, r18
    359e:	69 2f       	mov	r22, r25
    35a0:	41 e0       	ldi	r20, 0x01	; 1
    35a2:	0e 94 8b 17 	call	0x2f16	; 0x2f16 <DIO_u8SetPinDirection>

void LED_voidInitGroupOfLEDS (u8 Copy_u8StartID, u8 Copy_u8EndID, u8 Copy_u8Port, u8 Copy_u8Pin)
{
	if ((Copy_u8EndID - Copy_u8StartID) <= (DIO_PIN7 - Copy_u8Pin))
	{
		for (u8 Local_u8Iterator = Copy_u8StartID; Local_u8Iterator <= Copy_u8EndID; Local_u8Iterator++)
    35a6:	89 81       	ldd	r24, Y+1	; 0x01
    35a8:	8f 5f       	subi	r24, 0xFF	; 255
    35aa:	89 83       	std	Y+1, r24	; 0x01
    35ac:	99 81       	ldd	r25, Y+1	; 0x01
    35ae:	8b 81       	ldd	r24, Y+3	; 0x03
    35b0:	89 17       	cp	r24, r25
    35b2:	40 f6       	brcc	.-112    	; 0x3544 <LED_voidInitGroupOfLEDS+0x42>
	}
	else
	{
		/*Do Nothing*/
	}
}
    35b4:	0f 90       	pop	r0
    35b6:	0f 90       	pop	r0
    35b8:	0f 90       	pop	r0
    35ba:	0f 90       	pop	r0
    35bc:	0f 90       	pop	r0
    35be:	cf 91       	pop	r28
    35c0:	df 91       	pop	r29
    35c2:	08 95       	ret

000035c4 <LED_voidTurnOnLED>:

void LED_voidTurnOnLED (u8 Copy_u8ID)
{
    35c4:	df 93       	push	r29
    35c6:	cf 93       	push	r28
    35c8:	0f 92       	push	r0
    35ca:	cd b7       	in	r28, 0x3d	; 61
    35cc:	de b7       	in	r29, 0x3e	; 62
    35ce:	89 83       	std	Y+1, r24	; 0x01
	#if CONNECTION_TYPE == SOURCE
		DIO_u8SetPinValue(LEDS[Copy_u8ID].u8Port, LEDS[Copy_u8ID].u8Pin, DIO_PIN_HIGH);
    35d0:	89 81       	ldd	r24, Y+1	; 0x01
    35d2:	88 2f       	mov	r24, r24
    35d4:	90 e0       	ldi	r25, 0x00	; 0
    35d6:	88 0f       	add	r24, r24
    35d8:	99 1f       	adc	r25, r25
    35da:	fc 01       	movw	r30, r24
    35dc:	e2 58       	subi	r30, 0x82	; 130
    35de:	fe 4f       	sbci	r31, 0xFE	; 254
    35e0:	20 81       	ld	r18, Z
    35e2:	89 81       	ldd	r24, Y+1	; 0x01
    35e4:	88 2f       	mov	r24, r24
    35e6:	90 e0       	ldi	r25, 0x00	; 0
    35e8:	88 0f       	add	r24, r24
    35ea:	99 1f       	adc	r25, r25
    35ec:	fc 01       	movw	r30, r24
    35ee:	e1 58       	subi	r30, 0x81	; 129
    35f0:	fe 4f       	sbci	r31, 0xFE	; 254
    35f2:	90 81       	ld	r25, Z
    35f4:	82 2f       	mov	r24, r18
    35f6:	69 2f       	mov	r22, r25
    35f8:	41 e0       	ldi	r20, 0x01	; 1
    35fa:	0e 94 9d 18 	call	0x313a	; 0x313a <DIO_u8SetPinValue>
	#elif CONNECTION_TYPE == SINK
		DIO_u8SetPinValue(LEDS[Copy_u8ID].u8Port, LEDS[Copy_u8ID].u8Pin, DIO_PIN_LOW);
	#else
		#error "LED Connection Type Error"
	#endif
}
    35fe:	0f 90       	pop	r0
    3600:	cf 91       	pop	r28
    3602:	df 91       	pop	r29
    3604:	08 95       	ret

00003606 <LED_voidTurnOnGroupOfLEDS>:

void LED_voidTurnOnGroupOfLEDS (u8 Copy_u8StartID, u8 Copy_u8EndID)
{
    3606:	df 93       	push	r29
    3608:	cf 93       	push	r28
    360a:	00 d0       	rcall	.+0      	; 0x360c <LED_voidTurnOnGroupOfLEDS+0x6>
    360c:	0f 92       	push	r0
    360e:	cd b7       	in	r28, 0x3d	; 61
    3610:	de b7       	in	r29, 0x3e	; 62
    3612:	8a 83       	std	Y+2, r24	; 0x02
    3614:	6b 83       	std	Y+3, r22	; 0x03
	for (u8 Local_u8Iterator = Copy_u8StartID; Local_u8Iterator <= Copy_u8EndID; Local_u8Iterator++)
    3616:	8a 81       	ldd	r24, Y+2	; 0x02
    3618:	89 83       	std	Y+1, r24	; 0x01
    361a:	1a c0       	rjmp	.+52     	; 0x3650 <LED_voidTurnOnGroupOfLEDS+0x4a>
	{
		#if CONNECTION_TYPE == SOURCE
			DIO_u8SetPinValue(LEDS[Local_u8Iterator].u8Port, LEDS[Local_u8Iterator].u8Pin, DIO_PIN_HIGH);
    361c:	89 81       	ldd	r24, Y+1	; 0x01
    361e:	88 2f       	mov	r24, r24
    3620:	90 e0       	ldi	r25, 0x00	; 0
    3622:	88 0f       	add	r24, r24
    3624:	99 1f       	adc	r25, r25
    3626:	fc 01       	movw	r30, r24
    3628:	e2 58       	subi	r30, 0x82	; 130
    362a:	fe 4f       	sbci	r31, 0xFE	; 254
    362c:	20 81       	ld	r18, Z
    362e:	89 81       	ldd	r24, Y+1	; 0x01
    3630:	88 2f       	mov	r24, r24
    3632:	90 e0       	ldi	r25, 0x00	; 0
    3634:	88 0f       	add	r24, r24
    3636:	99 1f       	adc	r25, r25
    3638:	fc 01       	movw	r30, r24
    363a:	e1 58       	subi	r30, 0x81	; 129
    363c:	fe 4f       	sbci	r31, 0xFE	; 254
    363e:	90 81       	ld	r25, Z
    3640:	82 2f       	mov	r24, r18
    3642:	69 2f       	mov	r22, r25
    3644:	41 e0       	ldi	r20, 0x01	; 1
    3646:	0e 94 9d 18 	call	0x313a	; 0x313a <DIO_u8SetPinValue>
	#endif
}

void LED_voidTurnOnGroupOfLEDS (u8 Copy_u8StartID, u8 Copy_u8EndID)
{
	for (u8 Local_u8Iterator = Copy_u8StartID; Local_u8Iterator <= Copy_u8EndID; Local_u8Iterator++)
    364a:	89 81       	ldd	r24, Y+1	; 0x01
    364c:	8f 5f       	subi	r24, 0xFF	; 255
    364e:	89 83       	std	Y+1, r24	; 0x01
    3650:	99 81       	ldd	r25, Y+1	; 0x01
    3652:	8b 81       	ldd	r24, Y+3	; 0x03
    3654:	89 17       	cp	r24, r25
    3656:	10 f7       	brcc	.-60     	; 0x361c <LED_voidTurnOnGroupOfLEDS+0x16>
			DIO_u8SetPinValue(LEDS[Local_u8Iterator].u8Port, LEDS[Local_u8Iterator].u8Pin, DIO_PIN_LOW);
		#else
			#error "LED Connection Type Error"
		#endif
	}
}
    3658:	0f 90       	pop	r0
    365a:	0f 90       	pop	r0
    365c:	0f 90       	pop	r0
    365e:	cf 91       	pop	r28
    3660:	df 91       	pop	r29
    3662:	08 95       	ret

00003664 <LED_voidTurnOffLED>:

void LED_voidTurnOffLED (u8 Copy_u8ID)
{
    3664:	df 93       	push	r29
    3666:	cf 93       	push	r28
    3668:	0f 92       	push	r0
    366a:	cd b7       	in	r28, 0x3d	; 61
    366c:	de b7       	in	r29, 0x3e	; 62
    366e:	89 83       	std	Y+1, r24	; 0x01
	#if CONNECTION_TYPE == SOURCE
		DIO_u8SetPinValue(LEDS[Copy_u8ID].u8Port, LEDS[Copy_u8ID].u8Pin, DIO_PIN_LOW);
    3670:	89 81       	ldd	r24, Y+1	; 0x01
    3672:	88 2f       	mov	r24, r24
    3674:	90 e0       	ldi	r25, 0x00	; 0
    3676:	88 0f       	add	r24, r24
    3678:	99 1f       	adc	r25, r25
    367a:	fc 01       	movw	r30, r24
    367c:	e2 58       	subi	r30, 0x82	; 130
    367e:	fe 4f       	sbci	r31, 0xFE	; 254
    3680:	20 81       	ld	r18, Z
    3682:	89 81       	ldd	r24, Y+1	; 0x01
    3684:	88 2f       	mov	r24, r24
    3686:	90 e0       	ldi	r25, 0x00	; 0
    3688:	88 0f       	add	r24, r24
    368a:	99 1f       	adc	r25, r25
    368c:	fc 01       	movw	r30, r24
    368e:	e1 58       	subi	r30, 0x81	; 129
    3690:	fe 4f       	sbci	r31, 0xFE	; 254
    3692:	90 81       	ld	r25, Z
    3694:	82 2f       	mov	r24, r18
    3696:	69 2f       	mov	r22, r25
    3698:	40 e0       	ldi	r20, 0x00	; 0
    369a:	0e 94 9d 18 	call	0x313a	; 0x313a <DIO_u8SetPinValue>
	#elif CONNECTION_TYPE == SINK
		DIO_u8SetPinValue(LEDS[Copy_u8ID].u8Port, LEDS[Copy_u8ID].u8Pin, DIO_PIN_HIGH);
	#else
		#error "LED Connection Type Error"
	#endif
}
    369e:	0f 90       	pop	r0
    36a0:	cf 91       	pop	r28
    36a2:	df 91       	pop	r29
    36a4:	08 95       	ret

000036a6 <LED_voidTurnOffGroupOfLEDS>:

void LED_voidTurnOffGroupOfLEDS (u8 Copy_u8StartID, u8 Copy_u8EndID)
{
    36a6:	df 93       	push	r29
    36a8:	cf 93       	push	r28
    36aa:	00 d0       	rcall	.+0      	; 0x36ac <LED_voidTurnOffGroupOfLEDS+0x6>
    36ac:	0f 92       	push	r0
    36ae:	cd b7       	in	r28, 0x3d	; 61
    36b0:	de b7       	in	r29, 0x3e	; 62
    36b2:	8a 83       	std	Y+2, r24	; 0x02
    36b4:	6b 83       	std	Y+3, r22	; 0x03
	for (u8 Local_u8Iterator = Copy_u8StartID; Local_u8Iterator <= Copy_u8EndID; Local_u8Iterator++)
    36b6:	8a 81       	ldd	r24, Y+2	; 0x02
    36b8:	89 83       	std	Y+1, r24	; 0x01
    36ba:	1a c0       	rjmp	.+52     	; 0x36f0 <LED_voidTurnOffGroupOfLEDS+0x4a>
	{
		#if CONNECTION_TYPE == SOURCE
			DIO_u8SetPinValue(LEDS[Local_u8Iterator].u8Port, LEDS[Local_u8Iterator].u8Pin, DIO_PIN_LOW);
    36bc:	89 81       	ldd	r24, Y+1	; 0x01
    36be:	88 2f       	mov	r24, r24
    36c0:	90 e0       	ldi	r25, 0x00	; 0
    36c2:	88 0f       	add	r24, r24
    36c4:	99 1f       	adc	r25, r25
    36c6:	fc 01       	movw	r30, r24
    36c8:	e2 58       	subi	r30, 0x82	; 130
    36ca:	fe 4f       	sbci	r31, 0xFE	; 254
    36cc:	20 81       	ld	r18, Z
    36ce:	89 81       	ldd	r24, Y+1	; 0x01
    36d0:	88 2f       	mov	r24, r24
    36d2:	90 e0       	ldi	r25, 0x00	; 0
    36d4:	88 0f       	add	r24, r24
    36d6:	99 1f       	adc	r25, r25
    36d8:	fc 01       	movw	r30, r24
    36da:	e1 58       	subi	r30, 0x81	; 129
    36dc:	fe 4f       	sbci	r31, 0xFE	; 254
    36de:	90 81       	ld	r25, Z
    36e0:	82 2f       	mov	r24, r18
    36e2:	69 2f       	mov	r22, r25
    36e4:	40 e0       	ldi	r20, 0x00	; 0
    36e6:	0e 94 9d 18 	call	0x313a	; 0x313a <DIO_u8SetPinValue>
	#endif
}

void LED_voidTurnOffGroupOfLEDS (u8 Copy_u8StartID, u8 Copy_u8EndID)
{
	for (u8 Local_u8Iterator = Copy_u8StartID; Local_u8Iterator <= Copy_u8EndID; Local_u8Iterator++)
    36ea:	89 81       	ldd	r24, Y+1	; 0x01
    36ec:	8f 5f       	subi	r24, 0xFF	; 255
    36ee:	89 83       	std	Y+1, r24	; 0x01
    36f0:	99 81       	ldd	r25, Y+1	; 0x01
    36f2:	8b 81       	ldd	r24, Y+3	; 0x03
    36f4:	89 17       	cp	r24, r25
    36f6:	10 f7       	brcc	.-60     	; 0x36bc <LED_voidTurnOffGroupOfLEDS+0x16>
			DIO_u8SetPinValue(LEDS[Local_u8Iterator].u8Port, LEDS[Local_u8Iterator].u8Pin, DIO_PIN_HIGH);
		#else
			#error "LED Connection Type Error"
		#endif
	}
}
    36f8:	0f 90       	pop	r0
    36fa:	0f 90       	pop	r0
    36fc:	0f 90       	pop	r0
    36fe:	cf 91       	pop	r28
    3700:	df 91       	pop	r29
    3702:	08 95       	ret

00003704 <LED_voidToggleLED>:

void LED_voidToggleLED (u8 Copy_u8ID)
{
    3704:	df 93       	push	r29
    3706:	cf 93       	push	r28
    3708:	00 d0       	rcall	.+0      	; 0x370a <LED_voidToggleLED+0x6>
    370a:	cd b7       	in	r28, 0x3d	; 61
    370c:	de b7       	in	r29, 0x3e	; 62
    370e:	8a 83       	std	Y+2, r24	; 0x02
	u8 Local_u8PinState;
	DIO_u8GetPinValue(LEDS[Copy_u8ID].u8Port, LEDS[Copy_u8ID].u8Pin, &Local_u8PinState);
    3710:	8a 81       	ldd	r24, Y+2	; 0x02
    3712:	88 2f       	mov	r24, r24
    3714:	90 e0       	ldi	r25, 0x00	; 0
    3716:	88 0f       	add	r24, r24
    3718:	99 1f       	adc	r25, r25
    371a:	fc 01       	movw	r30, r24
    371c:	e2 58       	subi	r30, 0x82	; 130
    371e:	fe 4f       	sbci	r31, 0xFE	; 254
    3720:	20 81       	ld	r18, Z
    3722:	8a 81       	ldd	r24, Y+2	; 0x02
    3724:	88 2f       	mov	r24, r24
    3726:	90 e0       	ldi	r25, 0x00	; 0
    3728:	88 0f       	add	r24, r24
    372a:	99 1f       	adc	r25, r25
    372c:	fc 01       	movw	r30, r24
    372e:	e1 58       	subi	r30, 0x81	; 129
    3730:	fe 4f       	sbci	r31, 0xFE	; 254
    3732:	90 81       	ld	r25, Z
    3734:	82 2f       	mov	r24, r18
    3736:	69 2f       	mov	r22, r25
    3738:	9e 01       	movw	r18, r28
    373a:	2f 5f       	subi	r18, 0xFF	; 255
    373c:	3f 4f       	sbci	r19, 0xFF	; 255
    373e:	a9 01       	movw	r20, r18
    3740:	0e 94 af 19 	call	0x335e	; 0x335e <DIO_u8GetPinValue>
	#if CONNECTION_TYPE == SOURCE
		if (Local_u8PinState == 0)
    3744:	89 81       	ldd	r24, Y+1	; 0x01
    3746:	88 23       	and	r24, r24
    3748:	c1 f4       	brne	.+48     	; 0x377a <LED_voidToggleLED+0x76>
		{
			DIO_u8SetPinValue(LEDS[Copy_u8ID].u8Port, LEDS[Copy_u8ID].u8Pin, DIO_PIN_HIGH);
    374a:	8a 81       	ldd	r24, Y+2	; 0x02
    374c:	88 2f       	mov	r24, r24
    374e:	90 e0       	ldi	r25, 0x00	; 0
    3750:	88 0f       	add	r24, r24
    3752:	99 1f       	adc	r25, r25
    3754:	fc 01       	movw	r30, r24
    3756:	e2 58       	subi	r30, 0x82	; 130
    3758:	fe 4f       	sbci	r31, 0xFE	; 254
    375a:	20 81       	ld	r18, Z
    375c:	8a 81       	ldd	r24, Y+2	; 0x02
    375e:	88 2f       	mov	r24, r24
    3760:	90 e0       	ldi	r25, 0x00	; 0
    3762:	88 0f       	add	r24, r24
    3764:	99 1f       	adc	r25, r25
    3766:	fc 01       	movw	r30, r24
    3768:	e1 58       	subi	r30, 0x81	; 129
    376a:	fe 4f       	sbci	r31, 0xFE	; 254
    376c:	90 81       	ld	r25, Z
    376e:	82 2f       	mov	r24, r18
    3770:	69 2f       	mov	r22, r25
    3772:	41 e0       	ldi	r20, 0x01	; 1
    3774:	0e 94 9d 18 	call	0x313a	; 0x313a <DIO_u8SetPinValue>
    3778:	1a c0       	rjmp	.+52     	; 0x37ae <LED_voidToggleLED+0xaa>
		}
		else if (Local_u8PinState == 1)
    377a:	89 81       	ldd	r24, Y+1	; 0x01
    377c:	81 30       	cpi	r24, 0x01	; 1
    377e:	b9 f4       	brne	.+46     	; 0x37ae <LED_voidToggleLED+0xaa>
		{
			DIO_u8SetPinValue(LEDS[Copy_u8ID].u8Port, LEDS[Copy_u8ID].u8Pin, DIO_PIN_LOW);
    3780:	8a 81       	ldd	r24, Y+2	; 0x02
    3782:	88 2f       	mov	r24, r24
    3784:	90 e0       	ldi	r25, 0x00	; 0
    3786:	88 0f       	add	r24, r24
    3788:	99 1f       	adc	r25, r25
    378a:	fc 01       	movw	r30, r24
    378c:	e2 58       	subi	r30, 0x82	; 130
    378e:	fe 4f       	sbci	r31, 0xFE	; 254
    3790:	20 81       	ld	r18, Z
    3792:	8a 81       	ldd	r24, Y+2	; 0x02
    3794:	88 2f       	mov	r24, r24
    3796:	90 e0       	ldi	r25, 0x00	; 0
    3798:	88 0f       	add	r24, r24
    379a:	99 1f       	adc	r25, r25
    379c:	fc 01       	movw	r30, r24
    379e:	e1 58       	subi	r30, 0x81	; 129
    37a0:	fe 4f       	sbci	r31, 0xFE	; 254
    37a2:	90 81       	ld	r25, Z
    37a4:	82 2f       	mov	r24, r18
    37a6:	69 2f       	mov	r22, r25
    37a8:	40 e0       	ldi	r20, 0x00	; 0
    37aa:	0e 94 9d 18 	call	0x313a	; 0x313a <DIO_u8SetPinValue>
			DIO_u8SetPinValue(LEDS[Copy_u8ID].u8Port, LEDS[Copy_u8ID].u8Pin, DIO_PIN_HIGH);
		}
	#else
		#error "LED Connection Type Error"
	#endif
}
    37ae:	0f 90       	pop	r0
    37b0:	0f 90       	pop	r0
    37b2:	cf 91       	pop	r28
    37b4:	df 91       	pop	r29
    37b6:	08 95       	ret

000037b8 <LED_voidToggleGroupOfLEDS>:

void LED_voidToggleGroupOfLEDS (u8 Copy_u8StartID, u8 Copy_u8EndID)
{
    37b8:	df 93       	push	r29
    37ba:	cf 93       	push	r28
    37bc:	00 d0       	rcall	.+0      	; 0x37be <LED_voidToggleGroupOfLEDS+0x6>
    37be:	00 d0       	rcall	.+0      	; 0x37c0 <LED_voidToggleGroupOfLEDS+0x8>
    37c0:	cd b7       	in	r28, 0x3d	; 61
    37c2:	de b7       	in	r29, 0x3e	; 62
    37c4:	8b 83       	std	Y+3, r24	; 0x03
    37c6:	6c 83       	std	Y+4, r22	; 0x04
	u8 Local_u8PinState;
	for (u8 Local_u8Iterator = Copy_u8StartID; Local_u8Iterator <= Copy_u8EndID; Local_u8Iterator++)
    37c8:	8b 81       	ldd	r24, Y+3	; 0x03
    37ca:	89 83       	std	Y+1, r24	; 0x01
    37cc:	52 c0       	rjmp	.+164    	; 0x3872 <LED_voidToggleGroupOfLEDS+0xba>
	{
		DIO_u8GetPinValue(LEDS[Local_u8Iterator].u8Port, LEDS[Local_u8Iterator].u8Pin, &Local_u8PinState);
    37ce:	89 81       	ldd	r24, Y+1	; 0x01
    37d0:	88 2f       	mov	r24, r24
    37d2:	90 e0       	ldi	r25, 0x00	; 0
    37d4:	88 0f       	add	r24, r24
    37d6:	99 1f       	adc	r25, r25
    37d8:	fc 01       	movw	r30, r24
    37da:	e2 58       	subi	r30, 0x82	; 130
    37dc:	fe 4f       	sbci	r31, 0xFE	; 254
    37de:	40 81       	ld	r20, Z
    37e0:	89 81       	ldd	r24, Y+1	; 0x01
    37e2:	88 2f       	mov	r24, r24
    37e4:	90 e0       	ldi	r25, 0x00	; 0
    37e6:	88 0f       	add	r24, r24
    37e8:	99 1f       	adc	r25, r25
    37ea:	fc 01       	movw	r30, r24
    37ec:	e1 58       	subi	r30, 0x81	; 129
    37ee:	fe 4f       	sbci	r31, 0xFE	; 254
    37f0:	90 81       	ld	r25, Z
    37f2:	9e 01       	movw	r18, r28
    37f4:	2e 5f       	subi	r18, 0xFE	; 254
    37f6:	3f 4f       	sbci	r19, 0xFF	; 255
    37f8:	84 2f       	mov	r24, r20
    37fa:	69 2f       	mov	r22, r25
    37fc:	a9 01       	movw	r20, r18
    37fe:	0e 94 af 19 	call	0x335e	; 0x335e <DIO_u8GetPinValue>
		#if CONNECTION_TYPE == SOURCE
			if (Local_u8PinState == 0)
    3802:	8a 81       	ldd	r24, Y+2	; 0x02
    3804:	88 23       	and	r24, r24
    3806:	c1 f4       	brne	.+48     	; 0x3838 <LED_voidToggleGroupOfLEDS+0x80>
			{
				DIO_u8SetPinValue(LEDS[Local_u8Iterator].u8Port, LEDS[Local_u8Iterator].u8Pin, DIO_PIN_HIGH);
    3808:	89 81       	ldd	r24, Y+1	; 0x01
    380a:	88 2f       	mov	r24, r24
    380c:	90 e0       	ldi	r25, 0x00	; 0
    380e:	88 0f       	add	r24, r24
    3810:	99 1f       	adc	r25, r25
    3812:	fc 01       	movw	r30, r24
    3814:	e2 58       	subi	r30, 0x82	; 130
    3816:	fe 4f       	sbci	r31, 0xFE	; 254
    3818:	20 81       	ld	r18, Z
    381a:	89 81       	ldd	r24, Y+1	; 0x01
    381c:	88 2f       	mov	r24, r24
    381e:	90 e0       	ldi	r25, 0x00	; 0
    3820:	88 0f       	add	r24, r24
    3822:	99 1f       	adc	r25, r25
    3824:	fc 01       	movw	r30, r24
    3826:	e1 58       	subi	r30, 0x81	; 129
    3828:	fe 4f       	sbci	r31, 0xFE	; 254
    382a:	90 81       	ld	r25, Z
    382c:	82 2f       	mov	r24, r18
    382e:	69 2f       	mov	r22, r25
    3830:	41 e0       	ldi	r20, 0x01	; 1
    3832:	0e 94 9d 18 	call	0x313a	; 0x313a <DIO_u8SetPinValue>
    3836:	1a c0       	rjmp	.+52     	; 0x386c <LED_voidToggleGroupOfLEDS+0xb4>
			}
			else if (Local_u8PinState == 1)
    3838:	8a 81       	ldd	r24, Y+2	; 0x02
    383a:	81 30       	cpi	r24, 0x01	; 1
    383c:	b9 f4       	brne	.+46     	; 0x386c <LED_voidToggleGroupOfLEDS+0xb4>
			{
				DIO_u8SetPinValue(LEDS[Local_u8Iterator].u8Port, LEDS[Local_u8Iterator].u8Pin, DIO_PIN_LOW);
    383e:	89 81       	ldd	r24, Y+1	; 0x01
    3840:	88 2f       	mov	r24, r24
    3842:	90 e0       	ldi	r25, 0x00	; 0
    3844:	88 0f       	add	r24, r24
    3846:	99 1f       	adc	r25, r25
    3848:	fc 01       	movw	r30, r24
    384a:	e2 58       	subi	r30, 0x82	; 130
    384c:	fe 4f       	sbci	r31, 0xFE	; 254
    384e:	20 81       	ld	r18, Z
    3850:	89 81       	ldd	r24, Y+1	; 0x01
    3852:	88 2f       	mov	r24, r24
    3854:	90 e0       	ldi	r25, 0x00	; 0
    3856:	88 0f       	add	r24, r24
    3858:	99 1f       	adc	r25, r25
    385a:	fc 01       	movw	r30, r24
    385c:	e1 58       	subi	r30, 0x81	; 129
    385e:	fe 4f       	sbci	r31, 0xFE	; 254
    3860:	90 81       	ld	r25, Z
    3862:	82 2f       	mov	r24, r18
    3864:	69 2f       	mov	r22, r25
    3866:	40 e0       	ldi	r20, 0x00	; 0
    3868:	0e 94 9d 18 	call	0x313a	; 0x313a <DIO_u8SetPinValue>
}

void LED_voidToggleGroupOfLEDS (u8 Copy_u8StartID, u8 Copy_u8EndID)
{
	u8 Local_u8PinState;
	for (u8 Local_u8Iterator = Copy_u8StartID; Local_u8Iterator <= Copy_u8EndID; Local_u8Iterator++)
    386c:	89 81       	ldd	r24, Y+1	; 0x01
    386e:	8f 5f       	subi	r24, 0xFF	; 255
    3870:	89 83       	std	Y+1, r24	; 0x01
    3872:	99 81       	ldd	r25, Y+1	; 0x01
    3874:	8c 81       	ldd	r24, Y+4	; 0x04
    3876:	89 17       	cp	r24, r25
    3878:	08 f0       	brcs	.+2      	; 0x387c <LED_voidToggleGroupOfLEDS+0xc4>
    387a:	a9 cf       	rjmp	.-174    	; 0x37ce <LED_voidToggleGroupOfLEDS+0x16>
			}
		#else
			#error "LED Connection Type Error"
		#endif
	}
}
    387c:	0f 90       	pop	r0
    387e:	0f 90       	pop	r0
    3880:	0f 90       	pop	r0
    3882:	0f 90       	pop	r0
    3884:	cf 91       	pop	r28
    3886:	df 91       	pop	r29
    3888:	08 95       	ret

0000388a <LED_voidBlinkLED>:

void LED_voidBlinkLED (u8 Copy_u8ID, u16 Copy_u16Delay, u8 Copy_u8DelayType)
{
    388a:	af 92       	push	r10
    388c:	bf 92       	push	r11
    388e:	cf 92       	push	r12
    3890:	df 92       	push	r13
    3892:	ef 92       	push	r14
    3894:	ff 92       	push	r15
    3896:	0f 93       	push	r16
    3898:	1f 93       	push	r17
    389a:	df 93       	push	r29
    389c:	cf 93       	push	r28
    389e:	cd b7       	in	r28, 0x3d	; 61
    38a0:	de b7       	in	r29, 0x3e	; 62
    38a2:	29 97       	sbiw	r28, 0x09	; 9
    38a4:	0f b6       	in	r0, 0x3f	; 63
    38a6:	f8 94       	cli
    38a8:	de bf       	out	0x3e, r29	; 62
    38aa:	0f be       	out	0x3f, r0	; 63
    38ac:	cd bf       	out	0x3d, r28	; 61
    38ae:	8a 83       	std	Y+2, r24	; 0x02
    38b0:	7c 83       	std	Y+4, r23	; 0x04
    38b2:	6b 83       	std	Y+3, r22	; 0x03
    38b4:	4d 83       	std	Y+5, r20	; 0x05
	u8 Local_u8PinState;
	DIO_u8GetPinValue(LEDS[Copy_u8ID].u8Port, LEDS[Copy_u8ID].u8Pin, &Local_u8PinState);
    38b6:	8a 81       	ldd	r24, Y+2	; 0x02
    38b8:	88 2f       	mov	r24, r24
    38ba:	90 e0       	ldi	r25, 0x00	; 0
    38bc:	88 0f       	add	r24, r24
    38be:	99 1f       	adc	r25, r25
    38c0:	fc 01       	movw	r30, r24
    38c2:	e2 58       	subi	r30, 0x82	; 130
    38c4:	fe 4f       	sbci	r31, 0xFE	; 254
    38c6:	20 81       	ld	r18, Z
    38c8:	8a 81       	ldd	r24, Y+2	; 0x02
    38ca:	88 2f       	mov	r24, r24
    38cc:	90 e0       	ldi	r25, 0x00	; 0
    38ce:	88 0f       	add	r24, r24
    38d0:	99 1f       	adc	r25, r25
    38d2:	fc 01       	movw	r30, r24
    38d4:	e1 58       	subi	r30, 0x81	; 129
    38d6:	fe 4f       	sbci	r31, 0xFE	; 254
    38d8:	90 81       	ld	r25, Z
    38da:	82 2f       	mov	r24, r18
    38dc:	69 2f       	mov	r22, r25
    38de:	9e 01       	movw	r18, r28
    38e0:	2f 5f       	subi	r18, 0xFF	; 255
    38e2:	3f 4f       	sbci	r19, 0xFF	; 255
    38e4:	a9 01       	movw	r20, r18
    38e6:	0e 94 af 19 	call	0x335e	; 0x335e <DIO_u8GetPinValue>
	#if CONNECTION_TYPE == SOURCE
		if (Local_u8PinState == 0)
    38ea:	89 81       	ldd	r24, Y+1	; 0x01
    38ec:	88 23       	and	r24, r24
    38ee:	09 f0       	breq	.+2      	; 0x38f2 <LED_voidBlinkLED+0x68>
    38f0:	a3 c0       	rjmp	.+326    	; 0x3a38 <LED_voidBlinkLED+0x1ae>
		{
			DIO_u8SetPinValue(LEDS[Copy_u8ID].u8Port, LEDS[Copy_u8ID].u8Pin, DIO_PIN_HIGH);
    38f2:	8a 81       	ldd	r24, Y+2	; 0x02
    38f4:	88 2f       	mov	r24, r24
    38f6:	90 e0       	ldi	r25, 0x00	; 0
    38f8:	88 0f       	add	r24, r24
    38fa:	99 1f       	adc	r25, r25
    38fc:	fc 01       	movw	r30, r24
    38fe:	e2 58       	subi	r30, 0x82	; 130
    3900:	fe 4f       	sbci	r31, 0xFE	; 254
    3902:	20 81       	ld	r18, Z
    3904:	8a 81       	ldd	r24, Y+2	; 0x02
    3906:	88 2f       	mov	r24, r24
    3908:	90 e0       	ldi	r25, 0x00	; 0
    390a:	88 0f       	add	r24, r24
    390c:	99 1f       	adc	r25, r25
    390e:	fc 01       	movw	r30, r24
    3910:	e1 58       	subi	r30, 0x81	; 129
    3912:	fe 4f       	sbci	r31, 0xFE	; 254
    3914:	90 81       	ld	r25, Z
    3916:	82 2f       	mov	r24, r18
    3918:	69 2f       	mov	r22, r25
    391a:	41 e0       	ldi	r20, 0x01	; 1
    391c:	0e 94 9d 18 	call	0x313a	; 0x313a <DIO_u8SetPinValue>
			switch (Copy_u8DelayType)
    3920:	8d 81       	ldd	r24, Y+5	; 0x05
    3922:	28 2f       	mov	r18, r24
    3924:	30 e0       	ldi	r19, 0x00	; 0
    3926:	39 87       	std	Y+9, r19	; 0x09
    3928:	28 87       	std	Y+8, r18	; 0x08
    392a:	88 85       	ldd	r24, Y+8	; 0x08
    392c:	99 85       	ldd	r25, Y+9	; 0x09
    392e:	00 97       	sbiw	r24, 0x00	; 0
    3930:	39 f0       	breq	.+14     	; 0x3940 <LED_voidBlinkLED+0xb6>
    3932:	28 85       	ldd	r18, Y+8	; 0x08
    3934:	39 85       	ldd	r19, Y+9	; 0x09
    3936:	21 30       	cpi	r18, 0x01	; 1
    3938:	31 05       	cpc	r19, r1
    393a:	09 f4       	brne	.+2      	; 0x393e <LED_voidBlinkLED+0xb4>
    393c:	3f c0       	rjmp	.+126    	; 0x39bc <LED_voidBlinkLED+0x132>
    393e:	22 c1       	rjmp	.+580    	; 0x3b84 <LED_voidBlinkLED+0x2fa>
			{
				case LED_MILLI_SECOND:
				{
					TIMERS_voidTimer0Delay(Copy_u16Delay, TIMERS_MS);
    3940:	8b 81       	ldd	r24, Y+3	; 0x03
    3942:	9c 81       	ldd	r25, Y+4	; 0x04
    3944:	5c 01       	movw	r10, r24
    3946:	cc 24       	eor	r12, r12
    3948:	dd 24       	eor	r13, r13
    394a:	ee 24       	eor	r14, r14
    394c:	ff 24       	eor	r15, r15
    394e:	87 01       	movw	r16, r14
    3950:	2a 2d       	mov	r18, r10
    3952:	3b 2d       	mov	r19, r11
    3954:	4c 2d       	mov	r20, r12
    3956:	5d 2d       	mov	r21, r13
    3958:	6e 2d       	mov	r22, r14
    395a:	7f 2d       	mov	r23, r15
    395c:	80 2f       	mov	r24, r16
    395e:	91 2f       	mov	r25, r17
    3960:	01 e0       	ldi	r16, 0x01	; 1
    3962:	0e 94 b4 0a 	call	0x1568	; 0x1568 <TIMERS_voidTimer0Delay>
					DIO_u8SetPinValue(LEDS[Copy_u8ID].u8Port, LEDS[Copy_u8ID].u8Pin, DIO_PIN_LOW);
    3966:	8a 81       	ldd	r24, Y+2	; 0x02
    3968:	88 2f       	mov	r24, r24
    396a:	90 e0       	ldi	r25, 0x00	; 0
    396c:	88 0f       	add	r24, r24
    396e:	99 1f       	adc	r25, r25
    3970:	fc 01       	movw	r30, r24
    3972:	e2 58       	subi	r30, 0x82	; 130
    3974:	fe 4f       	sbci	r31, 0xFE	; 254
    3976:	20 81       	ld	r18, Z
    3978:	8a 81       	ldd	r24, Y+2	; 0x02
    397a:	88 2f       	mov	r24, r24
    397c:	90 e0       	ldi	r25, 0x00	; 0
    397e:	88 0f       	add	r24, r24
    3980:	99 1f       	adc	r25, r25
    3982:	fc 01       	movw	r30, r24
    3984:	e1 58       	subi	r30, 0x81	; 129
    3986:	fe 4f       	sbci	r31, 0xFE	; 254
    3988:	90 81       	ld	r25, Z
    398a:	82 2f       	mov	r24, r18
    398c:	69 2f       	mov	r22, r25
    398e:	40 e0       	ldi	r20, 0x00	; 0
    3990:	0e 94 9d 18 	call	0x313a	; 0x313a <DIO_u8SetPinValue>
					TIMERS_voidTimer0Delay(Copy_u16Delay, TIMERS_MS);
    3994:	8b 81       	ldd	r24, Y+3	; 0x03
    3996:	9c 81       	ldd	r25, Y+4	; 0x04
    3998:	5c 01       	movw	r10, r24
    399a:	cc 24       	eor	r12, r12
    399c:	dd 24       	eor	r13, r13
    399e:	ee 24       	eor	r14, r14
    39a0:	ff 24       	eor	r15, r15
    39a2:	87 01       	movw	r16, r14
    39a4:	2a 2d       	mov	r18, r10
    39a6:	3b 2d       	mov	r19, r11
    39a8:	4c 2d       	mov	r20, r12
    39aa:	5d 2d       	mov	r21, r13
    39ac:	6e 2d       	mov	r22, r14
    39ae:	7f 2d       	mov	r23, r15
    39b0:	80 2f       	mov	r24, r16
    39b2:	91 2f       	mov	r25, r17
    39b4:	01 e0       	ldi	r16, 0x01	; 1
    39b6:	0e 94 b4 0a 	call	0x1568	; 0x1568 <TIMERS_voidTimer0Delay>
    39ba:	e4 c0       	rjmp	.+456    	; 0x3b84 <LED_voidBlinkLED+0x2fa>
					break;
				}
				case LED_MICRO_SECOND:
				{
					TIMERS_voidTimer0Delay(Copy_u16Delay, TIMERS_US);
    39bc:	8b 81       	ldd	r24, Y+3	; 0x03
    39be:	9c 81       	ldd	r25, Y+4	; 0x04
    39c0:	5c 01       	movw	r10, r24
    39c2:	cc 24       	eor	r12, r12
    39c4:	dd 24       	eor	r13, r13
    39c6:	ee 24       	eor	r14, r14
    39c8:	ff 24       	eor	r15, r15
    39ca:	87 01       	movw	r16, r14
    39cc:	2a 2d       	mov	r18, r10
    39ce:	3b 2d       	mov	r19, r11
    39d0:	4c 2d       	mov	r20, r12
    39d2:	5d 2d       	mov	r21, r13
    39d4:	6e 2d       	mov	r22, r14
    39d6:	7f 2d       	mov	r23, r15
    39d8:	80 2f       	mov	r24, r16
    39da:	91 2f       	mov	r25, r17
    39dc:	00 e0       	ldi	r16, 0x00	; 0
    39de:	0e 94 b4 0a 	call	0x1568	; 0x1568 <TIMERS_voidTimer0Delay>
					DIO_u8SetPinValue(LEDS[Copy_u8ID].u8Port, LEDS[Copy_u8ID].u8Pin, DIO_PIN_LOW);
    39e2:	8a 81       	ldd	r24, Y+2	; 0x02
    39e4:	88 2f       	mov	r24, r24
    39e6:	90 e0       	ldi	r25, 0x00	; 0
    39e8:	88 0f       	add	r24, r24
    39ea:	99 1f       	adc	r25, r25
    39ec:	fc 01       	movw	r30, r24
    39ee:	e2 58       	subi	r30, 0x82	; 130
    39f0:	fe 4f       	sbci	r31, 0xFE	; 254
    39f2:	20 81       	ld	r18, Z
    39f4:	8a 81       	ldd	r24, Y+2	; 0x02
    39f6:	88 2f       	mov	r24, r24
    39f8:	90 e0       	ldi	r25, 0x00	; 0
    39fa:	88 0f       	add	r24, r24
    39fc:	99 1f       	adc	r25, r25
    39fe:	fc 01       	movw	r30, r24
    3a00:	e1 58       	subi	r30, 0x81	; 129
    3a02:	fe 4f       	sbci	r31, 0xFE	; 254
    3a04:	90 81       	ld	r25, Z
    3a06:	82 2f       	mov	r24, r18
    3a08:	69 2f       	mov	r22, r25
    3a0a:	40 e0       	ldi	r20, 0x00	; 0
    3a0c:	0e 94 9d 18 	call	0x313a	; 0x313a <DIO_u8SetPinValue>
					TIMERS_voidTimer0Delay(Copy_u16Delay, TIMERS_US);
    3a10:	8b 81       	ldd	r24, Y+3	; 0x03
    3a12:	9c 81       	ldd	r25, Y+4	; 0x04
    3a14:	5c 01       	movw	r10, r24
    3a16:	cc 24       	eor	r12, r12
    3a18:	dd 24       	eor	r13, r13
    3a1a:	ee 24       	eor	r14, r14
    3a1c:	ff 24       	eor	r15, r15
    3a1e:	87 01       	movw	r16, r14
    3a20:	2a 2d       	mov	r18, r10
    3a22:	3b 2d       	mov	r19, r11
    3a24:	4c 2d       	mov	r20, r12
    3a26:	5d 2d       	mov	r21, r13
    3a28:	6e 2d       	mov	r22, r14
    3a2a:	7f 2d       	mov	r23, r15
    3a2c:	80 2f       	mov	r24, r16
    3a2e:	91 2f       	mov	r25, r17
    3a30:	00 e0       	ldi	r16, 0x00	; 0
    3a32:	0e 94 b4 0a 	call	0x1568	; 0x1568 <TIMERS_voidTimer0Delay>
    3a36:	a6 c0       	rjmp	.+332    	; 0x3b84 <LED_voidBlinkLED+0x2fa>
					break;
				}
			}

		}
		else if (Local_u8PinState == 1)
    3a38:	89 81       	ldd	r24, Y+1	; 0x01
    3a3a:	81 30       	cpi	r24, 0x01	; 1
    3a3c:	09 f0       	breq	.+2      	; 0x3a40 <LED_voidBlinkLED+0x1b6>
    3a3e:	a2 c0       	rjmp	.+324    	; 0x3b84 <LED_voidBlinkLED+0x2fa>
		{
			DIO_u8SetPinValue(LEDS[Copy_u8ID].u8Port, LEDS[Copy_u8ID].u8Pin, DIO_PIN_LOW);
    3a40:	8a 81       	ldd	r24, Y+2	; 0x02
    3a42:	88 2f       	mov	r24, r24
    3a44:	90 e0       	ldi	r25, 0x00	; 0
    3a46:	88 0f       	add	r24, r24
    3a48:	99 1f       	adc	r25, r25
    3a4a:	fc 01       	movw	r30, r24
    3a4c:	e2 58       	subi	r30, 0x82	; 130
    3a4e:	fe 4f       	sbci	r31, 0xFE	; 254
    3a50:	20 81       	ld	r18, Z
    3a52:	8a 81       	ldd	r24, Y+2	; 0x02
    3a54:	88 2f       	mov	r24, r24
    3a56:	90 e0       	ldi	r25, 0x00	; 0
    3a58:	88 0f       	add	r24, r24
    3a5a:	99 1f       	adc	r25, r25
    3a5c:	fc 01       	movw	r30, r24
    3a5e:	e1 58       	subi	r30, 0x81	; 129
    3a60:	fe 4f       	sbci	r31, 0xFE	; 254
    3a62:	90 81       	ld	r25, Z
    3a64:	82 2f       	mov	r24, r18
    3a66:	69 2f       	mov	r22, r25
    3a68:	40 e0       	ldi	r20, 0x00	; 0
    3a6a:	0e 94 9d 18 	call	0x313a	; 0x313a <DIO_u8SetPinValue>
			switch (Copy_u8DelayType)
    3a6e:	8d 81       	ldd	r24, Y+5	; 0x05
    3a70:	28 2f       	mov	r18, r24
    3a72:	30 e0       	ldi	r19, 0x00	; 0
    3a74:	3f 83       	std	Y+7, r19	; 0x07
    3a76:	2e 83       	std	Y+6, r18	; 0x06
    3a78:	8e 81       	ldd	r24, Y+6	; 0x06
    3a7a:	9f 81       	ldd	r25, Y+7	; 0x07
    3a7c:	00 97       	sbiw	r24, 0x00	; 0
    3a7e:	39 f0       	breq	.+14     	; 0x3a8e <LED_voidBlinkLED+0x204>
    3a80:	2e 81       	ldd	r18, Y+6	; 0x06
    3a82:	3f 81       	ldd	r19, Y+7	; 0x07
    3a84:	21 30       	cpi	r18, 0x01	; 1
    3a86:	31 05       	cpc	r19, r1
    3a88:	09 f4       	brne	.+2      	; 0x3a8c <LED_voidBlinkLED+0x202>
    3a8a:	3f c0       	rjmp	.+126    	; 0x3b0a <LED_voidBlinkLED+0x280>
    3a8c:	7b c0       	rjmp	.+246    	; 0x3b84 <LED_voidBlinkLED+0x2fa>
			{
				case LED_MILLI_SECOND:
				{
					TIMERS_voidTimer0Delay(Copy_u16Delay, TIMERS_MS);
    3a8e:	8b 81       	ldd	r24, Y+3	; 0x03
    3a90:	9c 81       	ldd	r25, Y+4	; 0x04
    3a92:	5c 01       	movw	r10, r24
    3a94:	cc 24       	eor	r12, r12
    3a96:	dd 24       	eor	r13, r13
    3a98:	ee 24       	eor	r14, r14
    3a9a:	ff 24       	eor	r15, r15
    3a9c:	87 01       	movw	r16, r14
    3a9e:	2a 2d       	mov	r18, r10
    3aa0:	3b 2d       	mov	r19, r11
    3aa2:	4c 2d       	mov	r20, r12
    3aa4:	5d 2d       	mov	r21, r13
    3aa6:	6e 2d       	mov	r22, r14
    3aa8:	7f 2d       	mov	r23, r15
    3aaa:	80 2f       	mov	r24, r16
    3aac:	91 2f       	mov	r25, r17
    3aae:	01 e0       	ldi	r16, 0x01	; 1
    3ab0:	0e 94 b4 0a 	call	0x1568	; 0x1568 <TIMERS_voidTimer0Delay>
					DIO_u8SetPinValue(LEDS[Copy_u8ID].u8Port, LEDS[Copy_u8ID].u8Pin, DIO_PIN_HIGH);
    3ab4:	8a 81       	ldd	r24, Y+2	; 0x02
    3ab6:	88 2f       	mov	r24, r24
    3ab8:	90 e0       	ldi	r25, 0x00	; 0
    3aba:	88 0f       	add	r24, r24
    3abc:	99 1f       	adc	r25, r25
    3abe:	fc 01       	movw	r30, r24
    3ac0:	e2 58       	subi	r30, 0x82	; 130
    3ac2:	fe 4f       	sbci	r31, 0xFE	; 254
    3ac4:	20 81       	ld	r18, Z
    3ac6:	8a 81       	ldd	r24, Y+2	; 0x02
    3ac8:	88 2f       	mov	r24, r24
    3aca:	90 e0       	ldi	r25, 0x00	; 0
    3acc:	88 0f       	add	r24, r24
    3ace:	99 1f       	adc	r25, r25
    3ad0:	fc 01       	movw	r30, r24
    3ad2:	e1 58       	subi	r30, 0x81	; 129
    3ad4:	fe 4f       	sbci	r31, 0xFE	; 254
    3ad6:	90 81       	ld	r25, Z
    3ad8:	82 2f       	mov	r24, r18
    3ada:	69 2f       	mov	r22, r25
    3adc:	41 e0       	ldi	r20, 0x01	; 1
    3ade:	0e 94 9d 18 	call	0x313a	; 0x313a <DIO_u8SetPinValue>
					TIMERS_voidTimer0Delay(Copy_u16Delay, TIMERS_MS);
    3ae2:	8b 81       	ldd	r24, Y+3	; 0x03
    3ae4:	9c 81       	ldd	r25, Y+4	; 0x04
    3ae6:	5c 01       	movw	r10, r24
    3ae8:	cc 24       	eor	r12, r12
    3aea:	dd 24       	eor	r13, r13
    3aec:	ee 24       	eor	r14, r14
    3aee:	ff 24       	eor	r15, r15
    3af0:	87 01       	movw	r16, r14
    3af2:	2a 2d       	mov	r18, r10
    3af4:	3b 2d       	mov	r19, r11
    3af6:	4c 2d       	mov	r20, r12
    3af8:	5d 2d       	mov	r21, r13
    3afa:	6e 2d       	mov	r22, r14
    3afc:	7f 2d       	mov	r23, r15
    3afe:	80 2f       	mov	r24, r16
    3b00:	91 2f       	mov	r25, r17
    3b02:	01 e0       	ldi	r16, 0x01	; 1
    3b04:	0e 94 b4 0a 	call	0x1568	; 0x1568 <TIMERS_voidTimer0Delay>
    3b08:	3d c0       	rjmp	.+122    	; 0x3b84 <LED_voidBlinkLED+0x2fa>
					break;
				}
				case LED_MICRO_SECOND:
				{
					TIMERS_voidTimer0Delay(Copy_u16Delay, TIMERS_US);
    3b0a:	8b 81       	ldd	r24, Y+3	; 0x03
    3b0c:	9c 81       	ldd	r25, Y+4	; 0x04
    3b0e:	5c 01       	movw	r10, r24
    3b10:	cc 24       	eor	r12, r12
    3b12:	dd 24       	eor	r13, r13
    3b14:	ee 24       	eor	r14, r14
    3b16:	ff 24       	eor	r15, r15
    3b18:	87 01       	movw	r16, r14
    3b1a:	2a 2d       	mov	r18, r10
    3b1c:	3b 2d       	mov	r19, r11
    3b1e:	4c 2d       	mov	r20, r12
    3b20:	5d 2d       	mov	r21, r13
    3b22:	6e 2d       	mov	r22, r14
    3b24:	7f 2d       	mov	r23, r15
    3b26:	80 2f       	mov	r24, r16
    3b28:	91 2f       	mov	r25, r17
    3b2a:	00 e0       	ldi	r16, 0x00	; 0
    3b2c:	0e 94 b4 0a 	call	0x1568	; 0x1568 <TIMERS_voidTimer0Delay>
					DIO_u8SetPinValue(LEDS[Copy_u8ID].u8Port, LEDS[Copy_u8ID].u8Pin, DIO_PIN_HIGH);
    3b30:	8a 81       	ldd	r24, Y+2	; 0x02
    3b32:	88 2f       	mov	r24, r24
    3b34:	90 e0       	ldi	r25, 0x00	; 0
    3b36:	88 0f       	add	r24, r24
    3b38:	99 1f       	adc	r25, r25
    3b3a:	fc 01       	movw	r30, r24
    3b3c:	e2 58       	subi	r30, 0x82	; 130
    3b3e:	fe 4f       	sbci	r31, 0xFE	; 254
    3b40:	20 81       	ld	r18, Z
    3b42:	8a 81       	ldd	r24, Y+2	; 0x02
    3b44:	88 2f       	mov	r24, r24
    3b46:	90 e0       	ldi	r25, 0x00	; 0
    3b48:	88 0f       	add	r24, r24
    3b4a:	99 1f       	adc	r25, r25
    3b4c:	fc 01       	movw	r30, r24
    3b4e:	e1 58       	subi	r30, 0x81	; 129
    3b50:	fe 4f       	sbci	r31, 0xFE	; 254
    3b52:	90 81       	ld	r25, Z
    3b54:	82 2f       	mov	r24, r18
    3b56:	69 2f       	mov	r22, r25
    3b58:	41 e0       	ldi	r20, 0x01	; 1
    3b5a:	0e 94 9d 18 	call	0x313a	; 0x313a <DIO_u8SetPinValue>
					TIMERS_voidTimer0Delay(Copy_u16Delay, TIMERS_US);
    3b5e:	8b 81       	ldd	r24, Y+3	; 0x03
    3b60:	9c 81       	ldd	r25, Y+4	; 0x04
    3b62:	5c 01       	movw	r10, r24
    3b64:	cc 24       	eor	r12, r12
    3b66:	dd 24       	eor	r13, r13
    3b68:	ee 24       	eor	r14, r14
    3b6a:	ff 24       	eor	r15, r15
    3b6c:	87 01       	movw	r16, r14
    3b6e:	2a 2d       	mov	r18, r10
    3b70:	3b 2d       	mov	r19, r11
    3b72:	4c 2d       	mov	r20, r12
    3b74:	5d 2d       	mov	r21, r13
    3b76:	6e 2d       	mov	r22, r14
    3b78:	7f 2d       	mov	r23, r15
    3b7a:	80 2f       	mov	r24, r16
    3b7c:	91 2f       	mov	r25, r17
    3b7e:	00 e0       	ldi	r16, 0x00	; 0
    3b80:	0e 94 b4 0a 	call	0x1568	; 0x1568 <TIMERS_voidTimer0Delay>
			}
		}
	#else
		#error "LED Connection Type Error"
	#endif
}
    3b84:	29 96       	adiw	r28, 0x09	; 9
    3b86:	0f b6       	in	r0, 0x3f	; 63
    3b88:	f8 94       	cli
    3b8a:	de bf       	out	0x3e, r29	; 62
    3b8c:	0f be       	out	0x3f, r0	; 63
    3b8e:	cd bf       	out	0x3d, r28	; 61
    3b90:	cf 91       	pop	r28
    3b92:	df 91       	pop	r29
    3b94:	1f 91       	pop	r17
    3b96:	0f 91       	pop	r16
    3b98:	ff 90       	pop	r15
    3b9a:	ef 90       	pop	r14
    3b9c:	df 90       	pop	r13
    3b9e:	cf 90       	pop	r12
    3ba0:	bf 90       	pop	r11
    3ba2:	af 90       	pop	r10
    3ba4:	08 95       	ret

00003ba6 <Int>:
#include "MCAL/GIE/GIE_interface.h"
#include "MCAL/EXTI/EXTI_interface.h"
#include "ECUAL/LED/LED_interface.h"

void Int (void)
{
    3ba6:	0f 93       	push	r16
    3ba8:	df 93       	push	r29
    3baa:	cf 93       	push	r28
    3bac:	cd b7       	in	r28, 0x3d	; 61
    3bae:	de b7       	in	r29, 0x3e	; 62
	LED_voidTurnOffGroupOfLEDS(9, 16);
    3bb0:	89 e0       	ldi	r24, 0x09	; 9
    3bb2:	60 e1       	ldi	r22, 0x10	; 16
    3bb4:	0e 94 53 1b 	call	0x36a6	; 0x36a6 <LED_voidTurnOffGroupOfLEDS>
	DIO_u8SetPortValue(DIO_PORTC, DIO_PORT_LOW);
    3bb8:	82 e0       	ldi	r24, 0x02	; 2
    3bba:	60 e0       	ldi	r22, 0x00	; 0
    3bbc:	0e 94 e9 16 	call	0x2dd2	; 0x2dd2 <DIO_u8SetPortValue>
	TIMERS_voidTimer0Delay(500, TIMERS_MS);
    3bc0:	24 ef       	ldi	r18, 0xF4	; 244
    3bc2:	31 e0       	ldi	r19, 0x01	; 1
    3bc4:	40 e0       	ldi	r20, 0x00	; 0
    3bc6:	50 e0       	ldi	r21, 0x00	; 0
    3bc8:	60 e0       	ldi	r22, 0x00	; 0
    3bca:	70 e0       	ldi	r23, 0x00	; 0
    3bcc:	80 e0       	ldi	r24, 0x00	; 0
    3bce:	90 e0       	ldi	r25, 0x00	; 0
    3bd0:	01 e0       	ldi	r16, 0x01	; 1
    3bd2:	0e 94 b4 0a 	call	0x1568	; 0x1568 <TIMERS_voidTimer0Delay>
}
    3bd6:	cf 91       	pop	r28
    3bd8:	df 91       	pop	r29
    3bda:	0f 91       	pop	r16
    3bdc:	08 95       	ret

00003bde <main>:

int main(void)
{
    3bde:	0f 93       	push	r16
    3be0:	df 93       	push	r29
    3be2:	cf 93       	push	r28
    3be4:	cd b7       	in	r28, 0x3d	; 61
    3be6:	de b7       	in	r29, 0x3e	; 62
	LED_voidInitGroupOfLEDS(0, 7, DIO_PORTC, DIO_PIN0);
    3be8:	80 e0       	ldi	r24, 0x00	; 0
    3bea:	67 e0       	ldi	r22, 0x07	; 7
    3bec:	42 e0       	ldi	r20, 0x02	; 2
    3bee:	20 e0       	ldi	r18, 0x00	; 0
    3bf0:	0e 94 81 1a 	call	0x3502	; 0x3502 <LED_voidInitGroupOfLEDS>
	LED_voidInitLED(8, DIO_PORTB, DIO_PIN5);
    3bf4:	88 e0       	ldi	r24, 0x08	; 8
    3bf6:	61 e0       	ldi	r22, 0x01	; 1
    3bf8:	45 e0       	ldi	r20, 0x05	; 5
    3bfa:	0e 94 47 1a 	call	0x348e	; 0x348e <LED_voidInitLED>

	DIO_u8SetPinDirection(DIO_PORTD, DIO_PIN0, DIO_PIN_INPUT);
    3bfe:	83 e0       	ldi	r24, 0x03	; 3
    3c00:	60 e0       	ldi	r22, 0x00	; 0
    3c02:	40 e0       	ldi	r20, 0x00	; 0
    3c04:	0e 94 8b 17 	call	0x2f16	; 0x2f16 <DIO_u8SetPinDirection>
	DIO_u8SetPinValue(DIO_PORTD, DIO_PIN0, DIO_PIN_HIGH);
    3c08:	83 e0       	ldi	r24, 0x03	; 3
    3c0a:	60 e0       	ldi	r22, 0x00	; 0
    3c0c:	41 e0       	ldi	r20, 0x01	; 1
    3c0e:	0e 94 9d 18 	call	0x313a	; 0x313a <DIO_u8SetPinValue>
	EXTI_voidInit();
    3c12:	0e 94 98 14 	call	0x2930	; 0x2930 <EXTI_voidInit>
	GIE_voidEnableGlobalInterrupt();
    3c16:	0e 94 7c 14 	call	0x28f8	; 0x28f8 <GIE_voidEnableGlobalInterrupt>
	EXTI_voidInt0SetCallBack(&Int);
    3c1a:	83 ed       	ldi	r24, 0xD3	; 211
    3c1c:	9d e1       	ldi	r25, 0x1D	; 29
    3c1e:	0e 94 d2 15 	call	0x2ba4	; 0x2ba4 <EXTI_voidInt0SetCallBack>
	LED_voidInitGroupOfLEDS(9, 16, DIO_PORTB, DIO_PIN0);
    3c22:	89 e0       	ldi	r24, 0x09	; 9
    3c24:	60 e1       	ldi	r22, 0x10	; 16
    3c26:	41 e0       	ldi	r20, 0x01	; 1
    3c28:	20 e0       	ldi	r18, 0x00	; 0
    3c2a:	0e 94 81 1a 	call	0x3502	; 0x3502 <LED_voidInitGroupOfLEDS>

	while(1)
	{
		LED_voidTurnOnLED(0);
    3c2e:	80 e0       	ldi	r24, 0x00	; 0
    3c30:	0e 94 e2 1a 	call	0x35c4	; 0x35c4 <LED_voidTurnOnLED>
		LED_voidTurnOnGroupOfLEDS(1, 8);
    3c34:	81 e0       	ldi	r24, 0x01	; 1
    3c36:	68 e0       	ldi	r22, 0x08	; 8
    3c38:	0e 94 03 1b 	call	0x3606	; 0x3606 <LED_voidTurnOnGroupOfLEDS>
		TIMERS_voidTimer0Delay(500, TIMERS_MS);
    3c3c:	24 ef       	ldi	r18, 0xF4	; 244
    3c3e:	31 e0       	ldi	r19, 0x01	; 1
    3c40:	40 e0       	ldi	r20, 0x00	; 0
    3c42:	50 e0       	ldi	r21, 0x00	; 0
    3c44:	60 e0       	ldi	r22, 0x00	; 0
    3c46:	70 e0       	ldi	r23, 0x00	; 0
    3c48:	80 e0       	ldi	r24, 0x00	; 0
    3c4a:	90 e0       	ldi	r25, 0x00	; 0
    3c4c:	01 e0       	ldi	r16, 0x01	; 1
    3c4e:	0e 94 b4 0a 	call	0x1568	; 0x1568 <TIMERS_voidTimer0Delay>
		LED_voidTurnOffGroupOfLEDS(0, 8);
    3c52:	80 e0       	ldi	r24, 0x00	; 0
    3c54:	68 e0       	ldi	r22, 0x08	; 8
    3c56:	0e 94 53 1b 	call	0x36a6	; 0x36a6 <LED_voidTurnOffGroupOfLEDS>
		TIMERS_voidTimer0Delay(500, TIMERS_MS);
    3c5a:	24 ef       	ldi	r18, 0xF4	; 244
    3c5c:	31 e0       	ldi	r19, 0x01	; 1
    3c5e:	40 e0       	ldi	r20, 0x00	; 0
    3c60:	50 e0       	ldi	r21, 0x00	; 0
    3c62:	60 e0       	ldi	r22, 0x00	; 0
    3c64:	70 e0       	ldi	r23, 0x00	; 0
    3c66:	80 e0       	ldi	r24, 0x00	; 0
    3c68:	90 e0       	ldi	r25, 0x00	; 0
    3c6a:	01 e0       	ldi	r16, 0x01	; 1
    3c6c:	0e 94 b4 0a 	call	0x1568	; 0x1568 <TIMERS_voidTimer0Delay>
    3c70:	de cf       	rjmp	.-68     	; 0x3c2e <main+0x50>

00003c72 <__mulsi3>:
    3c72:	62 9f       	mul	r22, r18
    3c74:	d0 01       	movw	r26, r0
    3c76:	73 9f       	mul	r23, r19
    3c78:	f0 01       	movw	r30, r0
    3c7a:	82 9f       	mul	r24, r18
    3c7c:	e0 0d       	add	r30, r0
    3c7e:	f1 1d       	adc	r31, r1
    3c80:	64 9f       	mul	r22, r20
    3c82:	e0 0d       	add	r30, r0
    3c84:	f1 1d       	adc	r31, r1
    3c86:	92 9f       	mul	r25, r18
    3c88:	f0 0d       	add	r31, r0
    3c8a:	83 9f       	mul	r24, r19
    3c8c:	f0 0d       	add	r31, r0
    3c8e:	74 9f       	mul	r23, r20
    3c90:	f0 0d       	add	r31, r0
    3c92:	65 9f       	mul	r22, r21
    3c94:	f0 0d       	add	r31, r0
    3c96:	99 27       	eor	r25, r25
    3c98:	72 9f       	mul	r23, r18
    3c9a:	b0 0d       	add	r27, r0
    3c9c:	e1 1d       	adc	r30, r1
    3c9e:	f9 1f       	adc	r31, r25
    3ca0:	63 9f       	mul	r22, r19
    3ca2:	b0 0d       	add	r27, r0
    3ca4:	e1 1d       	adc	r30, r1
    3ca6:	f9 1f       	adc	r31, r25
    3ca8:	bd 01       	movw	r22, r26
    3caa:	cf 01       	movw	r24, r30
    3cac:	11 24       	eor	r1, r1
    3cae:	08 95       	ret

00003cb0 <__prologue_saves__>:
    3cb0:	2f 92       	push	r2
    3cb2:	3f 92       	push	r3
    3cb4:	4f 92       	push	r4
    3cb6:	5f 92       	push	r5
    3cb8:	6f 92       	push	r6
    3cba:	7f 92       	push	r7
    3cbc:	8f 92       	push	r8
    3cbe:	9f 92       	push	r9
    3cc0:	af 92       	push	r10
    3cc2:	bf 92       	push	r11
    3cc4:	cf 92       	push	r12
    3cc6:	df 92       	push	r13
    3cc8:	ef 92       	push	r14
    3cca:	ff 92       	push	r15
    3ccc:	0f 93       	push	r16
    3cce:	1f 93       	push	r17
    3cd0:	cf 93       	push	r28
    3cd2:	df 93       	push	r29
    3cd4:	cd b7       	in	r28, 0x3d	; 61
    3cd6:	de b7       	in	r29, 0x3e	; 62
    3cd8:	ca 1b       	sub	r28, r26
    3cda:	db 0b       	sbc	r29, r27
    3cdc:	0f b6       	in	r0, 0x3f	; 63
    3cde:	f8 94       	cli
    3ce0:	de bf       	out	0x3e, r29	; 62
    3ce2:	0f be       	out	0x3f, r0	; 63
    3ce4:	cd bf       	out	0x3d, r28	; 61
    3ce6:	09 94       	ijmp

00003ce8 <__epilogue_restores__>:
    3ce8:	2a 88       	ldd	r2, Y+18	; 0x12
    3cea:	39 88       	ldd	r3, Y+17	; 0x11
    3cec:	48 88       	ldd	r4, Y+16	; 0x10
    3cee:	5f 84       	ldd	r5, Y+15	; 0x0f
    3cf0:	6e 84       	ldd	r6, Y+14	; 0x0e
    3cf2:	7d 84       	ldd	r7, Y+13	; 0x0d
    3cf4:	8c 84       	ldd	r8, Y+12	; 0x0c
    3cf6:	9b 84       	ldd	r9, Y+11	; 0x0b
    3cf8:	aa 84       	ldd	r10, Y+10	; 0x0a
    3cfa:	b9 84       	ldd	r11, Y+9	; 0x09
    3cfc:	c8 84       	ldd	r12, Y+8	; 0x08
    3cfe:	df 80       	ldd	r13, Y+7	; 0x07
    3d00:	ee 80       	ldd	r14, Y+6	; 0x06
    3d02:	fd 80       	ldd	r15, Y+5	; 0x05
    3d04:	0c 81       	ldd	r16, Y+4	; 0x04
    3d06:	1b 81       	ldd	r17, Y+3	; 0x03
    3d08:	aa 81       	ldd	r26, Y+2	; 0x02
    3d0a:	b9 81       	ldd	r27, Y+1	; 0x01
    3d0c:	ce 0f       	add	r28, r30
    3d0e:	d1 1d       	adc	r29, r1
    3d10:	0f b6       	in	r0, 0x3f	; 63
    3d12:	f8 94       	cli
    3d14:	de bf       	out	0x3e, r29	; 62
    3d16:	0f be       	out	0x3f, r0	; 63
    3d18:	cd bf       	out	0x3d, r28	; 61
    3d1a:	ed 01       	movw	r28, r26
    3d1c:	08 95       	ret

00003d1e <_exit>:
    3d1e:	f8 94       	cli

00003d20 <__stop_program>:
    3d20:	ff cf       	rjmp	.-2      	; 0x3d20 <__stop_program>
